{"ast":null,"code":"function splitValues(value) {\n  if (typeof value === 'number') {\n    return [value];\n  }\n\n  var splitStyle = String(value).split(/\\s+/); // Combine styles split in brackets, like `calc(1px + 2px)`\n\n  var temp = '';\n  var brackets = 0;\n  return splitStyle.reduce(function (list, item) {\n    if (item.includes('(')) {\n      temp += item;\n      brackets += item.split('(').length - 1;\n    } else if (item.includes(')')) {\n      temp += item;\n      brackets -= item.split(')').length - 1;\n\n      if (brackets === 0) {\n        list.push(temp);\n        temp = '';\n      }\n    } else if (brackets > 0) {\n      temp += item;\n    } else {\n      list.push(item);\n    }\n\n    return list;\n  }, []);\n}\n\nfunction noSplit(list) {\n  list.notSplit = true;\n  return list;\n}\n\nvar keyMap = {\n  // Inset\n  inset: ['top', 'right', 'bottom', 'left'],\n  insetBlock: ['top', 'bottom'],\n  insetBlockStart: ['top'],\n  insetBlockEnd: ['bottom'],\n  insetInline: ['left', 'right'],\n  insetInlineStart: ['left'],\n  insetInlineEnd: ['right'],\n  // Margin\n  marginBlock: ['marginTop', 'marginBottom'],\n  marginBlockStart: ['marginTop'],\n  marginBlockEnd: ['marginBottom'],\n  marginInline: ['marginLeft', 'marginRight'],\n  marginInlineStart: ['marginLeft'],\n  marginInlineEnd: ['marginRight'],\n  // Padding\n  paddingBlock: ['paddingTop', 'paddingBottom'],\n  paddingBlockStart: ['paddingTop'],\n  paddingBlockEnd: ['paddingBottom'],\n  paddingInline: ['paddingLeft', 'paddingRight'],\n  paddingInlineStart: ['paddingLeft'],\n  paddingInlineEnd: ['paddingRight'],\n  // Border\n  borderBlock: noSplit(['borderTop', 'borderBottom']),\n  borderBlockStart: noSplit(['borderTop']),\n  borderBlockEnd: noSplit(['borderBottom']),\n  borderInline: noSplit(['borderLeft', 'borderRight']),\n  borderInlineStart: noSplit(['borderLeft']),\n  borderInlineEnd: noSplit(['borderRight']),\n  // Border width\n  borderBlockWidth: ['borderTopWidth', 'borderBottomWidth'],\n  borderBlockStartWidth: ['borderTopWidth'],\n  borderBlockEndWidth: ['borderBottomWidth'],\n  borderInlineWidth: ['borderLeftWidth', 'borderRightWidth'],\n  borderInlineStartWidth: ['borderLeftWidth'],\n  borderInlineEndWidth: ['borderRightWidth'],\n  // Border style\n  borderBlockStyle: ['borderTopStyle', 'borderBottomStyle'],\n  borderBlockStartStyle: ['borderTopStyle'],\n  borderBlockEndStyle: ['borderBottomStyle'],\n  borderInlineStyle: ['borderLeftStyle', 'borderRightStyle'],\n  borderInlineStartStyle: ['borderLeftStyle'],\n  borderInlineEndStyle: ['borderRightStyle'],\n  // Border color\n  borderBlockColor: ['borderTopColor', 'borderBottomColor'],\n  borderBlockStartColor: ['borderTopColor'],\n  borderBlockEndColor: ['borderBottomColor'],\n  borderInlineColor: ['borderLeftColor', 'borderRightColor'],\n  borderInlineStartColor: ['borderLeftColor'],\n  borderInlineEndColor: ['borderRightColor'],\n  // Border radius\n  borderStartStartRadius: ['borderTopLeftRadius'],\n  borderStartEndRadius: ['borderTopRightRadius'],\n  borderEndStartRadius: ['borderBottomLeftRadius'],\n  borderEndEndRadius: ['borderBottomRightRadius']\n};\n\nfunction skipCheck(value) {\n  return {\n    _skip_check_: true,\n    value: value\n  };\n}\n/**\n * Convert css logical properties to legacy properties.\n * Such as: `margin-block-start` to `margin-top`.\n * Transform list:\n * - inset\n * - margin\n * - padding\n * - border\n */\n\n\nvar transform = {\n  visit: function visit(cssObj) {\n    var clone = {};\n    Object.keys(cssObj).forEach(function (key) {\n      var value = cssObj[key];\n      var matchValue = keyMap[key];\n\n      if (matchValue && (typeof value === 'number' || typeof value === 'string')) {\n        var values = splitValues(value);\n\n        if (matchValue.length && matchValue.notSplit) {\n          // not split means always give same value like border\n          matchValue.forEach(function (matchKey) {\n            clone[matchKey] = skipCheck(value);\n          });\n        } else if (matchValue.length === 1) {\n          // Handle like `marginBlockStart` => `marginTop`\n          clone[matchValue[0]] = skipCheck(value);\n        } else if (matchValue.length === 2) {\n          // Handle like `marginBlock` => `marginTop` & `marginBottom`\n          matchValue.forEach(function (matchKey, index) {\n            var _values$index;\n\n            clone[matchKey] = skipCheck((_values$index = values[index]) !== null && _values$index !== void 0 ? _values$index : values[0]);\n          });\n        } else if (matchValue.length === 4) {\n          // Handle like `inset` => `top` & `right` & `bottom` & `left`\n          matchValue.forEach(function (matchKey, index) {\n            var _ref, _values$index2;\n\n            clone[matchKey] = skipCheck((_ref = (_values$index2 = values[index]) !== null && _values$index2 !== void 0 ? _values$index2 : values[index - 2]) !== null && _ref !== void 0 ? _ref : values[0]);\n          });\n        } else {\n          clone[key] = value;\n        }\n      } else {\n        clone[key] = value;\n      }\n    });\n    return clone;\n  }\n};\nexport default transform;","map":{"version":3,"names":["splitValues","value","splitStyle","String","split","temp","brackets","reduce","list","item","includes","length","push","noSplit","notSplit","keyMap","inset","insetBlock","insetBlockStart","insetBlockEnd","insetInline","insetInlineStart","insetInlineEnd","marginBlock","marginBlockStart","marginBlockEnd","marginInline","marginInlineStart","marginInlineEnd","paddingBlock","paddingBlockStart","paddingBlockEnd","paddingInline","paddingInlineStart","paddingInlineEnd","borderBlock","borderBlockStart","borderBlockEnd","borderInline","borderInlineStart","borderInlineEnd","borderBlockWidth","borderBlockStartWidth","borderBlockEndWidth","borderInlineWidth","borderInlineStartWidth","borderInlineEndWidth","borderBlockStyle","borderBlockStartStyle","borderBlockEndStyle","borderInlineStyle","borderInlineStartStyle","borderInlineEndStyle","borderBlockColor","borderBlockStartColor","borderBlockEndColor","borderInlineColor","borderInlineStartColor","borderInlineEndColor","borderStartStartRadius","borderStartEndRadius","borderEndStartRadius","borderEndEndRadius","skipCheck","_skip_check_","transform","visit","cssObj","clone","Object","keys","forEach","key","matchValue","values","matchKey","index","_values$index","_ref","_values$index2"],"sources":["C:/Users/scs/OneDrive/Desktop/react-youtube-clone-master/client/node_modules/@ant-design/cssinjs/es/transformers/legacyLogicalProperties.js"],"sourcesContent":["function splitValues(value) {\n  if (typeof value === 'number') {\n    return [value];\n  }\n\n  var splitStyle = String(value).split(/\\s+/); // Combine styles split in brackets, like `calc(1px + 2px)`\n\n  var temp = '';\n  var brackets = 0;\n  return splitStyle.reduce(function (list, item) {\n    if (item.includes('(')) {\n      temp += item;\n      brackets += item.split('(').length - 1;\n    } else if (item.includes(')')) {\n      temp += item;\n      brackets -= item.split(')').length - 1;\n\n      if (brackets === 0) {\n        list.push(temp);\n        temp = '';\n      }\n    } else if (brackets > 0) {\n      temp += item;\n    } else {\n      list.push(item);\n    }\n\n    return list;\n  }, []);\n}\n\nfunction noSplit(list) {\n  list.notSplit = true;\n  return list;\n}\n\nvar keyMap = {\n  // Inset\n  inset: ['top', 'right', 'bottom', 'left'],\n  insetBlock: ['top', 'bottom'],\n  insetBlockStart: ['top'],\n  insetBlockEnd: ['bottom'],\n  insetInline: ['left', 'right'],\n  insetInlineStart: ['left'],\n  insetInlineEnd: ['right'],\n  // Margin\n  marginBlock: ['marginTop', 'marginBottom'],\n  marginBlockStart: ['marginTop'],\n  marginBlockEnd: ['marginBottom'],\n  marginInline: ['marginLeft', 'marginRight'],\n  marginInlineStart: ['marginLeft'],\n  marginInlineEnd: ['marginRight'],\n  // Padding\n  paddingBlock: ['paddingTop', 'paddingBottom'],\n  paddingBlockStart: ['paddingTop'],\n  paddingBlockEnd: ['paddingBottom'],\n  paddingInline: ['paddingLeft', 'paddingRight'],\n  paddingInlineStart: ['paddingLeft'],\n  paddingInlineEnd: ['paddingRight'],\n  // Border\n  borderBlock: noSplit(['borderTop', 'borderBottom']),\n  borderBlockStart: noSplit(['borderTop']),\n  borderBlockEnd: noSplit(['borderBottom']),\n  borderInline: noSplit(['borderLeft', 'borderRight']),\n  borderInlineStart: noSplit(['borderLeft']),\n  borderInlineEnd: noSplit(['borderRight']),\n  // Border width\n  borderBlockWidth: ['borderTopWidth', 'borderBottomWidth'],\n  borderBlockStartWidth: ['borderTopWidth'],\n  borderBlockEndWidth: ['borderBottomWidth'],\n  borderInlineWidth: ['borderLeftWidth', 'borderRightWidth'],\n  borderInlineStartWidth: ['borderLeftWidth'],\n  borderInlineEndWidth: ['borderRightWidth'],\n  // Border style\n  borderBlockStyle: ['borderTopStyle', 'borderBottomStyle'],\n  borderBlockStartStyle: ['borderTopStyle'],\n  borderBlockEndStyle: ['borderBottomStyle'],\n  borderInlineStyle: ['borderLeftStyle', 'borderRightStyle'],\n  borderInlineStartStyle: ['borderLeftStyle'],\n  borderInlineEndStyle: ['borderRightStyle'],\n  // Border color\n  borderBlockColor: ['borderTopColor', 'borderBottomColor'],\n  borderBlockStartColor: ['borderTopColor'],\n  borderBlockEndColor: ['borderBottomColor'],\n  borderInlineColor: ['borderLeftColor', 'borderRightColor'],\n  borderInlineStartColor: ['borderLeftColor'],\n  borderInlineEndColor: ['borderRightColor'],\n  // Border radius\n  borderStartStartRadius: ['borderTopLeftRadius'],\n  borderStartEndRadius: ['borderTopRightRadius'],\n  borderEndStartRadius: ['borderBottomLeftRadius'],\n  borderEndEndRadius: ['borderBottomRightRadius']\n};\n\nfunction skipCheck(value) {\n  return {\n    _skip_check_: true,\n    value: value\n  };\n}\n/**\n * Convert css logical properties to legacy properties.\n * Such as: `margin-block-start` to `margin-top`.\n * Transform list:\n * - inset\n * - margin\n * - padding\n * - border\n */\n\n\nvar transform = {\n  visit: function visit(cssObj) {\n    var clone = {};\n    Object.keys(cssObj).forEach(function (key) {\n      var value = cssObj[key];\n      var matchValue = keyMap[key];\n\n      if (matchValue && (typeof value === 'number' || typeof value === 'string')) {\n        var values = splitValues(value);\n\n        if (matchValue.length && matchValue.notSplit) {\n          // not split means always give same value like border\n          matchValue.forEach(function (matchKey) {\n            clone[matchKey] = skipCheck(value);\n          });\n        } else if (matchValue.length === 1) {\n          // Handle like `marginBlockStart` => `marginTop`\n          clone[matchValue[0]] = skipCheck(value);\n        } else if (matchValue.length === 2) {\n          // Handle like `marginBlock` => `marginTop` & `marginBottom`\n          matchValue.forEach(function (matchKey, index) {\n            var _values$index;\n\n            clone[matchKey] = skipCheck((_values$index = values[index]) !== null && _values$index !== void 0 ? _values$index : values[0]);\n          });\n        } else if (matchValue.length === 4) {\n          // Handle like `inset` => `top` & `right` & `bottom` & `left`\n          matchValue.forEach(function (matchKey, index) {\n            var _ref, _values$index2;\n\n            clone[matchKey] = skipCheck((_ref = (_values$index2 = values[index]) !== null && _values$index2 !== void 0 ? _values$index2 : values[index - 2]) !== null && _ref !== void 0 ? _ref : values[0]);\n          });\n        } else {\n          clone[key] = value;\n        }\n      } else {\n        clone[key] = value;\n      }\n    });\n    return clone;\n  }\n};\nexport default transform;"],"mappings":"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"},"metadata":{},"sourceType":"module"}