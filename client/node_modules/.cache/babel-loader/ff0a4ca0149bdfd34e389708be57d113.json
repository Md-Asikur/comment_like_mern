{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport TextArea from '../input/TextArea';\n\nvar Editable = /*#__PURE__*/function (_React$Component) {\n  _inherits(Editable, _React$Component);\n\n  function Editable() {\n    var _this;\n\n    _classCallCheck(this, Editable);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Editable).apply(this, arguments));\n    _this.inComposition = false;\n    _this.state = {\n      current: ''\n    };\n\n    _this.onChange = function (_ref) {\n      var value = _ref.target.value;\n\n      _this.setState({\n        current: value.replace(/[\\r\\n]/g, '')\n      });\n    };\n\n    _this.onCompositionStart = function () {\n      _this.inComposition = true;\n    };\n\n    _this.onCompositionEnd = function () {\n      _this.inComposition = false;\n    };\n\n    _this.onKeyDown = function (_ref2) {\n      var keyCode = _ref2.keyCode; // We don't record keyCode when IME is using\n\n      if (_this.inComposition) return;\n      _this.lastKeyCode = keyCode;\n    };\n\n    _this.onKeyUp = function (_ref3) {\n      var keyCode = _ref3.keyCode,\n          ctrlKey = _ref3.ctrlKey,\n          altKey = _ref3.altKey,\n          metaKey = _ref3.metaKey,\n          shiftKey = _ref3.shiftKey;\n      var onCancel = _this.props.onCancel; // Check if it's a real key\n\n      if (_this.lastKeyCode === keyCode && !_this.inComposition && !ctrlKey && !altKey && !metaKey && !shiftKey) {\n        if (keyCode === KeyCode.ENTER) {\n          _this.confirmChange();\n        } else if (keyCode === KeyCode.ESC) {\n          onCancel();\n        }\n      }\n    };\n\n    _this.onBlur = function () {\n      _this.confirmChange();\n    };\n\n    _this.confirmChange = function () {\n      var current = _this.state.current;\n      var onSave = _this.props.onSave;\n      onSave(current.trim());\n    };\n\n    _this.setTextarea = function (textarea) {\n      _this.textarea = textarea;\n    };\n\n    return _this;\n  }\n\n  _createClass(Editable, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.textarea) {\n        this.textarea.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var current = this.state.current;\n      var _this$props = this.props,\n          prefixCls = _this$props.prefixCls,\n          ariaLabel = _this$props['aria-label'],\n          className = _this$props.className,\n          style = _this$props.style;\n      return React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \" \").concat(prefixCls, \"-edit-content \").concat(className),\n        style: style\n      }, React.createElement(TextArea, {\n        ref: this.setTextarea,\n        value: current,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        onKeyUp: this.onKeyUp,\n        onCompositionStart: this.onCompositionStart,\n        onCompositionEnd: this.onCompositionEnd,\n        onBlur: this.onBlur,\n        \"aria-label\": ariaLabel,\n        autoSize: true\n      }), React.createElement(Icon, {\n        type: \"enter\",\n        className: \"\".concat(prefixCls, \"-edit-content-confirm\")\n      }));\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var prevValue = prevState.prevValue;\n      var value = nextProps.value;\n      var newState = {\n        prevValue: value\n      };\n\n      if (prevValue !== value) {\n        newState.current = value;\n      }\n\n      return newState;\n    }\n  }]);\n\n  return Editable;\n}(React.Component);\n\npolyfill(Editable);\nexport default Editable;","map":{"version":3,"mappings":"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","names":["React","KeyCode","polyfill","Icon","TextArea","Editable","_classCallCheck","_this","arguments","inComposition","state","current","onChange","value","target","setState","replace","onCompositionStart","onCompositionEnd","onKeyDown","keyCode","lastKeyCode","onKeyUp","ctrlKey","altKey","metaKey","shiftKey","onCancel","props","ENTER","confirmChange","ESC","onBlur","onSave","trim","setTextarea","textarea","focus","prefixCls","ariaLabel","className","style","ref","autoSize","type","nextProps","prevState","prevValue","newState","Component"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\Youtube Deploy\\client\\node_modules\\antd\\es\\typography\\typography\\Editable.jsx"],"sourcesContent":["import * as React from 'react';\nimport KeyCode from 'rc-util/lib/KeyCode';\nimport { polyfill } from 'react-lifecycles-compat';\nimport Icon from '../icon';\nimport TextArea from '../input/TextArea';\nclass Editable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.inComposition = false;\n        this.state = {\n            current: '',\n        };\n        this.onChange = ({ target: { value } }) => {\n            this.setState({ current: value.replace(/[\\r\\n]/g, '') });\n        };\n        this.onCompositionStart = () => {\n            this.inComposition = true;\n        };\n        this.onCompositionEnd = () => {\n            this.inComposition = false;\n        };\n        this.onKeyDown = ({ keyCode }) => {\n            // We don't record keyCode when IME is using\n            if (this.inComposition)\n                return;\n            this.lastKeyCode = keyCode;\n        };\n        this.onKeyUp = ({ keyCode, ctrlKey, altKey, metaKey, shiftKey, }) => {\n            const { onCancel } = this.props;\n            // Check if it's a real key\n            if (this.lastKeyCode === keyCode &&\n                !this.inComposition &&\n                !ctrlKey &&\n                !altKey &&\n                !metaKey &&\n                !shiftKey) {\n                if (keyCode === KeyCode.ENTER) {\n                    this.confirmChange();\n                }\n                else if (keyCode === KeyCode.ESC) {\n                    onCancel();\n                }\n            }\n        };\n        this.onBlur = () => {\n            this.confirmChange();\n        };\n        this.confirmChange = () => {\n            const { current } = this.state;\n            const { onSave } = this.props;\n            onSave(current.trim());\n        };\n        this.setTextarea = (textarea) => {\n            this.textarea = textarea;\n        };\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { prevValue } = prevState;\n        const { value } = nextProps;\n        const newState = {\n            prevValue: value,\n        };\n        if (prevValue !== value) {\n            newState.current = value;\n        }\n        return newState;\n    }\n    componentDidMount() {\n        if (this.textarea) {\n            this.textarea.focus();\n        }\n    }\n    render() {\n        const { current } = this.state;\n        const { prefixCls, 'aria-label': ariaLabel, className, style } = this.props;\n        return (<div className={`${prefixCls} ${prefixCls}-edit-content ${className}`} style={style}>\n        <TextArea ref={this.setTextarea} value={current} onChange={this.onChange} onKeyDown={this.onKeyDown} onKeyUp={this.onKeyUp} onCompositionStart={this.onCompositionStart} onCompositionEnd={this.onCompositionEnd} onBlur={this.onBlur} aria-label={ariaLabel} autoSize/>\n        <Icon type=\"enter\" className={`${prefixCls}-edit-content-confirm`}/>\n      </div>);\n    }\n}\npolyfill(Editable);\nexport default Editable;\n"]},"metadata":{},"sourceType":"module"}