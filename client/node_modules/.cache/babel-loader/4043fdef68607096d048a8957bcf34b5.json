{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nimport Line from './Line';\nimport Circle from './Circle';\nimport { validProgress } from './utils';\nvar ProgressTypes = tuple('line', 'circle', 'dashboard');\nvar ProgressStatuses = tuple('normal', 'exception', 'active', 'success');\n\nvar Progress = /*#__PURE__*/function (_React$Component) {\n  _inherits(Progress, _React$Component);\n\n  function Progress() {\n    var _this;\n\n    _classCallCheck(this, Progress);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Progress).apply(this, arguments));\n\n    _this.renderProgress = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _assertThisInitialize = _assertThisInitialized(_this),\n          props = _assertThisInitialize.props;\n\n      var customizePrefixCls = props.prefixCls,\n          className = props.className,\n          size = props.size,\n          type = props.type,\n          showInfo = props.showInfo,\n          restProps = __rest(props, [\"prefixCls\", \"className\", \"size\", \"type\", \"showInfo\"]);\n\n      var prefixCls = getPrefixCls('progress', customizePrefixCls);\n\n      var progressStatus = _this.getProgressStatus();\n\n      var progressInfo = _this.renderProcessInfo(prefixCls, progressStatus);\n\n      var progress; // Render progress shape\n\n      if (type === 'line') {\n        progress = React.createElement(Line, _extends({}, _this.props, {\n          prefixCls: prefixCls\n        }), progressInfo);\n      } else if (type === 'circle' || type === 'dashboard') {\n        progress = React.createElement(Circle, _extends({}, _this.props, {\n          prefixCls: prefixCls,\n          progressStatus: progressStatus\n        }), progressInfo);\n      }\n\n      var classString = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type === 'dashboard' && 'circle' || type), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(progressStatus), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-show-info\"), showInfo), _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size), _classNames), className);\n      return React.createElement(\"div\", _extends({}, omit(restProps, ['status', 'format', 'trailColor', 'successPercent', 'strokeWidth', 'width', 'gapDegree', 'gapPosition', 'strokeColor', 'strokeLinecap', 'percent']), {\n        className: classString\n      }), progress);\n    };\n\n    return _this;\n  }\n\n  _createClass(Progress, [{\n    key: \"getPercentNumber\",\n    value: function getPercentNumber() {\n      var _this$props = this.props,\n          successPercent = _this$props.successPercent,\n          _this$props$percent = _this$props.percent,\n          percent = _this$props$percent === void 0 ? 0 : _this$props$percent;\n      return parseInt(successPercent !== undefined ? successPercent.toString() : percent.toString(), 10);\n    }\n  }, {\n    key: \"getProgressStatus\",\n    value: function getProgressStatus() {\n      var status = this.props.status;\n\n      if (ProgressStatuses.indexOf(status) < 0 && this.getPercentNumber() >= 100) {\n        return 'success';\n      }\n\n      return status || 'normal';\n    }\n  }, {\n    key: \"renderProcessInfo\",\n    value: function renderProcessInfo(prefixCls, progressStatus) {\n      var _this$props2 = this.props,\n          showInfo = _this$props2.showInfo,\n          format = _this$props2.format,\n          type = _this$props2.type,\n          percent = _this$props2.percent,\n          successPercent = _this$props2.successPercent;\n      if (!showInfo) return null;\n      var text;\n\n      var textFormatter = format || function (percentNumber) {\n        return \"\".concat(percentNumber, \"%\");\n      };\n\n      var iconType = type === 'circle' || type === 'dashboard' ? '' : '-circle';\n\n      if (format || progressStatus !== 'exception' && progressStatus !== 'success') {\n        text = textFormatter(validProgress(percent), validProgress(successPercent));\n      } else if (progressStatus === 'exception') {\n        text = React.createElement(Icon, {\n          type: \"close\".concat(iconType),\n          theme: type === 'line' ? 'filled' : 'outlined'\n        });\n      } else if (progressStatus === 'success') {\n        text = React.createElement(Icon, {\n          type: \"check\".concat(iconType),\n          theme: type === 'line' ? 'filled' : 'outlined'\n        });\n      }\n\n      return React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-text\"),\n        title: typeof text === 'string' ? text : undefined\n      }, text);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderProgress);\n    }\n  }]);\n\n  return Progress;\n}(React.Component);\n\nexport { Progress as default };\nProgress.defaultProps = {\n  type: 'line',\n  percent: 0,\n  showInfo: true,\n  trailColor: '#f3f3f3',\n  size: 'default',\n  gapDegree: 0,\n  strokeLinecap: 'round'\n};\nProgress.propTypes = {\n  status: PropTypes.oneOf(ProgressStatuses),\n  type: PropTypes.oneOf(ProgressTypes),\n  showInfo: PropTypes.bool,\n  percent: PropTypes.number,\n  width: PropTypes.number,\n  strokeWidth: PropTypes.number,\n  strokeLinecap: PropTypes.oneOf(['round', 'square']),\n  strokeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  trailColor: PropTypes.string,\n  format: PropTypes.func,\n  gapDegree: PropTypes.number\n};","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","PropTypes","React","classNames","omit","Icon","ConfigConsumer","tuple","Line","Circle","validProgress","ProgressTypes","ProgressStatuses","Progress","_classCallCheck","_this","arguments","renderProgress","getPrefixCls","props","customizePrefixCls","prefixCls","className","size","type","showInfo","restProps","progressStatus","getProgressStatus","progressInfo","renderProcessInfo","progress","classString","successPercent","percent","parseInt","undefined","toString","status","getPercentNumber","format","text","textFormatter","percentNumber","iconType","theme","title","Component","defaultProps","trailColor","gapDegree","strokeLinecap","propTypes","oneOf","bool","number","width","strokeWidth","strokeColor","oneOfType","string","object","func"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\react-youtube-clone-master\\client\\node_modules\\antd\\es\\progress\\progress\\progress.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport { tuple } from '../_util/type';\nimport Line from './Line';\nimport Circle from './Circle';\nimport { validProgress } from './utils';\nconst ProgressTypes = tuple('line', 'circle', 'dashboard');\nconst ProgressStatuses = tuple('normal', 'exception', 'active', 'success');\nexport default class Progress extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderProgress = ({ getPrefixCls }) => {\n            const { props } = this;\n            const { prefixCls: customizePrefixCls, className, size, type, showInfo } = props, restProps = __rest(props, [\"prefixCls\", \"className\", \"size\", \"type\", \"showInfo\"]);\n            const prefixCls = getPrefixCls('progress', customizePrefixCls);\n            const progressStatus = this.getProgressStatus();\n            const progressInfo = this.renderProcessInfo(prefixCls, progressStatus);\n            let progress;\n            // Render progress shape\n            if (type === 'line') {\n                progress = (<Line {...this.props} prefixCls={prefixCls}>\n          {progressInfo}\n        </Line>);\n            }\n            else if (type === 'circle' || type === 'dashboard') {\n                progress = (<Circle {...this.props} prefixCls={prefixCls} progressStatus={progressStatus}>\n          {progressInfo}\n        </Circle>);\n            }\n            const classString = classNames(prefixCls, {\n                [`${prefixCls}-${(type === 'dashboard' && 'circle') || type}`]: true,\n                [`${prefixCls}-status-${progressStatus}`]: true,\n                [`${prefixCls}-show-info`]: showInfo,\n                [`${prefixCls}-${size}`]: size,\n            }, className);\n            return (<div {...omit(restProps, [\n                'status',\n                'format',\n                'trailColor',\n                'successPercent',\n                'strokeWidth',\n                'width',\n                'gapDegree',\n                'gapPosition',\n                'strokeColor',\n                'strokeLinecap',\n                'percent',\n            ])} className={classString}>\n        {progress}\n      </div>);\n        };\n    }\n    getPercentNumber() {\n        const { successPercent, percent = 0 } = this.props;\n        return parseInt(successPercent !== undefined ? successPercent.toString() : percent.toString(), 10);\n    }\n    getProgressStatus() {\n        const { status } = this.props;\n        if (ProgressStatuses.indexOf(status) < 0 && this.getPercentNumber() >= 100) {\n            return 'success';\n        }\n        return status || 'normal';\n    }\n    renderProcessInfo(prefixCls, progressStatus) {\n        const { showInfo, format, type, percent, successPercent } = this.props;\n        if (!showInfo)\n            return null;\n        let text;\n        const textFormatter = format || (percentNumber => `${percentNumber}%`);\n        const iconType = type === 'circle' || type === 'dashboard' ? '' : '-circle';\n        if (format || (progressStatus !== 'exception' && progressStatus !== 'success')) {\n            text = textFormatter(validProgress(percent), validProgress(successPercent));\n        }\n        else if (progressStatus === 'exception') {\n            text = <Icon type={`close${iconType}`} theme={type === 'line' ? 'filled' : 'outlined'}/>;\n        }\n        else if (progressStatus === 'success') {\n            text = <Icon type={`check${iconType}`} theme={type === 'line' ? 'filled' : 'outlined'}/>;\n        }\n        return (<span className={`${prefixCls}-text`} title={typeof text === 'string' ? text : undefined}>\n        {text}\n      </span>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderProgress}</ConfigConsumer>;\n    }\n}\nProgress.defaultProps = {\n    type: 'line',\n    percent: 0,\n    showInfo: true,\n    trailColor: '#f3f3f3',\n    size: 'default',\n    gapDegree: 0,\n    strokeLinecap: 'round',\n};\nProgress.propTypes = {\n    status: PropTypes.oneOf(ProgressStatuses),\n    type: PropTypes.oneOf(ProgressTypes),\n    showInfo: PropTypes.bool,\n    percent: PropTypes.number,\n    width: PropTypes.number,\n    strokeWidth: PropTypes.number,\n    strokeLinecap: PropTypes.oneOf(['round', 'square']),\n    strokeColor: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    trailColor: PropTypes.string,\n    format: PropTypes.func,\n    gapDegree: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}