{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from \"rc-util/es/Children/toArray\";\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nimport Col from './Col';\n\nvar DescriptionsItem = function DescriptionsItem(_ref) {\n  var children = _ref.children;\n  return children;\n};\n/**\n * Convert children into `column` groups.\n * @param children: DescriptionsItem\n * @param column: number\n */\n\n\nvar generateChildrenRows = function generateChildrenRows(children, column) {\n  var rows = [];\n  var columns = null;\n  var leftSpans;\n  var itemNodes = toArray(children);\n  itemNodes.forEach(function (node, index) {\n    var itemNode = node;\n\n    if (!columns) {\n      leftSpans = column;\n      columns = [];\n      rows.push(columns);\n    } // Always set last span to align the end of Descriptions\n\n\n    var lastItem = index === itemNodes.length - 1;\n    var lastSpanSame = true;\n\n    if (lastItem) {\n      lastSpanSame = !itemNode.props.span || itemNode.props.span === leftSpans;\n      itemNode = React.cloneElement(itemNode, {\n        span: leftSpans\n      });\n    } // Calculate left fill span\n\n\n    var _itemNode$props$span = itemNode.props.span,\n        span = _itemNode$props$span === void 0 ? 1 : _itemNode$props$span;\n    columns.push(itemNode);\n    leftSpans -= span;\n\n    if (leftSpans <= 0) {\n      columns = null;\n      warning(leftSpans === 0 && lastSpanSame, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n    }\n  });\n  return rows;\n};\n\nvar renderRow = function renderRow(children, index, _ref2, bordered, layout, colon) {\n  var prefixCls = _ref2.prefixCls;\n\n  var renderCol = function renderCol(colItem, type, idx) {\n    return React.createElement(Col, {\n      child: colItem,\n      bordered: bordered,\n      colon: colon,\n      type: type,\n      key: \"\".concat(type, \"-\").concat(colItem.key || idx),\n      layout: layout\n    });\n  };\n\n  var cloneChildren = [];\n  var cloneContentChildren = [];\n  toArray(children).forEach(function (childrenItem, idx) {\n    cloneChildren.push(renderCol(childrenItem, 'label', idx));\n\n    if (layout === 'vertical') {\n      cloneContentChildren.push(renderCol(childrenItem, 'content', idx));\n    } else if (bordered) {\n      cloneChildren.push(renderCol(childrenItem, 'content', idx));\n    }\n  });\n\n  if (layout === 'vertical') {\n    return [React.createElement(\"tr\", {\n      className: \"\".concat(prefixCls, \"-row\"),\n      key: \"label-\".concat(index)\n    }, cloneChildren), React.createElement(\"tr\", {\n      className: \"\".concat(prefixCls, \"-row\"),\n      key: \"content-\".concat(index)\n    }, cloneContentChildren)];\n  }\n\n  return React.createElement(\"tr\", {\n    className: \"\".concat(prefixCls, \"-row\"),\n    key: index\n  }, cloneChildren);\n};\n\nvar defaultColumnMap = {\n  xxl: 3,\n  xl: 3,\n  lg: 3,\n  md: 3,\n  sm: 2,\n  xs: 1\n};\n\nvar Descriptions = /*#__PURE__*/function (_React$Component) {\n  _inherits(Descriptions, _React$Component);\n\n  function Descriptions() {\n    var _this;\n\n    _classCallCheck(this, Descriptions);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Descriptions).apply(this, arguments));\n    _this.state = {\n      screens: {}\n    };\n    return _this;\n  }\n\n  _createClass(Descriptions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var column = this.props.column;\n      this.token = ResponsiveObserve.subscribe(function (screens) {\n        if (_typeof(column) !== 'object') {\n          return;\n        }\n\n        _this2.setState({\n          screens: screens\n        });\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      ResponsiveObserve.unsubscribe(this.token);\n    }\n  }, {\n    key: \"getColumn\",\n    value: function getColumn() {\n      var column = this.props.column;\n\n      if (_typeof(column) === 'object') {\n        for (var i = 0; i < responsiveArray.length; i++) {\n          var breakpoint = responsiveArray[i];\n\n          if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n            return column[breakpoint] || defaultColumnMap[breakpoint];\n          }\n        }\n      } // If the configuration is not an object, it is a number, return number\n\n\n      if (typeof column === 'number') {\n        return column;\n      } // If it is an object, but no response is found, this happens only in the test.\n      // Maybe there are some strange environments\n\n\n      return 3;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(ConfigConsumer, null, function (_ref3) {\n        var _classNames;\n\n        var getPrefixCls = _ref3.getPrefixCls;\n        var _this3$props = _this3.props,\n            className = _this3$props.className,\n            customizePrefixCls = _this3$props.prefixCls,\n            title = _this3$props.title,\n            size = _this3$props.size,\n            children = _this3$props.children,\n            _this3$props$bordered = _this3$props.bordered,\n            bordered = _this3$props$bordered === void 0 ? false : _this3$props$bordered,\n            _this3$props$layout = _this3$props.layout,\n            layout = _this3$props$layout === void 0 ? 'horizontal' : _this3$props$layout,\n            _this3$props$colon = _this3$props.colon,\n            colon = _this3$props$colon === void 0 ? true : _this3$props$colon,\n            style = _this3$props.style;\n        var prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n\n        var column = _this3.getColumn();\n\n        var cloneChildren = toArray(children).map(function (child) {\n          if (React.isValidElement(child)) {\n            return React.cloneElement(child, {\n              prefixCls: prefixCls\n            });\n          }\n\n          return null;\n        }).filter(function (node) {\n          return node;\n        });\n        var childrenArray = generateChildrenRows(cloneChildren, column);\n        return React.createElement(\"div\", {\n          className: classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(size), size !== 'default'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-bordered\"), !!bordered), _classNames)),\n          style: style\n        }, title && React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-title\")\n        }, title), React.createElement(\"div\", {\n          className: \"\".concat(prefixCls, \"-view\")\n        }, React.createElement(\"table\", null, React.createElement(\"tbody\", null, childrenArray.map(function (child, index) {\n          return renderRow(child, index, {\n            prefixCls: prefixCls\n          }, bordered, layout, colon);\n        })))));\n      });\n    }\n  }]);\n\n  return Descriptions;\n}(React.Component);\n\nDescriptions.defaultProps = {\n  size: 'default',\n  column: defaultColumnMap\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;","map":{"version":3,"mappings":"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","names":["React","classNames","toArray","warning","ResponsiveObserve","responsiveArray","ConfigConsumer","Col","DescriptionsItem","children","generateChildrenRows","column","rows","columns","leftSpans","itemNodes","forEach","node","index","itemNode","push","lastItem","length","lastSpanSame","props","span","cloneElement","renderRow","bordered","layout","colon","prefixCls","renderCol","colItem","type","idx","child","key","cloneChildren","cloneContentChildren","childrenItem","className","defaultColumnMap","xxl","xl","lg","md","sm","xs","Descriptions","_classCallCheck","_this","arguments","state","screens","token","subscribe","_typeof","_this2","setState","unsubscribe","i","breakpoint","undefined","getPrefixCls","_this3","customizePrefixCls","title","size","style","getColumn","map","isValidElement","filter","childrenArray","Component","defaultProps","Item"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\react-youtube-clone-master\\client\\node_modules\\antd\\es\\descriptions\\descriptions\\index.jsx"],"sourcesContent":["import * as React from 'react';\nimport classNames from 'classnames';\nimport toArray from 'rc-util/lib/Children/toArray';\nimport warning from '../_util/warning';\nimport ResponsiveObserve, { responsiveArray, } from '../_util/responsiveObserve';\nimport { ConfigConsumer } from '../config-provider';\nimport Col from './Col';\nconst DescriptionsItem = ({ children }) => children;\n/**\n * Convert children into `column` groups.\n * @param children: DescriptionsItem\n * @param column: number\n */\nconst generateChildrenRows = (children, column) => {\n    const rows = [];\n    let columns = null;\n    let leftSpans;\n    const itemNodes = toArray(children);\n    itemNodes.forEach((node, index) => {\n        let itemNode = node;\n        if (!columns) {\n            leftSpans = column;\n            columns = [];\n            rows.push(columns);\n        }\n        // Always set last span to align the end of Descriptions\n        const lastItem = index === itemNodes.length - 1;\n        let lastSpanSame = true;\n        if (lastItem) {\n            lastSpanSame = !itemNode.props.span || itemNode.props.span === leftSpans;\n            itemNode = React.cloneElement(itemNode, {\n                span: leftSpans,\n            });\n        }\n        // Calculate left fill span\n        const { span = 1 } = itemNode.props;\n        columns.push(itemNode);\n        leftSpans -= span;\n        if (leftSpans <= 0) {\n            columns = null;\n            warning(leftSpans === 0 && lastSpanSame, 'Descriptions', 'Sum of column `span` in a line exceeds `column` of Descriptions.');\n        }\n    });\n    return rows;\n};\nconst renderRow = (children, index, { prefixCls }, bordered, layout, colon) => {\n    const renderCol = (colItem, type, idx) => {\n        return (<Col child={colItem} bordered={bordered} colon={colon} type={type} key={`${type}-${colItem.key || idx}`} layout={layout}/>);\n    };\n    const cloneChildren = [];\n    const cloneContentChildren = [];\n    toArray(children).forEach((childrenItem, idx) => {\n        cloneChildren.push(renderCol(childrenItem, 'label', idx));\n        if (layout === 'vertical') {\n            cloneContentChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n        else if (bordered) {\n            cloneChildren.push(renderCol(childrenItem, 'content', idx));\n        }\n    });\n    if (layout === 'vertical') {\n        return [\n            <tr className={`${prefixCls}-row`} key={`label-${index}`}>\n        {cloneChildren}\n      </tr>,\n            <tr className={`${prefixCls}-row`} key={`content-${index}`}>\n        {cloneContentChildren}\n      </tr>,\n        ];\n    }\n    return (<tr className={`${prefixCls}-row`} key={index}>\n      {cloneChildren}\n    </tr>);\n};\nconst defaultColumnMap = {\n    xxl: 3,\n    xl: 3,\n    lg: 3,\n    md: 3,\n    sm: 2,\n    xs: 1,\n};\nclass Descriptions extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            screens: {},\n        };\n    }\n    componentDidMount() {\n        const { column } = this.props;\n        this.token = ResponsiveObserve.subscribe(screens => {\n            if (typeof column !== 'object') {\n                return;\n            }\n            this.setState({\n                screens,\n            });\n        });\n    }\n    componentWillUnmount() {\n        ResponsiveObserve.unsubscribe(this.token);\n    }\n    getColumn() {\n        const { column } = this.props;\n        if (typeof column === 'object') {\n            for (let i = 0; i < responsiveArray.length; i++) {\n                const breakpoint = responsiveArray[i];\n                if (this.state.screens[breakpoint] && column[breakpoint] !== undefined) {\n                    return column[breakpoint] || defaultColumnMap[breakpoint];\n                }\n            }\n        }\n        // If the configuration is not an object, it is a number, return number\n        if (typeof column === 'number') {\n            return column;\n        }\n        // If it is an object, but no response is found, this happens only in the test.\n        // Maybe there are some strange environments\n        return 3;\n    }\n    render() {\n        return (<ConfigConsumer>\n        {({ getPrefixCls }) => {\n            const { className, prefixCls: customizePrefixCls, title, size, children, bordered = false, layout = 'horizontal', colon = true, style, } = this.props;\n            const prefixCls = getPrefixCls('descriptions', customizePrefixCls);\n            const column = this.getColumn();\n            const cloneChildren = toArray(children)\n                .map((child) => {\n                if (React.isValidElement(child)) {\n                    return React.cloneElement(child, {\n                        prefixCls,\n                    });\n                }\n                return null;\n            })\n                .filter((node) => node);\n            const childrenArray = generateChildrenRows(cloneChildren, column);\n            return (<div className={classNames(prefixCls, className, {\n                [`${prefixCls}-${size}`]: size !== 'default',\n                [`${prefixCls}-bordered`]: !!bordered,\n            })} style={style}>\n              {title && <div className={`${prefixCls}-title`}>{title}</div>}\n              <div className={`${prefixCls}-view`}>\n                <table>\n                  <tbody>\n                    {childrenArray.map((child, index) => renderRow(child, index, {\n                prefixCls,\n            }, bordered, layout, colon))}\n                  </tbody>\n                </table>\n              </div>\n            </div>);\n        }}\n      </ConfigConsumer>);\n    }\n}\nDescriptions.defaultProps = {\n    size: 'default',\n    column: defaultColumnMap,\n};\nDescriptions.Item = DescriptionsItem;\nexport default Descriptions;\n"]},"metadata":{},"sourceType":"module"}