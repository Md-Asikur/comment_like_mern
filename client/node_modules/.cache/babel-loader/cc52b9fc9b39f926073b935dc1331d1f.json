{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n/* eslint-disable prefer-spread */\n\n\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport { polyfill } from 'react-lifecycles-compat';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport scrollTo from '../_util/scrollTo';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\n\nfunction noop() {}\n\nfunction stopPropagation(e) {\n  e.stopPropagation();\n}\n\nfunction getRowSelection(props) {\n  return props.rowSelection || {};\n}\n\nfunction getColumnKey(column, index) {\n  return column.key || column.dataIndex || index;\n}\n\nfunction isSameColumn(a, b) {\n  if (a && b && a.key && a.key === b.key) {\n    return true;\n  }\n\n  return a === b || shallowEqual(a, b, function (value, other) {\n    if (typeof value === 'function' && typeof other === 'function') {\n      return value === other || value.toString() === other.toString();\n    }\n  });\n}\n\nvar defaultPagination = {\n  onChange: noop,\n  onShowSizeChange: noop\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\n\nvar emptyObject = {};\n\nvar createComponents = function createComponents() {\n  var components = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var bodyRow = components && components.body && components.body.row;\n  return _extends(_extends({}, components), {\n    body: _extends(_extends({}, components.body), {\n      row: createBodyRow(bodyRow)\n    })\n  });\n};\n\nfunction isTheSameComponents() {\n  var components1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var components2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return components1 === components2 || ['table', 'header', 'body'].every(function (key) {\n    return shallowEqual(components1[key], components2[key]);\n  });\n}\n\nfunction getFilteredValueColumns(state, columns) {\n  return flatFilter(columns || (state || {}).columns || [], function (column) {\n    return typeof column.filteredValue !== 'undefined';\n  });\n}\n\nfunction getFiltersFromColumns() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var columns = arguments.length > 1 ? arguments[1] : undefined;\n  var filters = {};\n  getFilteredValueColumns(state, columns).forEach(function (col) {\n    var colKey = getColumnKey(col);\n    filters[colKey] = col.filteredValue;\n  });\n  return filters;\n}\n\nfunction isFiltersChanged(state, filters) {\n  if (Object.keys(filters).length !== Object.keys(state.filters).length) {\n    return true;\n  }\n\n  return Object.keys(filters).some(function (columnKey) {\n    return filters[columnKey] !== state.filters[columnKey];\n  });\n}\n\nvar Table = /*#__PURE__*/function (_React$Component) {\n  _inherits(Table, _React$Component);\n\n  function Table(props) {\n    var _this;\n\n    _classCallCheck(this, Table);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Table).call(this, props));\n\n    _this.setTableRef = function (table) {\n      _this.rcTable = table;\n    };\n\n    _this.getCheckboxPropsByItem = function (item, index) {\n      var rowSelection = getRowSelection(_this.props);\n\n      if (!rowSelection.getCheckboxProps) {\n        return {};\n      }\n\n      var key = _this.getRecordKey(item, index); // Cache checkboxProps\n\n\n      if (!_this.props.checkboxPropsCache[key]) {\n        _this.props.checkboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n        var checkboxProps = _this.props.checkboxPropsCache[key];\n        warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n\n      return _this.props.checkboxPropsCache[key];\n    };\n\n    _this.getRecordKey = function (record, index) {\n      var rowKey = _this.props.rowKey;\n      var recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n      warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' + 'or set `rowKey` of Table to an unique primary key, ' + 'see https://u.ant.design/table-row-key');\n      return recordKey === undefined ? index : recordKey;\n    };\n\n    _this.onRow = function (prefixCls, record, index) {\n      var onRow = _this.props.onRow;\n      var custom = onRow ? onRow(record, index) : {};\n      return _extends(_extends({}, custom), {\n        prefixCls: prefixCls,\n        store: _this.props.store,\n        rowKey: _this.getRecordKey(record, index)\n      });\n    };\n\n    _this.generatePopupContainerFunc = function (getPopupContainer) {\n      var scroll = _this.props.scroll;\n      var table = _this.rcTable;\n\n      if (getPopupContainer) {\n        return getPopupContainer;\n      } // Use undefined to let rc component use default logic.\n\n\n      return scroll && table ? function () {\n        return table.tableNode;\n      } : undefined;\n    };\n\n    _this.scrollToFirstRow = function () {\n      var scroll = _this.props.scroll;\n\n      if (scroll && scroll.scrollToFirstRowOnChange !== false) {\n        scrollTo(0, {\n          getContainer: function getContainer() {\n            return _this.rcTable.bodyTable;\n          }\n        });\n      }\n    };\n\n    _this.handleFilter = function (column, nextFilters) {\n      var props = _this.props;\n\n      var pagination = _extends({}, _this.state.pagination);\n\n      var filters = _extends(_extends({}, _this.state.filters), _defineProperty({}, getColumnKey(column), nextFilters)); // Remove filters not in current columns\n\n\n      var currentColumnKeys = [];\n      treeMap(_this.state.columns, function (c) {\n        if (!c.children) {\n          currentColumnKeys.push(getColumnKey(c));\n        }\n      });\n      Object.keys(filters).forEach(function (columnKey) {\n        if (currentColumnKeys.indexOf(columnKey) < 0) {\n          delete filters[columnKey];\n        }\n      });\n\n      if (props.pagination) {\n        // Reset current prop\n        pagination.current = 1;\n        pagination.onChange(pagination.current);\n      }\n\n      var newState = {\n        pagination: pagination,\n        filters: {}\n      };\n\n      var filtersToSetState = _extends({}, filters); // Remove filters which is controlled\n\n\n      getFilteredValueColumns(_this.state).forEach(function (col) {\n        var columnKey = getColumnKey(col);\n\n        if (columnKey) {\n          delete filtersToSetState[columnKey];\n        }\n      });\n\n      if (Object.keys(filtersToSetState).length > 0) {\n        newState.filters = filtersToSetState;\n      } // Controlled current prop will not respond user interaction\n\n\n      if (_typeof(props.pagination) === 'object' && 'current' in props.pagination) {\n        newState.pagination = _extends(_extends({}, pagination), {\n          current: _this.state.pagination.current\n        });\n      }\n\n      _this.setState(newState, function () {\n        _this.scrollToFirstRow();\n\n        _this.props.store.setState({\n          selectionDirty: false\n        });\n\n        var onChange = _this.props.onChange;\n\n        if (onChange) {\n          onChange.apply(null, _this.prepareParamsArguments(_extends(_extends({}, _this.state), {\n            selectionDirty: false,\n            filters: filters,\n            pagination: pagination\n          })));\n        }\n      });\n    };\n\n    _this.handleSelect = function (record, rowIndex, e) {\n      var checked = e.target.checked;\n      var nativeEvent = e.nativeEvent;\n      var defaultSelection = _this.props.store.getState().selectionDirty ? [] : _this.getDefaultSelection();\n\n      var selectedRowKeys = _this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n\n      var key = _this.getRecordKey(record, rowIndex);\n\n      var pivot = _this.state.pivot;\n\n      var rows = _this.getFlatCurrentPageData();\n\n      var realIndex = rowIndex;\n\n      if (_this.props.expandedRowRender) {\n        realIndex = rows.findIndex(function (row) {\n          return _this.getRecordKey(row, rowIndex) === key;\n        });\n      }\n\n      if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n        var changeRowKeys = [];\n        var direction = Math.sign(pivot - realIndex);\n        var dist = Math.abs(pivot - realIndex);\n        var step = 0;\n\n        var _loop = function _loop() {\n          var i = realIndex + step * direction;\n          step += 1;\n          var row = rows[i];\n\n          var rowKey = _this.getRecordKey(row, i);\n\n          var checkboxProps = _this.getCheckboxPropsByItem(row, i);\n\n          if (!checkboxProps.disabled) {\n            if (selectedRowKeys.includes(rowKey)) {\n              if (!checked) {\n                selectedRowKeys = selectedRowKeys.filter(function (j) {\n                  return rowKey !== j;\n                });\n                changeRowKeys.push(rowKey);\n              }\n            } else if (checked) {\n              selectedRowKeys.push(rowKey);\n              changeRowKeys.push(rowKey);\n            }\n          }\n        };\n\n        while (step <= dist) {\n          _loop();\n        }\n\n        _this.setState({\n          pivot: realIndex\n        });\n\n        _this.props.store.setState({\n          selectionDirty: true\n        });\n\n        _this.setSelectedRowKeys(selectedRowKeys, {\n          selectWay: 'onSelectMultiple',\n          record: record,\n          checked: checked,\n          changeRowKeys: changeRowKeys,\n          nativeEvent: nativeEvent\n        });\n      } else {\n        if (checked) {\n          selectedRowKeys.push(_this.getRecordKey(record, realIndex));\n        } else {\n          selectedRowKeys = selectedRowKeys.filter(function (i) {\n            return key !== i;\n          });\n        }\n\n        _this.setState({\n          pivot: realIndex\n        });\n\n        _this.props.store.setState({\n          selectionDirty: true\n        });\n\n        _this.setSelectedRowKeys(selectedRowKeys, {\n          selectWay: 'onSelect',\n          record: record,\n          checked: checked,\n          changeRowKeys: undefined,\n          nativeEvent: nativeEvent\n        });\n      }\n    };\n\n    _this.handleRadioSelect = function (record, rowIndex, e) {\n      var checked = e.target.checked;\n      var nativeEvent = e.nativeEvent;\n\n      var key = _this.getRecordKey(record, rowIndex);\n\n      var selectedRowKeys = [key];\n\n      _this.props.store.setState({\n        selectionDirty: true\n      });\n\n      _this.setSelectedRowKeys(selectedRowKeys, {\n        selectWay: 'onSelect',\n        record: record,\n        checked: checked,\n        changeRowKeys: undefined,\n        nativeEvent: nativeEvent\n      });\n    };\n\n    _this.handleSelectRow = function (selectionKey, index, onSelectFunc) {\n      var data = _this.getFlatCurrentPageData();\n\n      var defaultSelection = _this.props.store.getState().selectionDirty ? [] : _this.getDefaultSelection();\n\n      var selectedRowKeys = _this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n\n      var changeableRowKeys = data.filter(function (item, i) {\n        return !_this.getCheckboxPropsByItem(item, i).disabled;\n      }).map(function (item, i) {\n        return _this.getRecordKey(item, i);\n      });\n      var changeRowKeys = [];\n      var selectWay = 'onSelectAll';\n      var checked; // handle default selection\n\n      switch (selectionKey) {\n        case 'all':\n          changeableRowKeys.forEach(function (key) {\n            if (selectedRowKeys.indexOf(key) < 0) {\n              selectedRowKeys.push(key);\n              changeRowKeys.push(key);\n            }\n          });\n          selectWay = 'onSelectAll';\n          checked = true;\n          break;\n\n        case 'removeAll':\n          changeableRowKeys.forEach(function (key) {\n            if (selectedRowKeys.indexOf(key) >= 0) {\n              selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n              changeRowKeys.push(key);\n            }\n          });\n          selectWay = 'onSelectAll';\n          checked = false;\n          break;\n\n        case 'invert':\n          changeableRowKeys.forEach(function (key) {\n            if (selectedRowKeys.indexOf(key) < 0) {\n              selectedRowKeys.push(key);\n            } else {\n              selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n            }\n\n            changeRowKeys.push(key);\n            selectWay = 'onSelectInvert';\n          });\n          break;\n\n        default:\n          break;\n      }\n\n      _this.props.store.setState({\n        selectionDirty: true\n      }); // when select custom selection, callback selections[n].onSelect\n\n\n      var rowSelection = _this.props.rowSelection;\n      var customSelectionStartIndex = 2;\n\n      if (rowSelection && rowSelection.hideDefaultSelections) {\n        customSelectionStartIndex = 0;\n      }\n\n      if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n        return onSelectFunc(changeableRowKeys);\n      }\n\n      _this.setSelectedRowKeys(selectedRowKeys, {\n        selectWay: selectWay,\n        checked: checked,\n        changeRowKeys: changeRowKeys\n      });\n    };\n\n    _this.handlePageChange = function (current) {\n      var props = _this.props;\n\n      var pagination = _extends({}, _this.state.pagination);\n\n      if (current) {\n        pagination.current = current;\n      } else {\n        pagination.current = pagination.current || 1;\n      }\n\n      for (var _len = arguments.length, otherArguments = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        otherArguments[_key - 1] = arguments[_key];\n      }\n\n      pagination.onChange.apply(pagination, [pagination.current].concat(otherArguments));\n      var newState = {\n        pagination: pagination\n      }; // Controlled current prop will not respond user interaction\n\n      if (props.pagination && _typeof(props.pagination) === 'object' && 'current' in props.pagination) {\n        newState.pagination = _extends(_extends({}, pagination), {\n          current: _this.state.pagination.current\n        });\n      }\n\n      _this.setState(newState, function () {\n        return _this.scrollToFirstRow();\n      });\n\n      _this.props.store.setState({\n        selectionDirty: false\n      });\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.apply(null, _this.prepareParamsArguments(_extends(_extends({}, _this.state), {\n          selectionDirty: false,\n          pagination: pagination\n        })));\n      }\n    };\n\n    _this.handleShowSizeChange = function (current, pageSize) {\n      var pagination = _this.state.pagination;\n      pagination.onShowSizeChange(current, pageSize);\n\n      var nextPagination = _extends(_extends({}, pagination), {\n        pageSize: pageSize,\n        current: current\n      });\n\n      _this.setState({\n        pagination: nextPagination\n      });\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange.apply(null, _this.prepareParamsArguments(_extends(_extends({}, _this.state), {\n          pagination: nextPagination\n        })));\n      }\n    };\n\n    _this.renderExpandIcon = function (prefixCls) {\n      return function (_ref) {\n        var expandable = _ref.expandable,\n            expanded = _ref.expanded,\n            needIndentSpaced = _ref.needIndentSpaced,\n            record = _ref.record,\n            onExpand = _ref.onExpand;\n\n        if (expandable) {\n          return React.createElement(LocaleReceiver, {\n            componentName: \"Table\",\n            defaultLocale: defaultLocale.Table\n          }, function (locale) {\n            var _classNames;\n\n            return React.createElement(TransButton, {\n              className: classNames(\"\".concat(prefixCls, \"-row-expand-icon\"), (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-row-collapsed\"), !expanded), _defineProperty(_classNames, \"\".concat(prefixCls, \"-row-expanded\"), expanded), _classNames)),\n              onClick: function onClick(event) {\n                onExpand(record, event);\n              },\n              \"aria-label\": expanded ? locale.collapse : locale.expand,\n              noStyle: true\n            });\n          });\n        }\n\n        if (needIndentSpaced) {\n          return React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-row-expand-icon \").concat(prefixCls, \"-row-spaced\")\n          });\n        }\n\n        return null;\n      };\n    };\n\n    _this.renderSelectionBox = function (type) {\n      return function (_, record, index) {\n        var rowKey = _this.getRecordKey(record, index);\n\n        var props = _this.getCheckboxPropsByItem(record, index);\n\n        var handleChange = function handleChange(e) {\n          return type === 'radio' ? _this.handleRadioSelect(record, index, e) : _this.handleSelect(record, index, e);\n        };\n\n        return React.createElement(\"span\", {\n          onClick: stopPropagation\n        }, React.createElement(SelectionBox, _extends({\n          type: type,\n          store: _this.props.store,\n          rowIndex: rowKey,\n          onChange: handleChange,\n          defaultSelection: _this.getDefaultSelection()\n        }, props)));\n      };\n    };\n\n    _this.renderTable = function (_ref2) {\n      var _classNames2;\n\n      var prefixCls = _ref2.prefixCls,\n          renderEmpty = _ref2.renderEmpty,\n          dropdownPrefixCls = _ref2.dropdownPrefixCls,\n          contextLocale = _ref2.contextLocale,\n          contextGetPopupContainer = _ref2.getPopupContainer;\n\n      var _a = _this.props,\n          showHeader = _a.showHeader,\n          locale = _a.locale,\n          getPopupContainer = _a.getPopupContainer,\n          restTableProps = __rest(_a, [\"showHeader\", \"locale\", \"getPopupContainer\"]); // do not pass prop.style to rc-table, since already apply it to container div\n\n\n      var restProps = omit(restTableProps, ['style']);\n\n      var data = _this.getCurrentPageData();\n\n      var expandIconAsCell = _this.props.expandedRowRender && _this.props.expandIconAsCell !== false; // use props.getPopupContainer first\n\n      var realGetPopupContainer = getPopupContainer || contextGetPopupContainer; // Merge too locales\n\n      var mergedLocale = _extends(_extends({}, contextLocale), locale);\n\n      if (!locale || !locale.emptyText) {\n        mergedLocale.emptyText = renderEmpty('Table');\n      }\n\n      var classString = classNames(\"\".concat(prefixCls, \"-\").concat(_this.props.size), (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-bordered\"), _this.props.bordered), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-empty\"), !data.length), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-without-column-header\"), !showHeader), _classNames2));\n\n      var columnsWithRowSelection = _this.renderRowSelection({\n        prefixCls: prefixCls,\n        locale: mergedLocale,\n        getPopupContainer: realGetPopupContainer\n      });\n\n      var columns = _this.renderColumnsDropdown({\n        columns: columnsWithRowSelection,\n        prefixCls: prefixCls,\n        dropdownPrefixCls: dropdownPrefixCls,\n        locale: mergedLocale,\n        getPopupContainer: realGetPopupContainer\n      }).map(function (column, i) {\n        var newColumn = _extends({}, column);\n\n        newColumn.key = getColumnKey(newColumn, i);\n        return newColumn;\n      });\n\n      var expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n\n      if ('expandIconColumnIndex' in restProps) {\n        expandIconColumnIndex = restProps.expandIconColumnIndex;\n      }\n\n      return React.createElement(RcTable, _extends({\n        ref: _this.setTableRef,\n        key: \"table\",\n        expandIcon: _this.renderExpandIcon(prefixCls)\n      }, restProps, {\n        onRow: function onRow(record, index) {\n          return _this.onRow(prefixCls, record, index);\n        },\n        components: _this.state.components,\n        prefixCls: prefixCls,\n        data: data,\n        columns: columns,\n        showHeader: showHeader,\n        className: classString,\n        expandIconColumnIndex: expandIconColumnIndex,\n        expandIconAsCell: expandIconAsCell,\n        emptyText: mergedLocale.emptyText\n      }));\n    };\n\n    _this.renderComponent = function (_ref3) {\n      var getPrefixCls = _ref3.getPrefixCls,\n          renderEmpty = _ref3.renderEmpty,\n          getPopupContainer = _ref3.getPopupContainer;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          customizeDropdownPrefixCls = _this$props.dropdownPrefixCls,\n          style = _this$props.style,\n          className = _this$props.className;\n\n      var data = _this.getCurrentPageData();\n\n      var loading = _this.props.loading;\n\n      if (typeof loading === 'boolean') {\n        loading = {\n          spinning: loading\n        };\n      }\n\n      var prefixCls = getPrefixCls('table', customizePrefixCls);\n      var dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n      var table = React.createElement(LocaleReceiver, {\n        componentName: \"Table\",\n        defaultLocale: defaultLocale.Table\n      }, function (locale) {\n        return _this.renderTable({\n          prefixCls: prefixCls,\n          renderEmpty: renderEmpty,\n          dropdownPrefixCls: dropdownPrefixCls,\n          contextLocale: locale,\n          getPopupContainer: getPopupContainer\n        });\n      }); // if there is no pagination or no data,\n      // the height of spin should decrease by half of pagination\n\n      var paginationPatchClass = _this.hasPagination() && data && data.length !== 0 ? \"\".concat(prefixCls, \"-with-pagination\") : \"\".concat(prefixCls, \"-without-pagination\");\n      return React.createElement(\"div\", {\n        className: classNames(\"\".concat(prefixCls, \"-wrapper\"), className),\n        style: style\n      }, React.createElement(Spin, _extends({}, loading, {\n        className: loading.spinning ? \"\".concat(paginationPatchClass, \" \").concat(prefixCls, \"-spin-holder\") : ''\n      }), _this.renderPagination(prefixCls, 'top'), table, _this.renderPagination(prefixCls, 'bottom')));\n    };\n\n    var expandedRowRender = props.expandedRowRender,\n        _props$columns = props.columns,\n        columnsProp = _props$columns === void 0 ? [] : _props$columns;\n    warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' + 'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n\n    if (expandedRowRender && columnsProp.some(function (_ref4) {\n      var fixed = _ref4.fixed;\n      return !!fixed;\n    })) {\n      warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n    }\n\n    var columns = columnsProp || normalizeColumns(props.children);\n    _this.state = _extends(_extends({}, _this.getDefaultSortOrder(columns)), {\n      // 减少状态\n      filters: getFiltersFromColumns(),\n      pagination: _this.getDefaultPagination(props),\n      pivot: undefined,\n      prevProps: props,\n      components: createComponents(props.components),\n      columns: columns\n    });\n    return _this;\n  }\n\n  _createClass(Table, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$state = this.state,\n          columns = _this$state.columns,\n          sortColumn = _this$state.sortColumn,\n          sortOrder = _this$state.sortOrder;\n\n      if (this.getSortOrderColumns(columns).length > 0) {\n        var sortState = this.getSortStateFromColumns(columns);\n\n        if (sortState.sortColumn !== sortColumn || sortState.sortOrder !== sortOrder) {\n          this.setState(sortState);\n        }\n      }\n    }\n  }, {\n    key: \"getDefaultSelection\",\n    value: function getDefaultSelection() {\n      var _this2 = this;\n\n      var rowSelection = getRowSelection(this.props);\n\n      if (!rowSelection.getCheckboxProps) {\n        return [];\n      }\n\n      return this.getFlatData().filter(function (item, rowIndex) {\n        return _this2.getCheckboxPropsByItem(item, rowIndex).defaultChecked;\n      }).map(function (record, rowIndex) {\n        return _this2.getRecordKey(record, rowIndex);\n      });\n    }\n  }, {\n    key: \"getDefaultPagination\",\n    value: function getDefaultPagination(props) {\n      var pagination = _typeof(props.pagination) === 'object' ? props.pagination : {};\n      var current;\n\n      if ('current' in pagination) {\n        current = pagination.current;\n      } else if ('defaultCurrent' in pagination) {\n        current = pagination.defaultCurrent;\n      }\n\n      var pageSize;\n\n      if ('pageSize' in pagination) {\n        pageSize = pagination.pageSize;\n      } else if ('defaultPageSize' in pagination) {\n        pageSize = pagination.defaultPageSize;\n      }\n\n      return this.hasPagination(props) ? _extends(_extends(_extends({}, defaultPagination), pagination), {\n        current: current || 1,\n        pageSize: pageSize || 10\n      }) : {};\n    }\n  }, {\n    key: \"getSortOrderColumns\",\n    value: function getSortOrderColumns(columns) {\n      return flatFilter(columns || (this.state || {}).columns || [], function (column) {\n        return 'sortOrder' in column;\n      });\n    }\n  }, {\n    key: \"getDefaultSortOrder\",\n    value: function getDefaultSortOrder(columns) {\n      var definedSortState = this.getSortStateFromColumns(columns);\n      var defaultSortedColumn = flatFilter(columns || [], function (column) {\n        return column.defaultSortOrder != null;\n      })[0];\n\n      if (defaultSortedColumn && !definedSortState.sortColumn) {\n        return {\n          sortColumn: defaultSortedColumn,\n          sortOrder: defaultSortedColumn.defaultSortOrder\n        };\n      }\n\n      return definedSortState;\n    }\n  }, {\n    key: \"getSortStateFromColumns\",\n    value: function getSortStateFromColumns(columns) {\n      // return first column which sortOrder is not falsy\n      var sortedColumn = this.getSortOrderColumns(columns).filter(function (col) {\n        return col.sortOrder;\n      })[0];\n\n      if (sortedColumn) {\n        return {\n          sortColumn: sortedColumn,\n          sortOrder: sortedColumn.sortOrder\n        };\n      }\n\n      return {\n        sortColumn: null,\n        sortOrder: null\n      };\n    }\n  }, {\n    key: \"getMaxCurrent\",\n    value: function getMaxCurrent(total) {\n      var _this$state$paginatio = this.state.pagination,\n          current = _this$state$paginatio.current,\n          pageSize = _this$state$paginatio.pageSize;\n\n      if ((current - 1) * pageSize >= total) {\n        return Math.floor((total - 1) / pageSize) + 1;\n      }\n\n      return current;\n    }\n  }, {\n    key: \"getSorterFn\",\n    value: function getSorterFn(state) {\n      var _ref5 = state || this.state,\n          sortOrder = _ref5.sortOrder,\n          sortColumn = _ref5.sortColumn;\n\n      if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n        return;\n      }\n\n      return function (a, b) {\n        var result = sortColumn.sorter(a, b, sortOrder);\n\n        if (result !== 0) {\n          return sortOrder === 'descend' ? -result : result;\n        }\n\n        return 0;\n      };\n    }\n  }, {\n    key: \"getCurrentPageData\",\n    value: function getCurrentPageData() {\n      var data = this.getLocalData();\n      var current;\n      var pageSize;\n      var state = this.state; // 如果没有分页的话，默认全部展示\n\n      if (!this.hasPagination()) {\n        pageSize = Number.MAX_VALUE;\n        current = 1;\n      } else {\n        pageSize = state.pagination.pageSize;\n        current = this.getMaxCurrent(state.pagination.total || data.length);\n      } // 分页\n      // ---\n      // 当数据量少于等于每页数量时，直接设置数据\n      // 否则进行读取分页数据\n\n\n      if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n        data = data.slice((current - 1) * pageSize, current * pageSize);\n      }\n\n      return data;\n    }\n  }, {\n    key: \"getFlatData\",\n    value: function getFlatData() {\n      var childrenColumnName = this.props.childrenColumnName;\n      return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n  }, {\n    key: \"getFlatCurrentPageData\",\n    value: function getFlatCurrentPageData() {\n      var childrenColumnName = this.props.childrenColumnName;\n      return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n  }, {\n    key: \"getLocalData\",\n    value: function getLocalData(state) {\n      var _this3 = this;\n\n      var filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var currentState = state || this.state;\n      var dataSource = this.props.dataSource;\n      var data = dataSource || []; // 优化本地排序\n\n      data = data.slice(0);\n      var sorterFn = this.getSorterFn(currentState);\n\n      if (sorterFn) {\n        data = this.recursiveSort(data, sorterFn);\n      } // 筛选\n\n\n      if (filter && currentState.filters) {\n        Object.keys(currentState.filters).forEach(function (columnKey) {\n          var col = _this3.findColumn(columnKey);\n\n          if (!col) {\n            return;\n          }\n\n          var values = currentState.filters[columnKey] || [];\n\n          if (values.length === 0) {\n            return;\n          }\n\n          var onFilter = col.onFilter;\n          data = onFilter ? data.filter(function (record) {\n            return values.some(function (v) {\n              return onFilter(v, record);\n            });\n          }) : data;\n        });\n      }\n\n      return data;\n    }\n  }, {\n    key: \"setSelectedRowKeys\",\n    value: function setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n      var _this4 = this;\n\n      var selectWay = selectionInfo.selectWay,\n          record = selectionInfo.record,\n          checked = selectionInfo.checked,\n          changeRowKeys = selectionInfo.changeRowKeys,\n          nativeEvent = selectionInfo.nativeEvent;\n      var rowSelection = getRowSelection(this.props);\n\n      if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n        this.props.store.setState({\n          selectedRowKeys: selectedRowKeys\n        });\n      }\n\n      var data = this.getFlatData();\n\n      if (!rowSelection.onChange && !rowSelection[selectWay]) {\n        return;\n      }\n\n      var selectedRows = data.filter(function (row, i) {\n        return selectedRowKeys.indexOf(_this4.getRecordKey(row, i)) >= 0;\n      });\n\n      if (rowSelection.onChange) {\n        rowSelection.onChange(selectedRowKeys, selectedRows);\n      }\n\n      if (selectWay === 'onSelect' && rowSelection.onSelect) {\n        rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n      } else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n        var changeRows = data.filter(function (row, i) {\n          return changeRowKeys.indexOf(_this4.getRecordKey(row, i)) >= 0;\n        });\n        rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n      } else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n        var _changeRows = data.filter(function (row, i) {\n          return changeRowKeys.indexOf(_this4.getRecordKey(row, i)) >= 0;\n        });\n\n        rowSelection.onSelectAll(checked, selectedRows, _changeRows);\n      } else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n        rowSelection.onSelectInvert(selectedRowKeys);\n      }\n    }\n  }, {\n    key: \"toggleSortOrder\",\n    value: function toggleSortOrder(column) {\n      var _this5 = this;\n\n      var pagination = _extends({}, this.state.pagination);\n\n      var sortDirections = column.sortDirections || this.props.sortDirections;\n      var _this$state2 = this.state,\n          sortOrder = _this$state2.sortOrder,\n          sortColumn = _this$state2.sortColumn; // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n\n      var newSortOrder; // 切换另一列时，丢弃 sortOrder 的状态\n\n      if (isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n        // 按照sortDirections的内容依次切换排序状态\n        var methodIndex = sortDirections.indexOf(sortOrder) + 1;\n        newSortOrder = methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n      } else {\n        newSortOrder = sortDirections[0];\n      }\n\n      if (this.props.pagination) {\n        // Reset current prop\n        pagination.current = 1;\n        pagination.onChange(pagination.current);\n      }\n\n      var newState = {\n        pagination: pagination,\n        sortOrder: newSortOrder,\n        sortColumn: newSortOrder ? column : null\n      }; // Controlled\n\n      if (this.getSortOrderColumns().length === 0) {\n        this.setState(newState, function () {\n          return _this5.scrollToFirstRow();\n        });\n      }\n\n      var onChange = this.props.onChange;\n\n      if (onChange) {\n        onChange.apply(null, this.prepareParamsArguments(_extends(_extends({}, this.state), newState), column));\n      }\n    }\n  }, {\n    key: \"hasPagination\",\n    value: function hasPagination(props) {\n      return (props || this.props).pagination !== false;\n    }\n  }, {\n    key: \"isSortColumn\",\n    value: function isSortColumn(column) {\n      var sortColumn = this.state.sortColumn;\n\n      if (!column || !sortColumn) {\n        return false;\n      }\n\n      return getColumnKey(sortColumn) === getColumnKey(column);\n    } // Get pagination, filters, sorter\n\n  }, {\n    key: \"prepareParamsArguments\",\n    value: function prepareParamsArguments(state, column) {\n      var pagination = _extends({}, state.pagination); // remove useless handle function in Table.onChange\n\n\n      delete pagination.onChange;\n      delete pagination.onShowSizeChange;\n      var filters = state.filters;\n      var sorter = {};\n      var currentColumn = column;\n\n      if (state.sortColumn && state.sortOrder) {\n        currentColumn = state.sortColumn;\n        sorter.column = state.sortColumn;\n        sorter.order = state.sortOrder;\n      }\n\n      if (currentColumn) {\n        sorter.field = currentColumn.dataIndex;\n        sorter.columnKey = getColumnKey(currentColumn);\n      }\n\n      var extra = {\n        currentDataSource: this.getLocalData(state)\n      };\n      return [pagination, filters, sorter, extra];\n    }\n  }, {\n    key: \"findColumn\",\n    value: function findColumn(myKey) {\n      var column;\n      treeMap(this.state.columns, function (c) {\n        if (getColumnKey(c) === myKey) {\n          column = c;\n        }\n      });\n      return column;\n    }\n  }, {\n    key: \"recursiveSort\",\n    value: function recursiveSort(data, sorterFn) {\n      var _this6 = this;\n\n      var _this$props$childrenC = this.props.childrenColumnName,\n          childrenColumnName = _this$props$childrenC === void 0 ? 'children' : _this$props$childrenC;\n      return data.sort(sorterFn).map(function (item) {\n        return item[childrenColumnName] ? _extends(_extends({}, item), _defineProperty({}, childrenColumnName, _this6.recursiveSort(item[childrenColumnName], sorterFn))) : item;\n      });\n    }\n  }, {\n    key: \"renderPagination\",\n    value: function renderPagination(prefixCls, paginationPosition) {\n      // 强制不需要分页\n      if (!this.hasPagination()) {\n        return null;\n      }\n\n      var size = 'default';\n      var pagination = this.state.pagination;\n\n      if (pagination.size) {\n        size = pagination.size;\n      } else if (this.props.size === 'middle' || this.props.size === 'small') {\n        size = 'small';\n      }\n\n      var position = pagination.position || 'bottom';\n      var total = pagination.total || this.getLocalData().length;\n      return total > 0 && (position === paginationPosition || position === 'both') ? React.createElement(Pagination, _extends({\n        key: \"pagination-\".concat(paginationPosition)\n      }, pagination, {\n        className: classNames(pagination.className, \"\".concat(prefixCls, \"-pagination\")),\n        onChange: this.handlePageChange,\n        total: total,\n        size: size,\n        current: this.getMaxCurrent(total),\n        onShowSizeChange: this.handleShowSizeChange\n      })) : null;\n    }\n  }, {\n    key: \"renderRowSelection\",\n    value: function renderRowSelection(_ref6) {\n      var _this7 = this;\n\n      var prefixCls = _ref6.prefixCls,\n          locale = _ref6.locale,\n          getPopupContainer = _ref6.getPopupContainer;\n      var rowSelection = this.props.rowSelection;\n      var columns = this.state.columns.concat();\n\n      if (rowSelection) {\n        var data = this.getFlatCurrentPageData().filter(function (item, index) {\n          if (rowSelection.getCheckboxProps) {\n            return !_this7.getCheckboxPropsByItem(item, index).disabled;\n          }\n\n          return true;\n        });\n        var selectionColumnClass = classNames(\"\".concat(prefixCls, \"-selection-column\"), _defineProperty({}, \"\".concat(prefixCls, \"-selection-column-custom\"), rowSelection.selections));\n\n        var selectionColumn = _defineProperty({\n          key: 'selection-column',\n          render: this.renderSelectionBox(rowSelection.type),\n          className: selectionColumnClass,\n          fixed: rowSelection.fixed,\n          width: rowSelection.columnWidth,\n          title: rowSelection.columnTitle\n        }, INTERNAL_COL_DEFINE, {\n          className: \"\".concat(prefixCls, \"-selection-col\")\n        });\n\n        if (rowSelection.type !== 'radio') {\n          var checkboxAllDisabled = data.every(function (item, index) {\n            return _this7.getCheckboxPropsByItem(item, index).disabled;\n          });\n          selectionColumn.title = selectionColumn.title || React.createElement(SelectionCheckboxAll, {\n            store: this.props.store,\n            locale: locale,\n            data: data,\n            getCheckboxPropsByItem: this.getCheckboxPropsByItem,\n            getRecordKey: this.getRecordKey,\n            disabled: checkboxAllDisabled,\n            prefixCls: prefixCls,\n            onSelect: this.handleSelectRow,\n            selections: rowSelection.selections,\n            hideDefaultSelections: rowSelection.hideDefaultSelections,\n            getPopupContainer: this.generatePopupContainerFunc(getPopupContainer)\n          });\n        }\n\n        if ('fixed' in rowSelection) {\n          selectionColumn.fixed = rowSelection.fixed;\n        } else if (columns.some(function (column) {\n          return column.fixed === 'left' || column.fixed === true;\n        })) {\n          selectionColumn.fixed = 'left';\n        }\n\n        if (columns[0] && columns[0].key === 'selection-column') {\n          columns[0] = selectionColumn;\n        } else {\n          columns.unshift(selectionColumn);\n        }\n      }\n\n      return columns;\n    }\n  }, {\n    key: \"renderColumnsDropdown\",\n    value: function renderColumnsDropdown(_ref7) {\n      var _this8 = this;\n\n      var prefixCls = _ref7.prefixCls,\n          dropdownPrefixCls = _ref7.dropdownPrefixCls,\n          columns = _ref7.columns,\n          locale = _ref7.locale,\n          getPopupContainer = _ref7.getPopupContainer;\n      var _this$state3 = this.state,\n          sortOrder = _this$state3.sortOrder,\n          filters = _this$state3.filters;\n      return treeMap(columns, function (column, i) {\n        var _classNames4;\n\n        var key = getColumnKey(column, i);\n        var filterDropdown;\n        var sortButton;\n        var onHeaderCell = column.onHeaderCell;\n\n        var isSortColumn = _this8.isSortColumn(column);\n\n        if (column.filters && column.filters.length > 0 || column.filterDropdown) {\n          var colFilters = key in filters ? filters[key] : [];\n          filterDropdown = React.createElement(FilterDropdown, {\n            locale: locale,\n            column: column,\n            selectedKeys: colFilters,\n            confirmFilter: _this8.handleFilter,\n            prefixCls: \"\".concat(prefixCls, \"-filter\"),\n            dropdownPrefixCls: dropdownPrefixCls || 'ant-dropdown',\n            getPopupContainer: _this8.generatePopupContainerFunc(getPopupContainer),\n            key: \"filter-dropdown\"\n          });\n        }\n\n        if (column.sorter) {\n          var sortDirections = column.sortDirections || _this8.props.sortDirections;\n          var isAscend = isSortColumn && sortOrder === 'ascend';\n          var isDescend = isSortColumn && sortOrder === 'descend';\n          var ascend = sortDirections.indexOf('ascend') !== -1 && React.createElement(Icon, {\n            className: \"\".concat(prefixCls, \"-column-sorter-up \").concat(isAscend ? 'on' : 'off'),\n            type: \"caret-up\",\n            theme: \"filled\"\n          });\n          var descend = sortDirections.indexOf('descend') !== -1 && React.createElement(Icon, {\n            className: \"\".concat(prefixCls, \"-column-sorter-down \").concat(isDescend ? 'on' : 'off'),\n            type: \"caret-down\",\n            theme: \"filled\"\n          });\n          sortButton = React.createElement(\"div\", {\n            title: locale.sortTitle,\n            className: classNames(\"\".concat(prefixCls, \"-column-sorter-inner\"), ascend && descend && \"\".concat(prefixCls, \"-column-sorter-inner-full\")),\n            key: \"sorter\"\n          }, ascend, descend);\n\n          onHeaderCell = function onHeaderCell(col) {\n            var colProps = {}; // Get original first\n\n            if (column.onHeaderCell) {\n              colProps = _extends({}, column.onHeaderCell(col));\n            } // Add sorter logic\n\n\n            var onHeaderCellClick = colProps.onClick;\n\n            colProps.onClick = function () {\n              _this8.toggleSortOrder(column);\n\n              if (onHeaderCellClick) {\n                onHeaderCellClick.apply(void 0, arguments);\n              }\n            };\n\n            return colProps;\n          };\n        }\n\n        return _extends(_extends({}, column), {\n          className: classNames(column.className, (_classNames4 = {}, _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-has-actions\"), sortButton || filterDropdown), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-has-filters\"), filterDropdown), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-has-sorters\"), sortButton), _defineProperty(_classNames4, \"\".concat(prefixCls, \"-column-sort\"), isSortColumn && sortOrder), _classNames4)),\n          title: [React.createElement(\"span\", {\n            key: \"title\",\n            className: \"\".concat(prefixCls, \"-header-column\")\n          }, React.createElement(\"div\", {\n            className: sortButton ? \"\".concat(prefixCls, \"-column-sorters\") : undefined\n          }, React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-column-title\")\n          }, _this8.renderColumnTitle(column.title)), React.createElement(\"span\", {\n            className: \"\".concat(prefixCls, \"-column-sorter\")\n          }, sortButton))), filterDropdown],\n          onHeaderCell: onHeaderCell\n        });\n      });\n    }\n  }, {\n    key: \"renderColumnTitle\",\n    value: function renderColumnTitle(title) {\n      var _this$state4 = this.state,\n          filters = _this$state4.filters,\n          sortOrder = _this$state4.sortOrder,\n          sortColumn = _this$state4.sortColumn; // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n\n      if (title instanceof Function) {\n        return title({\n          filters: filters,\n          sortOrder: sortOrder,\n          sortColumn: sortColumn\n        });\n      }\n\n      return title;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderComponent);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var prevProps = prevState.prevProps;\n      var columns = nextProps.columns || normalizeColumns(nextProps.children);\n\n      var nextState = _extends(_extends({}, prevState), {\n        prevProps: nextProps,\n        columns: columns\n      });\n\n      if ('pagination' in nextProps || 'pagination' in prevProps) {\n        var newPagination = _extends(_extends(_extends({}, defaultPagination), prevState.pagination), nextProps.pagination);\n\n        newPagination.current = newPagination.current || 1;\n        newPagination.pageSize = newPagination.pageSize || 10;\n        nextState = _extends(_extends({}, nextState), {\n          pagination: nextProps.pagination !== false ? newPagination : emptyObject\n        });\n      }\n\n      if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n        nextProps.store.setState({\n          selectedRowKeys: nextProps.rowSelection.selectedRowKeys || []\n        });\n      } else if (prevProps.rowSelection && !nextProps.rowSelection) {\n        nextProps.store.setState({\n          selectedRowKeys: []\n        });\n      }\n\n      if ('dataSource' in nextProps && nextProps.dataSource !== prevProps.dataSource) {\n        nextProps.store.setState({\n          selectionDirty: false\n        });\n      } // https://github.com/ant-design/ant-design/issues/10133\n\n\n      nextProps.setCheckboxPropsCache({}); // Update filters\n\n      var filteredValueColumns = getFilteredValueColumns(nextState, nextState.columns);\n\n      if (filteredValueColumns.length > 0) {\n        var filtersFromColumns = getFiltersFromColumns(nextState, nextState.columns);\n\n        var newFilters = _extends({}, nextState.filters);\n\n        Object.keys(filtersFromColumns).forEach(function (key) {\n          newFilters[key] = filtersFromColumns[key];\n        });\n\n        if (isFiltersChanged(nextState, newFilters)) {\n          nextState = _extends(_extends({}, nextState), {\n            filters: newFilters\n          });\n        }\n      }\n\n      if (!isTheSameComponents(nextProps.components, prevProps.components)) {\n        var components = createComponents(nextProps.components);\n        nextState = _extends(_extends({}, nextState), {\n          components: components\n        });\n      }\n\n      return nextState;\n    }\n  }]);\n\n  return Table;\n}(React.Component);\n\nTable.propTypes = {\n  dataSource: PropTypes.array,\n  columns: PropTypes.array,\n  prefixCls: PropTypes.string,\n  useFixedHeader: PropTypes.bool,\n  rowSelection: PropTypes.object,\n  className: PropTypes.string,\n  size: PropTypes.string,\n  loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n  bordered: PropTypes.bool,\n  onChange: PropTypes.func,\n  locale: PropTypes.object,\n  dropdownPrefixCls: PropTypes.string,\n  sortDirections: PropTypes.array,\n  getPopupContainer: PropTypes.func\n};\nTable.defaultProps = {\n  dataSource: [],\n  useFixedHeader: false,\n  className: '',\n  size: 'default',\n  loading: false,\n  bordered: false,\n  indentSize: 20,\n  locale: {},\n  rowKey: 'key',\n  showHeader: true,\n  sortDirections: ['ascend', 'descend'],\n  childrenColumnName: 'children'\n};\npolyfill(Table);\n\nvar StoreTable = /*#__PURE__*/function (_React$Component2) {\n  _inherits(StoreTable, _React$Component2);\n\n  function StoreTable(props) {\n    var _this9;\n\n    _classCallCheck(this, StoreTable);\n\n    _this9 = _possibleConstructorReturn(this, _getPrototypeOf(StoreTable).call(this, props));\n\n    _this9.setCheckboxPropsCache = function (cache) {\n      return _this9.CheckboxPropsCache = cache;\n    };\n\n    _this9.CheckboxPropsCache = {};\n    _this9.store = createStore({\n      selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n      selectionDirty: false\n    });\n    return _this9;\n  }\n\n  _createClass(StoreTable, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Table, _extends({}, this.props, {\n        store: this.store,\n        checkboxPropsCache: this.CheckboxPropsCache,\n        setCheckboxPropsCache: this.setCheckboxPropsCache\n      }));\n    }\n  }]);\n\n  return StoreTable;\n}(React.Component);\n\nStoreTable.displayName = 'withStore(Table)';\nStoreTable.Column = Column;\nStoreTable.ColumnGroup = ColumnGroup;\nexport default StoreTable;","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","omit","RcTable","INTERNAL_COL_DEFINE","PropTypes","classNames","shallowEqual","polyfill","FilterDropdown","createStore","SelectionBox","SelectionCheckboxAll","Column","ColumnGroup","createBodyRow","flatArray","treeMap","flatFilter","normalizeColumns","scrollTo","Pagination","Icon","Spin","TransButton","LocaleReceiver","defaultLocale","ConfigConsumer","warning","noop","stopPropagation","getRowSelection","props","rowSelection","getColumnKey","column","index","key","dataIndex","isSameColumn","a","b","value","other","toString","defaultPagination","onChange","onShowSizeChange","emptyObject","createComponents","components","bodyRow","body","row","_extends","isTheSameComponents","components1","components2","every","getFilteredValueColumns","state","columns","filteredValue","getFiltersFromColumns","filters","forEach","col","colKey","isFiltersChanged","keys","some","columnKey","Table","_classCallCheck","_this","setTableRef","table","rcTable","getCheckboxPropsByItem","item","getCheckboxProps","getRecordKey","checkboxPropsCache","checkboxProps","record","rowKey","recordKey","undefined","onRow","prefixCls","custom","store","generatePopupContainerFunc","getPopupContainer","scroll","tableNode","scrollToFirstRow","scrollToFirstRowOnChange","getContainer","bodyTable","handleFilter","nextFilters","pagination","currentColumnKeys","c","children","push","current","newState","filtersToSetState","_typeof","setState","selectionDirty","apply","prepareParamsArguments","handleSelect","rowIndex","checked","target","nativeEvent","defaultSelection","getState","getDefaultSelection","selectedRowKeys","concat","pivot","rows","getFlatCurrentPageData","realIndex","expandedRowRender","findIndex","shiftKey","changeRowKeys","direction","Math","sign","dist","abs","step","disabled","includes","filter","j","_loop","setSelectedRowKeys","selectWay","handleRadioSelect","handleSelectRow","selectionKey","onSelectFunc","data","changeableRowKeys","map","splice","customSelectionStartIndex","hideDefaultSelections","handlePageChange","otherArguments","arguments","handleShowSizeChange","pageSize","nextPagination","renderExpandIcon","expandable","expanded","needIndentSpaced","onExpand","componentName","locale","className","onClick","event","collapse","expand","noStyle","renderSelectionBox","type","_","handleChange","renderTable","renderEmpty","dropdownPrefixCls","contextLocale","contextGetPopupContainer","showHeader","_a","restTableProps","restProps","getCurrentPageData","expandIconAsCell","realGetPopupContainer","mergedLocale","emptyText","classString","size","bordered","columnsWithRowSelection","renderRowSelection","renderColumnsDropdown","newColumn","expandIconColumnIndex","ref","expandIcon","renderComponent","getPrefixCls","customizePrefixCls","customizeDropdownPrefixCls","style","loading","spinning","paginationPatchClass","hasPagination","renderPagination","columnsProp","fixed","getDefaultSortOrder","getDefaultPagination","prevProps","sortColumn","sortOrder","getSortOrderColumns","sortState","getSortStateFromColumns","getFlatData","_this2","defaultChecked","defaultCurrent","defaultPageSize","definedSortState","defaultSortedColumn","defaultSortOrder","sortedColumn","total","floor","sorter","result","getLocalData","Number","MAX_VALUE","getMaxCurrent","slice","childrenColumnName","currentState","dataSource","sorterFn","getSorterFn","recursiveSort","_this3","findColumn","values","onFilter","v","selectionInfo","selectedRows","_this4","onSelect","onSelectMultiple","changeRows","onSelectAll","onSelectInvert","sortDirections","newSortOrder","methodIndex","_this5","currentColumn","order","field","extra","currentDataSource","myKey","sort","_this6","paginationPosition","position","_this7","selectionColumnClass","selections","selectionColumn","render","width","columnWidth","title","columnTitle","checkboxAllDisabled","unshift","filterDropdown","sortButton","onHeaderCell","isSortColumn","_this8","colFilters","selectedKeys","confirmFilter","isAscend","isDescend","ascend","theme","descend","sortTitle","colProps","onHeaderCellClick","toggleSortOrder","renderColumnTitle","Function","nextProps","prevState","nextState","newPagination","setCheckboxPropsCache","filteredValueColumns","filtersFromColumns","newFilters","Component","propTypes","array","string","useFixedHeader","bool","object","oneOfType","func","defaultProps","indentSize","StoreTable","_this9","cache","CheckboxPropsCache","displayName"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\react-youtube-clone-master\\client\\node_modules\\antd\\es\\table\\table\\Table.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\n/* eslint-disable prefer-spread */\nimport * as React from 'react';\nimport omit from 'omit.js';\nimport RcTable, { INTERNAL_COL_DEFINE } from 'rc-table';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport { polyfill } from 'react-lifecycles-compat';\nimport FilterDropdown from './filterDropdown';\nimport createStore from './createStore';\nimport SelectionBox from './SelectionBox';\nimport SelectionCheckboxAll from './SelectionCheckboxAll';\nimport Column from './Column';\nimport ColumnGroup from './ColumnGroup';\nimport createBodyRow from './createBodyRow';\nimport { flatArray, treeMap, flatFilter, normalizeColumns } from './util';\nimport scrollTo from '../_util/scrollTo';\nimport Pagination from '../pagination';\nimport Icon from '../icon';\nimport Spin from '../spin';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\nimport defaultLocale from '../locale/default';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nfunction noop() { }\nfunction stopPropagation(e) {\n    e.stopPropagation();\n}\nfunction getRowSelection(props) {\n    return props.rowSelection || {};\n}\nfunction getColumnKey(column, index) {\n    return column.key || column.dataIndex || index;\n}\nfunction isSameColumn(a, b) {\n    if (a && b && a.key && a.key === b.key) {\n        return true;\n    }\n    return (a === b ||\n        shallowEqual(a, b, (value, other) => {\n            if (typeof value === 'function' && typeof other === 'function') {\n                return value === other || value.toString() === other.toString();\n            }\n        }));\n}\nconst defaultPagination = {\n    onChange: noop,\n    onShowSizeChange: noop,\n};\n/**\n * Avoid creating new object, so that parent component's shouldComponentUpdate\n * can works appropriately。\n */\nconst emptyObject = {};\nconst createComponents = (components = {}) => {\n    const bodyRow = components && components.body && components.body.row;\n    return Object.assign(Object.assign({}, components), { body: Object.assign(Object.assign({}, components.body), { row: createBodyRow(bodyRow) }) });\n};\nfunction isTheSameComponents(components1 = {}, components2 = {}) {\n    return (components1 === components2 ||\n        ['table', 'header', 'body'].every((key) => shallowEqual(components1[key], components2[key])));\n}\nfunction getFilteredValueColumns(state, columns) {\n    return flatFilter(columns || (state || {}).columns || [], (column) => typeof column.filteredValue !== 'undefined');\n}\nfunction getFiltersFromColumns(state = {}, columns) {\n    const filters = {};\n    getFilteredValueColumns(state, columns).forEach((col) => {\n        const colKey = getColumnKey(col);\n        filters[colKey] = col.filteredValue;\n    });\n    return filters;\n}\nfunction isFiltersChanged(state, filters) {\n    if (Object.keys(filters).length !== Object.keys(state.filters).length) {\n        return true;\n    }\n    return Object.keys(filters).some(columnKey => filters[columnKey] !== state.filters[columnKey]);\n}\nclass Table extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setTableRef = (table) => {\n            this.rcTable = table;\n        };\n        this.getCheckboxPropsByItem = (item, index) => {\n            const rowSelection = getRowSelection(this.props);\n            if (!rowSelection.getCheckboxProps) {\n                return {};\n            }\n            const key = this.getRecordKey(item, index);\n            // Cache checkboxProps\n            if (!this.props.checkboxPropsCache[key]) {\n                this.props.checkboxPropsCache[key] = rowSelection.getCheckboxProps(item) || {};\n                const checkboxProps = this.props.checkboxPropsCache[key];\n                warning(!('checked' in checkboxProps) && !('defaultChecked' in checkboxProps), 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n            }\n            return this.props.checkboxPropsCache[key];\n        };\n        this.getRecordKey = (record, index) => {\n            const { rowKey } = this.props;\n            const recordKey = typeof rowKey === 'function' ? rowKey(record, index) : record[rowKey];\n            warning(recordKey !== undefined, 'Table', 'Each record in dataSource of table should have a unique `key` prop, ' +\n                'or set `rowKey` of Table to an unique primary key, ' +\n                'see https://u.ant.design/table-row-key');\n            return recordKey === undefined ? index : recordKey;\n        };\n        this.onRow = (prefixCls, record, index) => {\n            const { onRow } = this.props;\n            const custom = onRow ? onRow(record, index) : {};\n            return Object.assign(Object.assign({}, custom), { prefixCls, store: this.props.store, rowKey: this.getRecordKey(record, index) });\n        };\n        this.generatePopupContainerFunc = (getPopupContainer) => {\n            const { scroll } = this.props;\n            const table = this.rcTable;\n            if (getPopupContainer) {\n                return getPopupContainer;\n            }\n            // Use undefined to let rc component use default logic.\n            return scroll && table ? () => table.tableNode : undefined;\n        };\n        this.scrollToFirstRow = () => {\n            const { scroll } = this.props;\n            if (scroll && scroll.scrollToFirstRowOnChange !== false) {\n                scrollTo(0, {\n                    getContainer: () => this.rcTable.bodyTable,\n                });\n            }\n        };\n        this.handleFilter = (column, nextFilters) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            const filters = Object.assign(Object.assign({}, this.state.filters), { [getColumnKey(column)]: nextFilters });\n            // Remove filters not in current columns\n            const currentColumnKeys = [];\n            treeMap(this.state.columns, c => {\n                if (!c.children) {\n                    currentColumnKeys.push(getColumnKey(c));\n                }\n            });\n            Object.keys(filters).forEach(columnKey => {\n                if (currentColumnKeys.indexOf(columnKey) < 0) {\n                    delete filters[columnKey];\n                }\n            });\n            if (props.pagination) {\n                // Reset current prop\n                pagination.current = 1;\n                pagination.onChange(pagination.current);\n            }\n            const newState = {\n                pagination,\n                filters: {},\n            };\n            const filtersToSetState = Object.assign({}, filters);\n            // Remove filters which is controlled\n            getFilteredValueColumns(this.state).forEach((col) => {\n                const columnKey = getColumnKey(col);\n                if (columnKey) {\n                    delete filtersToSetState[columnKey];\n                }\n            });\n            if (Object.keys(filtersToSetState).length > 0) {\n                newState.filters = filtersToSetState;\n            }\n            // Controlled current prop will not respond user interaction\n            if (typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => {\n                this.scrollToFirstRow();\n                this.props.store.setState({\n                    selectionDirty: false,\n                });\n                const { onChange } = this.props;\n                if (onChange) {\n                    onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, filters,\n                        pagination })));\n                }\n            });\n        };\n        this.handleSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const defaultSelection = this.props.store.getState().selectionDirty\n                ? []\n                : this.getDefaultSelection();\n            let selectedRowKeys = this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n            const key = this.getRecordKey(record, rowIndex);\n            const { pivot } = this.state;\n            const rows = this.getFlatCurrentPageData();\n            let realIndex = rowIndex;\n            if (this.props.expandedRowRender) {\n                realIndex = rows.findIndex(row => this.getRecordKey(row, rowIndex) === key);\n            }\n            if (nativeEvent.shiftKey && pivot !== undefined && realIndex !== pivot) {\n                const changeRowKeys = [];\n                const direction = Math.sign(pivot - realIndex);\n                const dist = Math.abs(pivot - realIndex);\n                let step = 0;\n                while (step <= dist) {\n                    const i = realIndex + step * direction;\n                    step += 1;\n                    const row = rows[i];\n                    const rowKey = this.getRecordKey(row, i);\n                    const checkboxProps = this.getCheckboxPropsByItem(row, i);\n                    if (!checkboxProps.disabled) {\n                        if (selectedRowKeys.includes(rowKey)) {\n                            if (!checked) {\n                                selectedRowKeys = selectedRowKeys.filter((j) => rowKey !== j);\n                                changeRowKeys.push(rowKey);\n                            }\n                        }\n                        else if (checked) {\n                            selectedRowKeys.push(rowKey);\n                            changeRowKeys.push(rowKey);\n                        }\n                    }\n                }\n                this.setState({ pivot: realIndex });\n                this.props.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelectMultiple',\n                    record,\n                    checked,\n                    changeRowKeys,\n                    nativeEvent,\n                });\n            }\n            else {\n                if (checked) {\n                    selectedRowKeys.push(this.getRecordKey(record, realIndex));\n                }\n                else {\n                    selectedRowKeys = selectedRowKeys.filter((i) => key !== i);\n                }\n                this.setState({ pivot: realIndex });\n                this.props.store.setState({\n                    selectionDirty: true,\n                });\n                this.setSelectedRowKeys(selectedRowKeys, {\n                    selectWay: 'onSelect',\n                    record,\n                    checked,\n                    changeRowKeys: undefined,\n                    nativeEvent,\n                });\n            }\n        };\n        this.handleRadioSelect = (record, rowIndex, e) => {\n            const checked = e.target.checked;\n            const nativeEvent = e.nativeEvent;\n            const key = this.getRecordKey(record, rowIndex);\n            const selectedRowKeys = [key];\n            this.props.store.setState({\n                selectionDirty: true,\n            });\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay: 'onSelect',\n                record,\n                checked,\n                changeRowKeys: undefined,\n                nativeEvent,\n            });\n        };\n        this.handleSelectRow = (selectionKey, index, onSelectFunc) => {\n            const data = this.getFlatCurrentPageData();\n            const defaultSelection = this.props.store.getState().selectionDirty\n                ? []\n                : this.getDefaultSelection();\n            const selectedRowKeys = this.props.store.getState().selectedRowKeys.concat(defaultSelection);\n            const changeableRowKeys = data\n                .filter((item, i) => !this.getCheckboxPropsByItem(item, i).disabled)\n                .map((item, i) => this.getRecordKey(item, i));\n            const changeRowKeys = [];\n            let selectWay = 'onSelectAll';\n            let checked;\n            // handle default selection\n            switch (selectionKey) {\n                case 'all':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = true;\n                    break;\n                case 'removeAll':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) >= 0) {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                            changeRowKeys.push(key);\n                        }\n                    });\n                    selectWay = 'onSelectAll';\n                    checked = false;\n                    break;\n                case 'invert':\n                    changeableRowKeys.forEach(key => {\n                        if (selectedRowKeys.indexOf(key) < 0) {\n                            selectedRowKeys.push(key);\n                        }\n                        else {\n                            selectedRowKeys.splice(selectedRowKeys.indexOf(key), 1);\n                        }\n                        changeRowKeys.push(key);\n                        selectWay = 'onSelectInvert';\n                    });\n                    break;\n                default:\n                    break;\n            }\n            this.props.store.setState({\n                selectionDirty: true,\n            });\n            // when select custom selection, callback selections[n].onSelect\n            const { rowSelection } = this.props;\n            let customSelectionStartIndex = 2;\n            if (rowSelection && rowSelection.hideDefaultSelections) {\n                customSelectionStartIndex = 0;\n            }\n            if (index >= customSelectionStartIndex && typeof onSelectFunc === 'function') {\n                return onSelectFunc(changeableRowKeys);\n            }\n            this.setSelectedRowKeys(selectedRowKeys, {\n                selectWay,\n                checked,\n                changeRowKeys,\n            });\n        };\n        this.handlePageChange = (current, ...otherArguments) => {\n            const props = this.props;\n            const pagination = Object.assign({}, this.state.pagination);\n            if (current) {\n                pagination.current = current;\n            }\n            else {\n                pagination.current = pagination.current || 1;\n            }\n            pagination.onChange(pagination.current, ...otherArguments);\n            const newState = {\n                pagination,\n            };\n            // Controlled current prop will not respond user interaction\n            if (props.pagination && typeof props.pagination === 'object' && 'current' in props.pagination) {\n                newState.pagination = Object.assign(Object.assign({}, pagination), { current: this.state.pagination.current });\n            }\n            this.setState(newState, () => this.scrollToFirstRow());\n            this.props.store.setState({\n                selectionDirty: false,\n            });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { selectionDirty: false, pagination })));\n            }\n        };\n        this.handleShowSizeChange = (current, pageSize) => {\n            const { pagination } = this.state;\n            pagination.onShowSizeChange(current, pageSize);\n            const nextPagination = Object.assign(Object.assign({}, pagination), { pageSize,\n                current });\n            this.setState({ pagination: nextPagination });\n            const { onChange } = this.props;\n            if (onChange) {\n                onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), { pagination: nextPagination })));\n            }\n        };\n        this.renderExpandIcon = (prefixCls) => ({ expandable, expanded, needIndentSpaced, record, onExpand, }) => {\n            if (expandable) {\n                return (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n          {(locale) => (<TransButton className={classNames(`${prefixCls}-row-expand-icon`, {\n                    [`${prefixCls}-row-collapsed`]: !expanded,\n                    [`${prefixCls}-row-expanded`]: expanded,\n                })} onClick={event => {\n                    onExpand(record, event);\n                }} aria-label={expanded ? locale.collapse : locale.expand} noStyle/>)}\n        </LocaleReceiver>);\n            }\n            if (needIndentSpaced) {\n                return <span className={`${prefixCls}-row-expand-icon ${prefixCls}-row-spaced`}/>;\n            }\n            return null;\n        };\n        this.renderSelectionBox = (type) => {\n            return (_, record, index) => {\n                const rowKey = this.getRecordKey(record, index);\n                const props = this.getCheckboxPropsByItem(record, index);\n                const handleChange = (e) => type === 'radio'\n                    ? this.handleRadioSelect(record, index, e)\n                    : this.handleSelect(record, index, e);\n                return (<span onClick={stopPropagation}>\n          <SelectionBox type={type} store={this.props.store} rowIndex={rowKey} onChange={handleChange} defaultSelection={this.getDefaultSelection()} {...props}/>\n        </span>);\n            };\n        };\n        this.renderTable = ({ prefixCls, renderEmpty, dropdownPrefixCls, contextLocale, getPopupContainer: contextGetPopupContainer, }) => {\n            const _a = this.props, { showHeader, locale, getPopupContainer } = _a, restTableProps = __rest(_a, [\"showHeader\", \"locale\", \"getPopupContainer\"]);\n            // do not pass prop.style to rc-table, since already apply it to container div\n            const restProps = omit(restTableProps, ['style']);\n            const data = this.getCurrentPageData();\n            const expandIconAsCell = this.props.expandedRowRender && this.props.expandIconAsCell !== false;\n            // use props.getPopupContainer first\n            const realGetPopupContainer = getPopupContainer || contextGetPopupContainer;\n            // Merge too locales\n            const mergedLocale = Object.assign(Object.assign({}, contextLocale), locale);\n            if (!locale || !locale.emptyText) {\n                mergedLocale.emptyText = renderEmpty('Table');\n            }\n            const classString = classNames(`${prefixCls}-${this.props.size}`, {\n                [`${prefixCls}-bordered`]: this.props.bordered,\n                [`${prefixCls}-empty`]: !data.length,\n                [`${prefixCls}-without-column-header`]: !showHeader,\n            });\n            const columnsWithRowSelection = this.renderRowSelection({\n                prefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            });\n            const columns = this.renderColumnsDropdown({\n                columns: columnsWithRowSelection,\n                prefixCls,\n                dropdownPrefixCls,\n                locale: mergedLocale,\n                getPopupContainer: realGetPopupContainer,\n            }).map((column, i) => {\n                const newColumn = Object.assign({}, column);\n                newColumn.key = getColumnKey(newColumn, i);\n                return newColumn;\n            });\n            let expandIconColumnIndex = columns[0] && columns[0].key === 'selection-column' ? 1 : 0;\n            if ('expandIconColumnIndex' in restProps) {\n                expandIconColumnIndex = restProps.expandIconColumnIndex;\n            }\n            return (<RcTable ref={this.setTableRef} key=\"table\" expandIcon={this.renderExpandIcon(prefixCls)} {...restProps} onRow={(record, index) => this.onRow(prefixCls, record, index)} components={this.state.components} prefixCls={prefixCls} data={data} columns={columns} showHeader={showHeader} className={classString} expandIconColumnIndex={expandIconColumnIndex} expandIconAsCell={expandIconAsCell} emptyText={mergedLocale.emptyText}/>);\n        };\n        this.renderComponent = ({ getPrefixCls, renderEmpty, getPopupContainer }) => {\n            const { prefixCls: customizePrefixCls, dropdownPrefixCls: customizeDropdownPrefixCls, style, className, } = this.props;\n            const data = this.getCurrentPageData();\n            let loading = this.props.loading;\n            if (typeof loading === 'boolean') {\n                loading = {\n                    spinning: loading,\n                };\n            }\n            const prefixCls = getPrefixCls('table', customizePrefixCls);\n            const dropdownPrefixCls = getPrefixCls('dropdown', customizeDropdownPrefixCls);\n            const table = (<LocaleReceiver componentName=\"Table\" defaultLocale={defaultLocale.Table}>\n        {locale => this.renderTable({\n                prefixCls,\n                renderEmpty,\n                dropdownPrefixCls,\n                contextLocale: locale,\n                getPopupContainer,\n            })}\n      </LocaleReceiver>);\n            // if there is no pagination or no data,\n            // the height of spin should decrease by half of pagination\n            const paginationPatchClass = this.hasPagination() && data && data.length !== 0\n                ? `${prefixCls}-with-pagination`\n                : `${prefixCls}-without-pagination`;\n            return (<div className={classNames(`${prefixCls}-wrapper`, className)} style={style}>\n        <Spin {...loading} className={loading.spinning ? `${paginationPatchClass} ${prefixCls}-spin-holder` : ''}>\n          {this.renderPagination(prefixCls, 'top')}\n          {table}\n          {this.renderPagination(prefixCls, 'bottom')}\n        </Spin>\n      </div>);\n        };\n        const { expandedRowRender, columns: columnsProp = [] } = props;\n        warning(!('columnsPageRange' in props || 'columnsPageSize' in props), 'Table', '`columnsPageRange` and `columnsPageSize` are removed, please use ' +\n            'fixed columns instead, see: https://u.ant.design/fixed-columns.');\n        if (expandedRowRender && columnsProp.some(({ fixed }) => !!fixed)) {\n            warning(false, 'Table', '`expandedRowRender` and `Column.fixed` are not compatible. Please use one of them at one time.');\n        }\n        const columns = columnsProp || normalizeColumns(props.children);\n        this.state = Object.assign(Object.assign({}, this.getDefaultSortOrder(columns)), { \n            // 减少状态\n            filters: getFiltersFromColumns(), pagination: this.getDefaultPagination(props), pivot: undefined, prevProps: props, components: createComponents(props.components), columns });\n    }\n    static getDerivedStateFromProps(nextProps, prevState) {\n        const { prevProps } = prevState;\n        const columns = nextProps.columns || normalizeColumns(nextProps.children);\n        let nextState = Object.assign(Object.assign({}, prevState), { prevProps: nextProps, columns });\n        if ('pagination' in nextProps || 'pagination' in prevProps) {\n            const newPagination = Object.assign(Object.assign(Object.assign({}, defaultPagination), prevState.pagination), nextProps.pagination);\n            newPagination.current = newPagination.current || 1;\n            newPagination.pageSize = newPagination.pageSize || 10;\n            nextState = Object.assign(Object.assign({}, nextState), { pagination: nextProps.pagination !== false ? newPagination : emptyObject });\n        }\n        if (nextProps.rowSelection && 'selectedRowKeys' in nextProps.rowSelection) {\n            nextProps.store.setState({\n                selectedRowKeys: nextProps.rowSelection.selectedRowKeys || [],\n            });\n        }\n        else if (prevProps.rowSelection && !nextProps.rowSelection) {\n            nextProps.store.setState({\n                selectedRowKeys: [],\n            });\n        }\n        if ('dataSource' in nextProps && nextProps.dataSource !== prevProps.dataSource) {\n            nextProps.store.setState({\n                selectionDirty: false,\n            });\n        }\n        // https://github.com/ant-design/ant-design/issues/10133\n        nextProps.setCheckboxPropsCache({});\n        // Update filters\n        const filteredValueColumns = getFilteredValueColumns(nextState, nextState.columns);\n        if (filteredValueColumns.length > 0) {\n            const filtersFromColumns = getFiltersFromColumns(nextState, nextState.columns);\n            const newFilters = Object.assign({}, nextState.filters);\n            Object.keys(filtersFromColumns).forEach(key => {\n                newFilters[key] = filtersFromColumns[key];\n            });\n            if (isFiltersChanged(nextState, newFilters)) {\n                nextState = Object.assign(Object.assign({}, nextState), { filters: newFilters });\n            }\n        }\n        if (!isTheSameComponents(nextProps.components, prevProps.components)) {\n            const components = createComponents(nextProps.components);\n            nextState = Object.assign(Object.assign({}, nextState), { components });\n        }\n        return nextState;\n    }\n    componentDidUpdate() {\n        const { columns, sortColumn, sortOrder } = this.state;\n        if (this.getSortOrderColumns(columns).length > 0) {\n            const sortState = this.getSortStateFromColumns(columns);\n            if (sortState.sortColumn !== sortColumn || sortState.sortOrder !== sortOrder) {\n                this.setState(sortState);\n            }\n        }\n    }\n    getDefaultSelection() {\n        const rowSelection = getRowSelection(this.props);\n        if (!rowSelection.getCheckboxProps) {\n            return [];\n        }\n        return this.getFlatData()\n            .filter((item, rowIndex) => this.getCheckboxPropsByItem(item, rowIndex).defaultChecked)\n            .map((record, rowIndex) => this.getRecordKey(record, rowIndex));\n    }\n    getDefaultPagination(props) {\n        const pagination = typeof props.pagination === 'object' ? props.pagination : {};\n        let current;\n        if ('current' in pagination) {\n            current = pagination.current;\n        }\n        else if ('defaultCurrent' in pagination) {\n            current = pagination.defaultCurrent;\n        }\n        let pageSize;\n        if ('pageSize' in pagination) {\n            pageSize = pagination.pageSize;\n        }\n        else if ('defaultPageSize' in pagination) {\n            pageSize = pagination.defaultPageSize;\n        }\n        return this.hasPagination(props)\n            ? Object.assign(Object.assign(Object.assign({}, defaultPagination), pagination), { current: current || 1, pageSize: pageSize || 10 }) : {};\n    }\n    getSortOrderColumns(columns) {\n        return flatFilter(columns || (this.state || {}).columns || [], (column) => 'sortOrder' in column);\n    }\n    getDefaultSortOrder(columns) {\n        const definedSortState = this.getSortStateFromColumns(columns);\n        const defaultSortedColumn = flatFilter(columns || [], (column) => column.defaultSortOrder != null)[0];\n        if (defaultSortedColumn && !definedSortState.sortColumn) {\n            return {\n                sortColumn: defaultSortedColumn,\n                sortOrder: defaultSortedColumn.defaultSortOrder,\n            };\n        }\n        return definedSortState;\n    }\n    getSortStateFromColumns(columns) {\n        // return first column which sortOrder is not falsy\n        const sortedColumn = this.getSortOrderColumns(columns).filter((col) => col.sortOrder)[0];\n        if (sortedColumn) {\n            return {\n                sortColumn: sortedColumn,\n                sortOrder: sortedColumn.sortOrder,\n            };\n        }\n        return {\n            sortColumn: null,\n            sortOrder: null,\n        };\n    }\n    getMaxCurrent(total) {\n        const { pagination: { current, pageSize }, } = this.state;\n        if ((current - 1) * pageSize >= total) {\n            return Math.floor((total - 1) / pageSize) + 1;\n        }\n        return current;\n    }\n    getSorterFn(state) {\n        const { sortOrder, sortColumn } = state || this.state;\n        if (!sortOrder || !sortColumn || typeof sortColumn.sorter !== 'function') {\n            return;\n        }\n        return (a, b) => {\n            const result = sortColumn.sorter(a, b, sortOrder);\n            if (result !== 0) {\n                return sortOrder === 'descend' ? -result : result;\n            }\n            return 0;\n        };\n    }\n    getCurrentPageData() {\n        let data = this.getLocalData();\n        let current;\n        let pageSize;\n        const state = this.state;\n        // 如果没有分页的话，默认全部展示\n        if (!this.hasPagination()) {\n            pageSize = Number.MAX_VALUE;\n            current = 1;\n        }\n        else {\n            pageSize = state.pagination.pageSize;\n            current = this.getMaxCurrent(state.pagination.total || data.length);\n        }\n        // 分页\n        // ---\n        // 当数据量少于等于每页数量时，直接设置数据\n        // 否则进行读取分页数据\n        if (data.length > pageSize || pageSize === Number.MAX_VALUE) {\n            data = data.slice((current - 1) * pageSize, current * pageSize);\n        }\n        return data;\n    }\n    getFlatData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getLocalData(null, false), childrenColumnName);\n    }\n    getFlatCurrentPageData() {\n        const { childrenColumnName } = this.props;\n        return flatArray(this.getCurrentPageData(), childrenColumnName);\n    }\n    getLocalData(state, filter = true) {\n        const currentState = state || this.state;\n        const { dataSource } = this.props;\n        let data = dataSource || [];\n        // 优化本地排序\n        data = data.slice(0);\n        const sorterFn = this.getSorterFn(currentState);\n        if (sorterFn) {\n            data = this.recursiveSort(data, sorterFn);\n        }\n        // 筛选\n        if (filter && currentState.filters) {\n            Object.keys(currentState.filters).forEach(columnKey => {\n                const col = this.findColumn(columnKey);\n                if (!col) {\n                    return;\n                }\n                const values = currentState.filters[columnKey] || [];\n                if (values.length === 0) {\n                    return;\n                }\n                const onFilter = col.onFilter;\n                data = onFilter\n                    ? data.filter(record => {\n                        return values.some(v => onFilter(v, record));\n                    })\n                    : data;\n            });\n        }\n        return data;\n    }\n    setSelectedRowKeys(selectedRowKeys, selectionInfo) {\n        const { selectWay, record, checked, changeRowKeys, nativeEvent } = selectionInfo;\n        const rowSelection = getRowSelection(this.props);\n        if (rowSelection && !('selectedRowKeys' in rowSelection)) {\n            this.props.store.setState({ selectedRowKeys });\n        }\n        const data = this.getFlatData();\n        if (!rowSelection.onChange && !rowSelection[selectWay]) {\n            return;\n        }\n        const selectedRows = data.filter((row, i) => selectedRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n        if (rowSelection.onChange) {\n            rowSelection.onChange(selectedRowKeys, selectedRows);\n        }\n        if (selectWay === 'onSelect' && rowSelection.onSelect) {\n            rowSelection.onSelect(record, checked, selectedRows, nativeEvent);\n        }\n        else if (selectWay === 'onSelectMultiple' && rowSelection.onSelectMultiple) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectMultiple(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectAll' && rowSelection.onSelectAll) {\n            const changeRows = data.filter((row, i) => changeRowKeys.indexOf(this.getRecordKey(row, i)) >= 0);\n            rowSelection.onSelectAll(checked, selectedRows, changeRows);\n        }\n        else if (selectWay === 'onSelectInvert' && rowSelection.onSelectInvert) {\n            rowSelection.onSelectInvert(selectedRowKeys);\n        }\n    }\n    toggleSortOrder(column) {\n        const pagination = Object.assign({}, this.state.pagination);\n        const sortDirections = column.sortDirections || this.props.sortDirections;\n        const { sortOrder, sortColumn } = this.state;\n        // 只同时允许一列进行排序，否则会导致排序顺序的逻辑问题\n        let newSortOrder;\n        // 切换另一列时，丢弃 sortOrder 的状态\n        if (isSameColumn(sortColumn, column) && sortOrder !== undefined) {\n            // 按照sortDirections的内容依次切换排序状态\n            const methodIndex = sortDirections.indexOf(sortOrder) + 1;\n            newSortOrder =\n                methodIndex === sortDirections.length ? undefined : sortDirections[methodIndex];\n        }\n        else {\n            newSortOrder = sortDirections[0];\n        }\n        if (this.props.pagination) {\n            // Reset current prop\n            pagination.current = 1;\n            pagination.onChange(pagination.current);\n        }\n        const newState = {\n            pagination,\n            sortOrder: newSortOrder,\n            sortColumn: newSortOrder ? column : null,\n        };\n        // Controlled\n        if (this.getSortOrderColumns().length === 0) {\n            this.setState(newState, () => this.scrollToFirstRow());\n        }\n        const { onChange } = this.props;\n        if (onChange) {\n            onChange.apply(null, this.prepareParamsArguments(Object.assign(Object.assign({}, this.state), newState), column));\n        }\n    }\n    hasPagination(props) {\n        return (props || this.props).pagination !== false;\n    }\n    isSortColumn(column) {\n        const { sortColumn } = this.state;\n        if (!column || !sortColumn) {\n            return false;\n        }\n        return getColumnKey(sortColumn) === getColumnKey(column);\n    }\n    // Get pagination, filters, sorter\n    prepareParamsArguments(state, column) {\n        const pagination = Object.assign({}, state.pagination);\n        // remove useless handle function in Table.onChange\n        delete pagination.onChange;\n        delete pagination.onShowSizeChange;\n        const filters = state.filters;\n        const sorter = {};\n        let currentColumn = column;\n        if (state.sortColumn && state.sortOrder) {\n            currentColumn = state.sortColumn;\n            sorter.column = state.sortColumn;\n            sorter.order = state.sortOrder;\n        }\n        if (currentColumn) {\n            sorter.field = currentColumn.dataIndex;\n            sorter.columnKey = getColumnKey(currentColumn);\n        }\n        const extra = {\n            currentDataSource: this.getLocalData(state),\n        };\n        return [pagination, filters, sorter, extra];\n    }\n    findColumn(myKey) {\n        let column;\n        treeMap(this.state.columns, c => {\n            if (getColumnKey(c) === myKey) {\n                column = c;\n            }\n        });\n        return column;\n    }\n    recursiveSort(data, sorterFn) {\n        const { childrenColumnName = 'children' } = this.props;\n        return data.sort(sorterFn).map((item) => item[childrenColumnName]\n            ? Object.assign(Object.assign({}, item), { [childrenColumnName]: this.recursiveSort(item[childrenColumnName], sorterFn) }) : item);\n    }\n    renderPagination(prefixCls, paginationPosition) {\n        // 强制不需要分页\n        if (!this.hasPagination()) {\n            return null;\n        }\n        let size = 'default';\n        const { pagination } = this.state;\n        if (pagination.size) {\n            size = pagination.size;\n        }\n        else if (this.props.size === 'middle' || this.props.size === 'small') {\n            size = 'small';\n        }\n        const position = pagination.position || 'bottom';\n        const total = pagination.total || this.getLocalData().length;\n        return total > 0 && (position === paginationPosition || position === 'both') ? (<Pagination key={`pagination-${paginationPosition}`} {...pagination} className={classNames(pagination.className, `${prefixCls}-pagination`)} onChange={this.handlePageChange} total={total} size={size} current={this.getMaxCurrent(total)} onShowSizeChange={this.handleShowSizeChange}/>) : null;\n    }\n    renderRowSelection({ prefixCls, locale, getPopupContainer, }) {\n        const { rowSelection } = this.props;\n        const columns = this.state.columns.concat();\n        if (rowSelection) {\n            const data = this.getFlatCurrentPageData().filter((item, index) => {\n                if (rowSelection.getCheckboxProps) {\n                    return !this.getCheckboxPropsByItem(item, index).disabled;\n                }\n                return true;\n            });\n            const selectionColumnClass = classNames(`${prefixCls}-selection-column`, {\n                [`${prefixCls}-selection-column-custom`]: rowSelection.selections,\n            });\n            const selectionColumn = {\n                key: 'selection-column',\n                render: this.renderSelectionBox(rowSelection.type),\n                className: selectionColumnClass,\n                fixed: rowSelection.fixed,\n                width: rowSelection.columnWidth,\n                title: rowSelection.columnTitle,\n                [INTERNAL_COL_DEFINE]: {\n                    className: `${prefixCls}-selection-col`,\n                },\n            };\n            if (rowSelection.type !== 'radio') {\n                const checkboxAllDisabled = data.every((item, index) => this.getCheckboxPropsByItem(item, index).disabled);\n                selectionColumn.title = selectionColumn.title || (<SelectionCheckboxAll store={this.props.store} locale={locale} data={data} getCheckboxPropsByItem={this.getCheckboxPropsByItem} getRecordKey={this.getRecordKey} disabled={checkboxAllDisabled} prefixCls={prefixCls} onSelect={this.handleSelectRow} selections={rowSelection.selections} hideDefaultSelections={rowSelection.hideDefaultSelections} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)}/>);\n            }\n            if ('fixed' in rowSelection) {\n                selectionColumn.fixed = rowSelection.fixed;\n            }\n            else if (columns.some(column => column.fixed === 'left' || column.fixed === true)) {\n                selectionColumn.fixed = 'left';\n            }\n            if (columns[0] && columns[0].key === 'selection-column') {\n                columns[0] = selectionColumn;\n            }\n            else {\n                columns.unshift(selectionColumn);\n            }\n        }\n        return columns;\n    }\n    renderColumnsDropdown({ prefixCls, dropdownPrefixCls, columns, locale, getPopupContainer, }) {\n        const { sortOrder, filters } = this.state;\n        return treeMap(columns, (column, i) => {\n            const key = getColumnKey(column, i);\n            let filterDropdown;\n            let sortButton;\n            let onHeaderCell = column.onHeaderCell;\n            const isSortColumn = this.isSortColumn(column);\n            if ((column.filters && column.filters.length > 0) || column.filterDropdown) {\n                const colFilters = key in filters ? filters[key] : [];\n                filterDropdown = (<FilterDropdown locale={locale} column={column} selectedKeys={colFilters} confirmFilter={this.handleFilter} prefixCls={`${prefixCls}-filter`} dropdownPrefixCls={dropdownPrefixCls || 'ant-dropdown'} getPopupContainer={this.generatePopupContainerFunc(getPopupContainer)} key=\"filter-dropdown\"/>);\n            }\n            if (column.sorter) {\n                const sortDirections = column.sortDirections || this.props.sortDirections;\n                const isAscend = isSortColumn && sortOrder === 'ascend';\n                const isDescend = isSortColumn && sortOrder === 'descend';\n                const ascend = sortDirections.indexOf('ascend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-up ${isAscend ? 'on' : 'off'}`} type=\"caret-up\" theme=\"filled\"/>);\n                const descend = sortDirections.indexOf('descend') !== -1 && (<Icon className={`${prefixCls}-column-sorter-down ${isDescend ? 'on' : 'off'}`} type=\"caret-down\" theme=\"filled\"/>);\n                sortButton = (<div title={locale.sortTitle} className={classNames(`${prefixCls}-column-sorter-inner`, ascend && descend && `${prefixCls}-column-sorter-inner-full`)} key=\"sorter\">\n            {ascend}\n            {descend}\n          </div>);\n                onHeaderCell = (col) => {\n                    let colProps = {};\n                    // Get original first\n                    if (column.onHeaderCell) {\n                        colProps = Object.assign({}, column.onHeaderCell(col));\n                    }\n                    // Add sorter logic\n                    const onHeaderCellClick = colProps.onClick;\n                    colProps.onClick = (...args) => {\n                        this.toggleSortOrder(column);\n                        if (onHeaderCellClick) {\n                            onHeaderCellClick(...args);\n                        }\n                    };\n                    return colProps;\n                };\n            }\n            return Object.assign(Object.assign({}, column), { className: classNames(column.className, {\n                    [`${prefixCls}-column-has-actions`]: sortButton || filterDropdown,\n                    [`${prefixCls}-column-has-filters`]: filterDropdown,\n                    [`${prefixCls}-column-has-sorters`]: sortButton,\n                    [`${prefixCls}-column-sort`]: isSortColumn && sortOrder,\n                }), title: [\n                    <span key=\"title\" className={`${prefixCls}-header-column`}>\n            <div className={sortButton ? `${prefixCls}-column-sorters` : undefined}>\n              <span className={`${prefixCls}-column-title`}>\n                {this.renderColumnTitle(column.title)}\n              </span>\n              <span className={`${prefixCls}-column-sorter`}>{sortButton}</span>\n            </div>\n          </span>,\n                    filterDropdown,\n                ], onHeaderCell });\n        });\n    }\n    renderColumnTitle(title) {\n        const { filters, sortOrder, sortColumn } = this.state;\n        // https://github.com/ant-design/ant-design/issues/11246#issuecomment-405009167\n        if (title instanceof Function) {\n            return title({\n                filters,\n                sortOrder,\n                sortColumn,\n            });\n        }\n        return title;\n    }\n    render() {\n        return <ConfigConsumer>{this.renderComponent}</ConfigConsumer>;\n    }\n}\nTable.propTypes = {\n    dataSource: PropTypes.array,\n    columns: PropTypes.array,\n    prefixCls: PropTypes.string,\n    useFixedHeader: PropTypes.bool,\n    rowSelection: PropTypes.object,\n    className: PropTypes.string,\n    size: PropTypes.string,\n    loading: PropTypes.oneOfType([PropTypes.bool, PropTypes.object]),\n    bordered: PropTypes.bool,\n    onChange: PropTypes.func,\n    locale: PropTypes.object,\n    dropdownPrefixCls: PropTypes.string,\n    sortDirections: PropTypes.array,\n    getPopupContainer: PropTypes.func,\n};\nTable.defaultProps = {\n    dataSource: [],\n    useFixedHeader: false,\n    className: '',\n    size: 'default',\n    loading: false,\n    bordered: false,\n    indentSize: 20,\n    locale: {},\n    rowKey: 'key',\n    showHeader: true,\n    sortDirections: ['ascend', 'descend'],\n    childrenColumnName: 'children',\n};\npolyfill(Table);\nclass StoreTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.setCheckboxPropsCache = (cache) => (this.CheckboxPropsCache = cache);\n        this.CheckboxPropsCache = {};\n        this.store = createStore({\n            selectedRowKeys: getRowSelection(props).selectedRowKeys || [],\n            selectionDirty: false,\n        });\n    }\n    render() {\n        return (<Table {...this.props} store={this.store} checkboxPropsCache={this.CheckboxPropsCache} setCheckboxPropsCache={this.setCheckboxPropsCache}/>);\n    }\n}\nStoreTable.displayName = 'withStore(Table)';\nStoreTable.Column = Column;\nStoreTable.ColumnGroup = ColumnGroup;\nexport default StoreTable;\n"]},"metadata":{},"sourceType":"module"}