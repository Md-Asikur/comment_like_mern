{"ast":null,"code":"import React, { useMemo, useContext } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport classNames from 'classnames';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport warning from '../_util/warning';\nimport useStyle from './style/index';\nimport Spin from '../spin';\nimport Button from '../button';\nimport theme from '../theme';\nconst {\n  useToken\n} = theme;\n\nconst QRCode = props => {\n  const {\n    value,\n    icon = '',\n    size = 160,\n    iconSize = 40,\n    color = '#000',\n    errorLevel = 'M',\n    status = 'active',\n    bordered = true,\n    onRefresh,\n    style,\n    className,\n    prefixCls: customizePrefixCls\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const {\n    token\n  } = useToken();\n  const qrCodeProps = useMemo(() => {\n    const imageSettings = {\n      src: icon,\n      x: undefined,\n      y: undefined,\n      height: iconSize,\n      width: iconSize,\n      excavate: true\n    };\n    return {\n      value,\n      size: size - (token.paddingSM + token.lineWidth) * 2,\n      level: errorLevel,\n      bgColor: 'transparent',\n      fgColor: color,\n      imageSettings: icon ? imageSettings : undefined\n    };\n  }, [errorLevel, color, icon, iconSize, size, value]);\n\n  if (!value) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'QRCode', 'need to receive `value` props') : void 0;\n    }\n\n    return null;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n\n  const cls = classNames(prefixCls, className, hashId, {\n    [`${prefixCls}-borderless`]: !bordered\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"QRCode\"\n  }, locale => /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-mask`\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale.expired), typeof onRefresh === 'function' && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale.refresh))), /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps)))));\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\n\nexport default QRCode;","map":{"version":3,"names":["React","useMemo","useContext","QRCodeCanvas","classNames","ReloadOutlined","ConfigContext","LocaleReceiver","warning","useStyle","Spin","Button","theme","useToken","QRCode","props","value","icon","size","iconSize","color","errorLevel","status","bordered","onRefresh","style","className","prefixCls","customizePrefixCls","getPrefixCls","wrapSSR","hashId","token","qrCodeProps","imageSettings","src","x","undefined","y","height","width","excavate","paddingSM","lineWidth","level","bgColor","fgColor","process","env","NODE_ENV","cls","createElement","componentName","locale","Object","assign","Fragment","expired","type","onClick","refresh","displayName"],"sources":["C:/Users/scs/OneDrive/Desktop/react-youtube-clone-master/client/node_modules/antd/es/qrcode/index.js"],"sourcesContent":["import React, { useMemo, useContext } from 'react';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport classNames from 'classnames';\nimport { ReloadOutlined } from '@ant-design/icons';\nimport { ConfigContext } from '../config-provider';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport warning from '../_util/warning';\nimport useStyle from './style/index';\nimport Spin from '../spin';\nimport Button from '../button';\nimport theme from '../theme';\nconst {\n  useToken\n} = theme;\nconst QRCode = props => {\n  const {\n    value,\n    icon = '',\n    size = 160,\n    iconSize = 40,\n    color = '#000',\n    errorLevel = 'M',\n    status = 'active',\n    bordered = true,\n    onRefresh,\n    style,\n    className,\n    prefixCls: customizePrefixCls\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const {\n    token\n  } = useToken();\n  const qrCodeProps = useMemo(() => {\n    const imageSettings = {\n      src: icon,\n      x: undefined,\n      y: undefined,\n      height: iconSize,\n      width: iconSize,\n      excavate: true\n    };\n    return {\n      value,\n      size: size - (token.paddingSM + token.lineWidth) * 2,\n      level: errorLevel,\n      bgColor: 'transparent',\n      fgColor: color,\n      imageSettings: icon ? imageSettings : undefined\n    };\n  }, [errorLevel, color, icon, iconSize, size, value]);\n  if (!value) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'QRCode', 'need to receive `value` props') : void 0;\n    }\n    return null;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n  const cls = classNames(prefixCls, className, hashId, {\n    [`${prefixCls}-borderless`]: !bordered\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"QRCode\"\n  }, locale => /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-mask`\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale.expired), typeof onRefresh === 'function' && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale.refresh))), /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps)))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\nexport default QRCode;"],"mappings":"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"},"metadata":{},"sourceType":"module"}