{"ast":null,"code":"// This file is autogenerated. It's used to publish CJS to npm.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.tinycolor = factory());\n})(this, function () {\n  'use strict'; // https://github.com/bgrins/TinyColor\n  // Brian Grinstead, MIT License\n\n  var trimLeft = /^\\s+/;\n  var trimRight = /\\s+$/;\n\n  function tinycolor(color, opts) {\n    color = color ? color : \"\";\n    opts = opts || {}; // If input is already a tinycolor, return itself\n\n    if (color instanceof tinycolor) {\n      return color;\n    } // If we are called as a function, call using new instead\n\n\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    this._originalInput = color, this._r = rgb.r, this._g = rgb.g, this._b = rgb.b, this._a = rgb.a, this._roundA = Math.round(100 * this._a) / 100, this._format = opts.format || rgb.format;\n    this._gradientType = opts.gradientType; // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n\n    if (this._r < 1) this._r = Math.round(this._r);\n    if (this._g < 1) this._g = Math.round(this._g);\n    if (this._b < 1) this._b = Math.round(this._b);\n    this._ok = rgb.ok;\n  }\n\n  tinycolor.prototype = {\n    isDark: function isDark() {\n      return this.getBrightness() < 128;\n    },\n    isLight: function isLight() {\n      return !this.isDark();\n    },\n    isValid: function isValid() {\n      return this._ok;\n    },\n    getOriginalInput: function getOriginalInput() {\n      return this._originalInput;\n    },\n    getFormat: function getFormat() {\n      return this._format;\n    },\n    getAlpha: function getAlpha() {\n      return this._a;\n    },\n    getBrightness: function getBrightness() {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function getLuminance() {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n      if (RsRGB <= 0.03928) R = RsRGB / 12.92;else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      if (GsRGB <= 0.03928) G = GsRGB / 12.92;else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      if (BsRGB <= 0.03928) B = BsRGB / 12.92;else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function setAlpha(value) {\n      this._a = boundAlpha(value);\n      this._roundA = Math.round(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function toHsv() {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return {\n        h: hsv.h * 360,\n        s: hsv.s,\n        v: hsv.v,\n        a: this._a\n      };\n    },\n    toHsvString: function toHsvString() {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = Math.round(hsv.h * 360),\n          s = Math.round(hsv.s * 100),\n          v = Math.round(hsv.v * 100);\n      return this._a == 1 ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\" : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n    },\n    toHsl: function toHsl() {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return {\n        h: hsl.h * 360,\n        s: hsl.s,\n        l: hsl.l,\n        a: this._a\n      };\n    },\n    toHslString: function toHslString() {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = Math.round(hsl.h * 360),\n          s = Math.round(hsl.s * 100),\n          l = Math.round(hsl.l * 100);\n      return this._a == 1 ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\" : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n    },\n    toHex: function toHex(allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function toHexString(allow3Char) {\n      return \"#\" + this.toHex(allow3Char);\n    },\n    toHex8: function toHex8(allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function toHex8String(allow4Char) {\n      return \"#\" + this.toHex8(allow4Char);\n    },\n    toRgb: function toRgb() {\n      return {\n        r: Math.round(this._r),\n        g: Math.round(this._g),\n        b: Math.round(this._b),\n        a: this._a\n      };\n    },\n    toRgbString: function toRgbString() {\n      return this._a == 1 ? \"rgb(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \")\" : \"rgba(\" + Math.round(this._r) + \", \" + Math.round(this._g) + \", \" + Math.round(this._b) + \", \" + this._roundA + \")\";\n    },\n    toPercentageRgb: function toPercentageRgb() {\n      return {\n        r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n        g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n        b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n        a: this._a\n      };\n    },\n    toPercentageRgbString: function toPercentageRgbString() {\n      return this._a == 1 ? \"rgb(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%)\" : \"rgba(\" + Math.round(bound01(this._r, 255) * 100) + \"%, \" + Math.round(bound01(this._g, 255) * 100) + \"%, \" + Math.round(bound01(this._b, 255) * 100) + \"%, \" + this._roundA + \")\";\n    },\n    toName: function toName() {\n      if (this._a === 0) {\n        return \"transparent\";\n      }\n\n      if (this._a < 1) {\n        return false;\n      }\n\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function toFilter(secondColor) {\n      var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n\n      return \"progid:DXImageTransform.Microsoft.gradient(\" + gradientType + \"startColorstr=\" + hex8String + \",endColorstr=\" + secondHex8String + \")\";\n    },\n    toString: function toString(format) {\n      var formatSet = !!format;\n      format = format || this._format;\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat = !formatSet && hasAlpha && (format === \"hex\" || format === \"hex6\" || format === \"hex3\" || format === \"hex4\" || format === \"hex8\" || format === \"name\");\n\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === \"name\" && this._a === 0) {\n          return this.toName();\n        }\n\n        return this.toRgbString();\n      }\n\n      if (format === \"rgb\") {\n        formattedString = this.toRgbString();\n      }\n\n      if (format === \"prgb\") {\n        formattedString = this.toPercentageRgbString();\n      }\n\n      if (format === \"hex\" || format === \"hex6\") {\n        formattedString = this.toHexString();\n      }\n\n      if (format === \"hex3\") {\n        formattedString = this.toHexString(true);\n      }\n\n      if (format === \"hex4\") {\n        formattedString = this.toHex8String(true);\n      }\n\n      if (format === \"hex8\") {\n        formattedString = this.toHex8String();\n      }\n\n      if (format === \"name\") {\n        formattedString = this.toName();\n      }\n\n      if (format === \"hsl\") {\n        formattedString = this.toHslString();\n      }\n\n      if (format === \"hsv\") {\n        formattedString = this.toHsvString();\n      }\n\n      return formattedString || this.toHexString();\n    },\n    clone: function clone() {\n      return tinycolor(this.toString());\n    },\n    _applyModification: function _applyModification(fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function lighten() {\n      return this._applyModification(_lighten, arguments);\n    },\n    brighten: function brighten() {\n      return this._applyModification(_brighten, arguments);\n    },\n    darken: function darken() {\n      return this._applyModification(_darken, arguments);\n    },\n    desaturate: function desaturate() {\n      return this._applyModification(_desaturate, arguments);\n    },\n    saturate: function saturate() {\n      return this._applyModification(_saturate, arguments);\n    },\n    greyscale: function greyscale() {\n      return this._applyModification(_greyscale, arguments);\n    },\n    spin: function spin() {\n      return this._applyModification(_spin, arguments);\n    },\n    _applyCombination: function _applyCombination(fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function analogous() {\n      return this._applyCombination(_analogous, arguments);\n    },\n    complement: function complement() {\n      return this._applyCombination(_complement, arguments);\n    },\n    monochromatic: function monochromatic() {\n      return this._applyCombination(_monochromatic, arguments);\n    },\n    splitcomplement: function splitcomplement() {\n      return this._applyCombination(_splitcomplement, arguments);\n    },\n    // Disabled until https://github.com/bgrins/TinyColor/issues/254\n    // polyad: function (number) {\n    //   return this._applyCombination(polyad, [number]);\n    // },\n    triad: function triad() {\n      return this._applyCombination(polyad, [3]);\n    },\n    tetrad: function tetrad() {\n      return this._applyCombination(polyad, [4]);\n    }\n  }; // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n\n  tinycolor.fromRatio = function (color, opts) {\n    if (typeof color == \"object\") {\n      var newColor = {};\n\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === \"a\") {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n\n      color = newColor;\n    }\n\n    return tinycolor(color, opts);\n  }; // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n\n\n  function inputToRGB(color) {\n    var rgb = {\n      r: 0,\n      g: 0,\n      b: 0\n    };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n      color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n      if (isValidCSSUnit(color.r) && isValidCSSUnit(color.g) && isValidCSSUnit(color.b)) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.v)) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = \"hsv\";\n      } else if (isValidCSSUnit(color.h) && isValidCSSUnit(color.s) && isValidCSSUnit(color.l)) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = \"hsl\";\n      }\n\n      if (color.hasOwnProperty(\"a\")) {\n        a = color.a;\n      }\n    }\n\n    a = boundAlpha(a);\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: Math.min(255, Math.max(rgb.r, 0)),\n      g: Math.min(255, Math.max(rgb.g, 0)),\n      b: Math.min(255, Math.max(rgb.b, 0)),\n      a: a\n    };\n  } // Conversion Functions\n  // --------------------\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n\n\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255\n    };\n  } // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n\n\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n    var h,\n        s,\n        l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return {\n      h: h,\n      s: s,\n      l: l\n    };\n  } // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n\n\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  } // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n\n\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n    var max = Math.max(r, g, b),\n        min = Math.min(r, g, b);\n    var h,\n        s,\n        v = max;\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n\n        case g:\n          h = (b - r) / d + 2;\n          break;\n\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return {\n      h: h,\n      s: s,\n      v: v\n    };\n  } // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n\n\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n    var i = Math.floor(h),\n        f = h - i,\n        p = v * (1 - s),\n        q = v * (1 - f * s),\n        t = v * (1 - (1 - f) * s),\n        mod = i % 6,\n        r = [v, q, p, p, t, v][mod],\n        g = [t, v, v, q, p, p][mod],\n        b = [p, p, t, v, v, q][mod];\n    return {\n      r: r * 255,\n      g: g * 255,\n      b: b * 255\n    };\n  } // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n\n\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))]; // Return a 3 character hex if possible\n\n    if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n  } // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n\n\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16)), pad2(convertDecimalToHex(a))]; // Return a 4 character hex if possible\n\n    if (allow4Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1) && hex[3].charAt(0) == hex[3].charAt(1)) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0);\n    }\n\n    return hex.join(\"\");\n  } // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n\n\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [pad2(convertDecimalToHex(a)), pad2(Math.round(r).toString(16)), pad2(Math.round(g).toString(16)), pad2(Math.round(b).toString(16))];\n    return hex.join(\"\");\n  } // `equals`\n  // Can be called with any tinycolor input\n\n\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) return false;\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: Math.random(),\n      g: Math.random(),\n      b: Math.random()\n    });\n  }; // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n\n  function _desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function _saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function _greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n\n  function _lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  function _brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n\n  function _darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  } // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n\n\n  function _spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  } // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n\n  function _complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n\n  function polyad(color, number) {\n    if (isNaN(number) || number <= 0) {\n      throw new Error(\"Argument to polyad must be a positive number\");\n    }\n\n    var hsl = tinycolor(color).toHsl();\n    var result = [tinycolor(color)];\n    var step = 360 / number;\n\n    for (var i = 1; i < number; i++) {\n      result.push(tinycolor({\n        h: (hsl.h + i * step) % 360,\n        s: hsl.s,\n        l: hsl.l\n      }));\n    }\n\n    return result;\n  }\n\n  function _splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [tinycolor(color), tinycolor({\n      h: (h + 72) % 360,\n      s: hsl.s,\n      l: hsl.l\n    }), tinycolor({\n      h: (h + 216) % 360,\n      s: hsl.s,\n      l: hsl.l\n    })];\n  }\n\n  function _analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = (hsl.h - (part * results >> 1) + 720) % 360; --results;) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n\n    return ret;\n  }\n\n  function _monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n        s = hsv.s,\n        v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n      ret.push(tinycolor({\n        h: h,\n        s: s,\n        v: v\n      }));\n      v = (v + modification) % 1;\n    }\n\n    return ret;\n  } // Utility Functions\n  // ---------------------\n\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n    var p = amount / 100;\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a\n    };\n    return tinycolor(rgba);\n  }; // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n\n\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\n  }; // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n\n\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n    out = false;\n    wcag2Parms = validateWCAG2Parms(wcag2);\n\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case \"AAsmall\":\n      case \"AAAlarge\":\n        out = readability >= 4.5;\n        break;\n\n      case \"AAlarge\":\n        out = readability >= 3;\n        break;\n\n      case \"AAAsmall\":\n        out = readability >= 7;\n        break;\n    }\n\n    return out;\n  }; // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n\n\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n\n    if (tinycolor.isReadable(baseColor, bestColor, {\n      level: level,\n      size: size\n    }) || !includeFallbackColors) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n    }\n  }; // Big List of Colors\n  // ------------------\n  // <https://www.w3.org/TR/css-color-4/#named-colors>\n\n\n  var names = tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\"\n  }; // Make it easy to access colors via `hexNames[hex]`\n\n  var hexNames = tinycolor.hexNames = flip(names); // Utilities\n  // ---------\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n\n  function flip(o) {\n    var flipped = {};\n\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n\n    return flipped;\n  } // Return a valid alpha value [0,1] with all invalid values being set to 1\n\n\n  function boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n\n    return a;\n  } // Take input from [0, n] and return it as [0, 1]\n\n\n  function bound01(n, max) {\n    if (isOnePointZero(n)) n = \"100%\";\n    var processPercent = isPercentage(n);\n    n = Math.min(max, Math.max(0, parseFloat(n))); // Automatically convert percentage into number\n\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    } // Handle floating point rounding errors\n\n\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    } // Convert into [0, 1] range if it isn't already\n\n\n    return n % max / parseFloat(max);\n  } // Force a number between 0 and 1\n\n\n  function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n  } // Parse a base-16 hex value into a base-10 integer\n\n\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  } // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n\n\n  function isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n  } // Check to see if string passed in is a percentage\n\n\n  function isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n  } // Force a hex value to have 2 characters\n\n\n  function pad2(c) {\n    return c.length == 1 ? \"0\" + c : \"\" + c;\n  } // Replace a decimal with it's percentage value\n\n\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + \"%\";\n    }\n\n    return n;\n  } // Converts a decimal to a hex value\n\n\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  } // Converts a hex value to a decimal\n\n\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n\n  var matchers = function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\"; // <http://www.w3.org/TR/css3-values/#number-value>\n\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\"; // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\"; // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n\n    var PERMISSIVE_MATCH3 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 = \"[\\\\s|\\\\(]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")[,|\\\\s]+(\" + CSS_UNIT + \")\\\\s*\\\\)?\";\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n      rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n      hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n      hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n      hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n      hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\n    };\n  }(); // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n\n\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  } // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n\n\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n    var named = false;\n\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == \"transparent\") {\n      return {\n        r: 0,\n        g: 0,\n        b: 0,\n        a: 0,\n        format: \"name\"\n      };\n    } // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n\n\n    var match;\n\n    if (match = matchers.rgb.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3]\n      };\n    }\n\n    if (match = matchers.rgba.exec(color)) {\n      return {\n        r: match[1],\n        g: match[2],\n        b: match[3],\n        a: match[4]\n      };\n    }\n\n    if (match = matchers.hsl.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3]\n      };\n    }\n\n    if (match = matchers.hsla.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        l: match[3],\n        a: match[4]\n      };\n    }\n\n    if (match = matchers.hsv.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3]\n      };\n    }\n\n    if (match = matchers.hsva.exec(color)) {\n      return {\n        h: match[1],\n        s: match[2],\n        v: match[3],\n        a: match[4]\n      };\n    }\n\n    if (match = matchers.hex8.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n\n    if (match = matchers.hex6.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n\n    if (match = matchers.hex4.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        a: convertHexToDecimal(match[4] + \"\" + match[4]),\n        format: named ? \"name\" : \"hex8\"\n      };\n    }\n\n    if (match = matchers.hex3.exec(color)) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        format: named ? \"name\" : \"hex\"\n      };\n    }\n\n    return false;\n  }\n\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || {\n      level: \"AA\",\n      size: \"small\"\n    };\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n\n    if (level !== \"AA\" && level !== \"AAA\") {\n      level = \"AA\";\n    }\n\n    if (size !== \"small\" && size !== \"large\") {\n      size = \"small\";\n    }\n\n    return {\n      level: level,\n      size: size\n    };\n  }\n\n  return tinycolor;\n});","map":{"version":3,"names":["global","factory","exports","module","define","amd","globalThis","self","tinycolor","trimLeft","trimRight","color","opts","rgb","inputToRGB","_originalInput","_r","r","_g","g","_b","b","_a","a","_roundA","Math","round","_format","format","_gradientType","gradientType","_ok","ok","prototype","isDark","getBrightness","isLight","isValid","getOriginalInput","getFormat","getAlpha","toRgb","getLuminance","RsRGB","GsRGB","BsRGB","R","G","B","pow","setAlpha","value","boundAlpha","toHsv","hsv","rgbToHsv","h","s","v","toHsvString","toHsl","hsl","rgbToHsl","l","toHslString","toHex","allow3Char","rgbToHex","toHexString","toHex8","allow4Char","rgbaToHex","toHex8String","toRgbString","toPercentageRgb","bound01","toPercentageRgbString","toName","hexNames","toFilter","secondColor","hex8String","rgbaToArgbHex","secondHex8String","toString","formatSet","formattedString","hasAlpha","needsAlphaFormat","clone","_applyModification","fn","args","apply","concat","slice","call","lighten","arguments","brighten","darken","desaturate","saturate","greyscale","spin","_applyCombination","analogous","complement","monochromatic","splitcomplement","triad","polyad","tetrad","fromRatio","newColor","i","hasOwnProperty","convertToPercentage","stringInputToObject","isValidCSSUnit","rgbToRgb","String","substr","hsvToRgb","hslToRgb","min","max","d","hue2rgb","p","q","t","floor","f","mod","hex","pad2","charAt","join","convertDecimalToHex","equals","color1","color2","random","amount","clamp01","hue","number","isNaN","Error","result","step","push","results","slices","part","ret","modification","mix","rgb1","rgb2","rgba","readability","c1","c2","isReadable","wcag2","wcag2Parms","out","validateWCAG2Parms","level","size","mostReadable","baseColor","colorList","bestColor","bestScore","includeFallbackColors","length","names","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","flip","o","flipped","parseFloat","n","isOnePointZero","processPercent","isPercentage","parseInt","abs","val","parseIntFromHex","indexOf","c","convertHexToDecimal","matchers","CSS_INTEGER","CSS_NUMBER","CSS_UNIT","PERMISSIVE_MATCH3","PERMISSIVE_MATCH4","RegExp","hsla","hsva","hex3","hex6","hex4","hex8","exec","replace","toLowerCase","named","match","parms","toUpperCase"],"sources":["C:/Users/scs/OneDrive/Desktop/Youtube Deploy/client/node_modules/tinycolor2/cjs/tinycolor.js"],"sourcesContent":["// This file is autogenerated. It's used to publish CJS to npm.\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.tinycolor = factory());\n})(this, (function () { 'use strict';\n\n  // https://github.com/bgrins/TinyColor\n  // Brian Grinstead, MIT License\n\n  const trimLeft = /^\\s+/;\n  const trimRight = /\\s+$/;\n\n  function tinycolor(color, opts) {\n    color = color ? color : \"\";\n    opts = opts || {};\n\n    // If input is already a tinycolor, return itself\n    if (color instanceof tinycolor) {\n      return color;\n    }\n    // If we are called as a function, call using new instead\n    if (!(this instanceof tinycolor)) {\n      return new tinycolor(color, opts);\n    }\n\n    var rgb = inputToRGB(color);\n    (this._originalInput = color),\n      (this._r = rgb.r),\n      (this._g = rgb.g),\n      (this._b = rgb.b),\n      (this._a = rgb.a),\n      (this._roundA = Math.round(100 * this._a) / 100),\n      (this._format = opts.format || rgb.format);\n    this._gradientType = opts.gradientType;\n\n    // Don't let the range of [0,255] come back in [0,1].\n    // Potentially lose a little bit of precision here, but will fix issues where\n    // .5 gets interpreted as half of the total, instead of half of 1\n    // If it was supposed to be 128, this was already taken care of by `inputToRgb`\n    if (this._r < 1) this._r = Math.round(this._r);\n    if (this._g < 1) this._g = Math.round(this._g);\n    if (this._b < 1) this._b = Math.round(this._b);\n\n    this._ok = rgb.ok;\n  }\n\n  tinycolor.prototype = {\n    isDark: function () {\n      return this.getBrightness() < 128;\n    },\n    isLight: function () {\n      return !this.isDark();\n    },\n    isValid: function () {\n      return this._ok;\n    },\n    getOriginalInput: function () {\n      return this._originalInput;\n    },\n    getFormat: function () {\n      return this._format;\n    },\n    getAlpha: function () {\n      return this._a;\n    },\n    getBrightness: function () {\n      //http://www.w3.org/TR/AERT#color-contrast\n      var rgb = this.toRgb();\n      return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\n    },\n    getLuminance: function () {\n      //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n      var rgb = this.toRgb();\n      var RsRGB, GsRGB, BsRGB, R, G, B;\n      RsRGB = rgb.r / 255;\n      GsRGB = rgb.g / 255;\n      BsRGB = rgb.b / 255;\n\n      if (RsRGB <= 0.03928) R = RsRGB / 12.92;\n      else R = Math.pow((RsRGB + 0.055) / 1.055, 2.4);\n      if (GsRGB <= 0.03928) G = GsRGB / 12.92;\n      else G = Math.pow((GsRGB + 0.055) / 1.055, 2.4);\n      if (BsRGB <= 0.03928) B = BsRGB / 12.92;\n      else B = Math.pow((BsRGB + 0.055) / 1.055, 2.4);\n      return 0.2126 * R + 0.7152 * G + 0.0722 * B;\n    },\n    setAlpha: function (value) {\n      this._a = boundAlpha(value);\n      this._roundA = Math.round(100 * this._a) / 100;\n      return this;\n    },\n    toHsv: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      return { h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a };\n    },\n    toHsvString: function () {\n      var hsv = rgbToHsv(this._r, this._g, this._b);\n      var h = Math.round(hsv.h * 360),\n        s = Math.round(hsv.s * 100),\n        v = Math.round(hsv.v * 100);\n      return this._a == 1\n        ? \"hsv(\" + h + \", \" + s + \"%, \" + v + \"%)\"\n        : \"hsva(\" + h + \", \" + s + \"%, \" + v + \"%, \" + this._roundA + \")\";\n    },\n    toHsl: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      return { h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a };\n    },\n    toHslString: function () {\n      var hsl = rgbToHsl(this._r, this._g, this._b);\n      var h = Math.round(hsl.h * 360),\n        s = Math.round(hsl.s * 100),\n        l = Math.round(hsl.l * 100);\n      return this._a == 1\n        ? \"hsl(\" + h + \", \" + s + \"%, \" + l + \"%)\"\n        : \"hsla(\" + h + \", \" + s + \"%, \" + l + \"%, \" + this._roundA + \")\";\n    },\n    toHex: function (allow3Char) {\n      return rgbToHex(this._r, this._g, this._b, allow3Char);\n    },\n    toHexString: function (allow3Char) {\n      return \"#\" + this.toHex(allow3Char);\n    },\n    toHex8: function (allow4Char) {\n      return rgbaToHex(this._r, this._g, this._b, this._a, allow4Char);\n    },\n    toHex8String: function (allow4Char) {\n      return \"#\" + this.toHex8(allow4Char);\n    },\n    toRgb: function () {\n      return {\n        r: Math.round(this._r),\n        g: Math.round(this._g),\n        b: Math.round(this._b),\n        a: this._a,\n      };\n    },\n    toRgbString: function () {\n      return this._a == 1\n        ? \"rgb(\" +\n            Math.round(this._r) +\n            \", \" +\n            Math.round(this._g) +\n            \", \" +\n            Math.round(this._b) +\n            \")\"\n        : \"rgba(\" +\n            Math.round(this._r) +\n            \", \" +\n            Math.round(this._g) +\n            \", \" +\n            Math.round(this._b) +\n            \", \" +\n            this._roundA +\n            \")\";\n    },\n    toPercentageRgb: function () {\n      return {\n        r: Math.round(bound01(this._r, 255) * 100) + \"%\",\n        g: Math.round(bound01(this._g, 255) * 100) + \"%\",\n        b: Math.round(bound01(this._b, 255) * 100) + \"%\",\n        a: this._a,\n      };\n    },\n    toPercentageRgbString: function () {\n      return this._a == 1\n        ? \"rgb(\" +\n            Math.round(bound01(this._r, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._g, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._b, 255) * 100) +\n            \"%)\"\n        : \"rgba(\" +\n            Math.round(bound01(this._r, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._g, 255) * 100) +\n            \"%, \" +\n            Math.round(bound01(this._b, 255) * 100) +\n            \"%, \" +\n            this._roundA +\n            \")\";\n    },\n    toName: function () {\n      if (this._a === 0) {\n        return \"transparent\";\n      }\n\n      if (this._a < 1) {\n        return false;\n      }\n\n      return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\n    },\n    toFilter: function (secondColor) {\n      var hex8String = \"#\" + rgbaToArgbHex(this._r, this._g, this._b, this._a);\n      var secondHex8String = hex8String;\n      var gradientType = this._gradientType ? \"GradientType = 1, \" : \"\";\n\n      if (secondColor) {\n        var s = tinycolor(secondColor);\n        secondHex8String = \"#\" + rgbaToArgbHex(s._r, s._g, s._b, s._a);\n      }\n\n      return (\n        \"progid:DXImageTransform.Microsoft.gradient(\" +\n        gradientType +\n        \"startColorstr=\" +\n        hex8String +\n        \",endColorstr=\" +\n        secondHex8String +\n        \")\"\n      );\n    },\n    toString: function (format) {\n      var formatSet = !!format;\n      format = format || this._format;\n\n      var formattedString = false;\n      var hasAlpha = this._a < 1 && this._a >= 0;\n      var needsAlphaFormat =\n        !formatSet &&\n        hasAlpha &&\n        (format === \"hex\" ||\n          format === \"hex6\" ||\n          format === \"hex3\" ||\n          format === \"hex4\" ||\n          format === \"hex8\" ||\n          format === \"name\");\n\n      if (needsAlphaFormat) {\n        // Special case for \"transparent\", all other non-alpha formats\n        // will return rgba when there is transparency.\n        if (format === \"name\" && this._a === 0) {\n          return this.toName();\n        }\n        return this.toRgbString();\n      }\n      if (format === \"rgb\") {\n        formattedString = this.toRgbString();\n      }\n      if (format === \"prgb\") {\n        formattedString = this.toPercentageRgbString();\n      }\n      if (format === \"hex\" || format === \"hex6\") {\n        formattedString = this.toHexString();\n      }\n      if (format === \"hex3\") {\n        formattedString = this.toHexString(true);\n      }\n      if (format === \"hex4\") {\n        formattedString = this.toHex8String(true);\n      }\n      if (format === \"hex8\") {\n        formattedString = this.toHex8String();\n      }\n      if (format === \"name\") {\n        formattedString = this.toName();\n      }\n      if (format === \"hsl\") {\n        formattedString = this.toHslString();\n      }\n      if (format === \"hsv\") {\n        formattedString = this.toHsvString();\n      }\n\n      return formattedString || this.toHexString();\n    },\n    clone: function () {\n      return tinycolor(this.toString());\n    },\n\n    _applyModification: function (fn, args) {\n      var color = fn.apply(null, [this].concat([].slice.call(args)));\n      this._r = color._r;\n      this._g = color._g;\n      this._b = color._b;\n      this.setAlpha(color._a);\n      return this;\n    },\n    lighten: function () {\n      return this._applyModification(lighten, arguments);\n    },\n    brighten: function () {\n      return this._applyModification(brighten, arguments);\n    },\n    darken: function () {\n      return this._applyModification(darken, arguments);\n    },\n    desaturate: function () {\n      return this._applyModification(desaturate, arguments);\n    },\n    saturate: function () {\n      return this._applyModification(saturate, arguments);\n    },\n    greyscale: function () {\n      return this._applyModification(greyscale, arguments);\n    },\n    spin: function () {\n      return this._applyModification(spin, arguments);\n    },\n\n    _applyCombination: function (fn, args) {\n      return fn.apply(null, [this].concat([].slice.call(args)));\n    },\n    analogous: function () {\n      return this._applyCombination(analogous, arguments);\n    },\n    complement: function () {\n      return this._applyCombination(complement, arguments);\n    },\n    monochromatic: function () {\n      return this._applyCombination(monochromatic, arguments);\n    },\n    splitcomplement: function () {\n      return this._applyCombination(splitcomplement, arguments);\n    },\n    // Disabled until https://github.com/bgrins/TinyColor/issues/254\n    // polyad: function (number) {\n    //   return this._applyCombination(polyad, [number]);\n    // },\n    triad: function () {\n      return this._applyCombination(polyad, [3]);\n    },\n    tetrad: function () {\n      return this._applyCombination(polyad, [4]);\n    },\n  };\n\n  // If input is an object, force 1 into \"1.0\" to handle ratios properly\n  // String input requires \"1.0\" as input, so 1 will be treated as 1\n  tinycolor.fromRatio = function (color, opts) {\n    if (typeof color == \"object\") {\n      var newColor = {};\n      for (var i in color) {\n        if (color.hasOwnProperty(i)) {\n          if (i === \"a\") {\n            newColor[i] = color[i];\n          } else {\n            newColor[i] = convertToPercentage(color[i]);\n          }\n        }\n      }\n      color = newColor;\n    }\n\n    return tinycolor(color, opts);\n  };\n\n  // Given a string or object, convert that input to RGB\n  // Possible string inputs:\n  //\n  //     \"red\"\n  //     \"#f00\" or \"f00\"\n  //     \"#ff0000\" or \"ff0000\"\n  //     \"#ff000000\" or \"ff000000\"\n  //     \"rgb 255 0 0\" or \"rgb (255, 0, 0)\"\n  //     \"rgb 1.0 0 0\" or \"rgb (1, 0, 0)\"\n  //     \"rgba (255, 0, 0, 1)\" or \"rgba 255, 0, 0, 1\"\n  //     \"rgba (1.0, 0, 0, 1)\" or \"rgba 1.0, 0, 0, 1\"\n  //     \"hsl(0, 100%, 50%)\" or \"hsl 0 100% 50%\"\n  //     \"hsla(0, 100%, 50%, 1)\" or \"hsla 0 100% 50%, 1\"\n  //     \"hsv(0, 100%, 100%)\" or \"hsv 0 100% 100%\"\n  //\n  function inputToRGB(color) {\n    var rgb = { r: 0, g: 0, b: 0 };\n    var a = 1;\n    var s = null;\n    var v = null;\n    var l = null;\n    var ok = false;\n    var format = false;\n\n    if (typeof color == \"string\") {\n      color = stringInputToObject(color);\n    }\n\n    if (typeof color == \"object\") {\n      if (\n        isValidCSSUnit(color.r) &&\n        isValidCSSUnit(color.g) &&\n        isValidCSSUnit(color.b)\n      ) {\n        rgb = rgbToRgb(color.r, color.g, color.b);\n        ok = true;\n        format = String(color.r).substr(-1) === \"%\" ? \"prgb\" : \"rgb\";\n      } else if (\n        isValidCSSUnit(color.h) &&\n        isValidCSSUnit(color.s) &&\n        isValidCSSUnit(color.v)\n      ) {\n        s = convertToPercentage(color.s);\n        v = convertToPercentage(color.v);\n        rgb = hsvToRgb(color.h, s, v);\n        ok = true;\n        format = \"hsv\";\n      } else if (\n        isValidCSSUnit(color.h) &&\n        isValidCSSUnit(color.s) &&\n        isValidCSSUnit(color.l)\n      ) {\n        s = convertToPercentage(color.s);\n        l = convertToPercentage(color.l);\n        rgb = hslToRgb(color.h, s, l);\n        ok = true;\n        format = \"hsl\";\n      }\n\n      if (color.hasOwnProperty(\"a\")) {\n        a = color.a;\n      }\n    }\n\n    a = boundAlpha(a);\n\n    return {\n      ok: ok,\n      format: color.format || format,\n      r: Math.min(255, Math.max(rgb.r, 0)),\n      g: Math.min(255, Math.max(rgb.g, 0)),\n      b: Math.min(255, Math.max(rgb.b, 0)),\n      a: a,\n    };\n  }\n\n  // Conversion Functions\n  // --------------------\n\n  // `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\n  // <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\n\n  // `rgbToRgb`\n  // Handle bounds / percentage checking to conform to CSS color spec\n  // <http://www.w3.org/TR/css3-color/>\n  // *Assumes:* r, g, b in [0, 255] or [0, 1]\n  // *Returns:* { r, g, b } in [0, 255]\n  function rgbToRgb(r, g, b) {\n    return {\n      r: bound01(r, 255) * 255,\n      g: bound01(g, 255) * 255,\n      b: bound01(b, 255) * 255,\n    };\n  }\n\n  // `rgbToHsl`\n  // Converts an RGB color value to HSL.\n  // *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\n  // *Returns:* { h, s, l } in [0,1]\n  function rgbToHsl(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      l = (max + min) / 2;\n\n    if (max == min) {\n      h = s = 0; // achromatic\n    } else {\n      var d = max - min;\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n\n      h /= 6;\n    }\n\n    return { h: h, s: s, l: l };\n  }\n\n  // `hslToRgb`\n  // Converts an HSL color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hslToRgb(h, s, l) {\n    var r, g, b;\n\n    h = bound01(h, 360);\n    s = bound01(s, 100);\n    l = bound01(l, 100);\n\n    function hue2rgb(p, q, t) {\n      if (t < 0) t += 1;\n      if (t > 1) t -= 1;\n      if (t < 1 / 6) return p + (q - p) * 6 * t;\n      if (t < 1 / 2) return q;\n      if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\n      return p;\n    }\n\n    if (s === 0) {\n      r = g = b = l; // achromatic\n    } else {\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      var p = 2 * l - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n  }\n\n  // `rgbToHsv`\n  // Converts an RGB color value to HSV\n  // *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\n  // *Returns:* { h, s, v } in [0,1]\n  function rgbToHsv(r, g, b) {\n    r = bound01(r, 255);\n    g = bound01(g, 255);\n    b = bound01(b, 255);\n\n    var max = Math.max(r, g, b),\n      min = Math.min(r, g, b);\n    var h,\n      s,\n      v = max;\n\n    var d = max - min;\n    s = max === 0 ? 0 : d / max;\n\n    if (max == min) {\n      h = 0; // achromatic\n    } else {\n      switch (max) {\n        case r:\n          h = (g - b) / d + (g < b ? 6 : 0);\n          break;\n        case g:\n          h = (b - r) / d + 2;\n          break;\n        case b:\n          h = (r - g) / d + 4;\n          break;\n      }\n      h /= 6;\n    }\n    return { h: h, s: s, v: v };\n  }\n\n  // `hsvToRgb`\n  // Converts an HSV color value to RGB.\n  // *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\n  // *Returns:* { r, g, b } in the set [0, 255]\n  function hsvToRgb(h, s, v) {\n    h = bound01(h, 360) * 6;\n    s = bound01(s, 100);\n    v = bound01(v, 100);\n\n    var i = Math.floor(h),\n      f = h - i,\n      p = v * (1 - s),\n      q = v * (1 - f * s),\n      t = v * (1 - (1 - f) * s),\n      mod = i % 6,\n      r = [v, q, p, p, t, v][mod],\n      g = [t, v, v, q, p, p][mod],\n      b = [p, p, t, v, v, q][mod];\n\n    return { r: r * 255, g: g * 255, b: b * 255 };\n  }\n\n  // `rgbToHex`\n  // Converts an RGB color to hex\n  // Assumes r, g, and b are contained in the set [0, 255]\n  // Returns a 3 or 6 character hex\n  function rgbToHex(r, g, b, allow3Char) {\n    var hex = [\n      pad2(Math.round(r).toString(16)),\n      pad2(Math.round(g).toString(16)),\n      pad2(Math.round(b).toString(16)),\n    ];\n\n    // Return a 3 character hex if possible\n    if (\n      allow3Char &&\n      hex[0].charAt(0) == hex[0].charAt(1) &&\n      hex[1].charAt(0) == hex[1].charAt(1) &&\n      hex[2].charAt(0) == hex[2].charAt(1)\n    ) {\n      return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\n    }\n\n    return hex.join(\"\");\n  }\n\n  // `rgbaToHex`\n  // Converts an RGBA color plus alpha transparency to hex\n  // Assumes r, g, b are contained in the set [0, 255] and\n  // a in [0, 1]. Returns a 4 or 8 character rgba hex\n  function rgbaToHex(r, g, b, a, allow4Char) {\n    var hex = [\n      pad2(Math.round(r).toString(16)),\n      pad2(Math.round(g).toString(16)),\n      pad2(Math.round(b).toString(16)),\n      pad2(convertDecimalToHex(a)),\n    ];\n\n    // Return a 4 character hex if possible\n    if (\n      allow4Char &&\n      hex[0].charAt(0) == hex[0].charAt(1) &&\n      hex[1].charAt(0) == hex[1].charAt(1) &&\n      hex[2].charAt(0) == hex[2].charAt(1) &&\n      hex[3].charAt(0) == hex[3].charAt(1)\n    ) {\n      return (\n        hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0) + hex[3].charAt(0)\n      );\n    }\n\n    return hex.join(\"\");\n  }\n\n  // `rgbaToArgbHex`\n  // Converts an RGBA color to an ARGB Hex8 string\n  // Rarely used, but required for \"toFilter()\"\n  function rgbaToArgbHex(r, g, b, a) {\n    var hex = [\n      pad2(convertDecimalToHex(a)),\n      pad2(Math.round(r).toString(16)),\n      pad2(Math.round(g).toString(16)),\n      pad2(Math.round(b).toString(16)),\n    ];\n\n    return hex.join(\"\");\n  }\n\n  // `equals`\n  // Can be called with any tinycolor input\n  tinycolor.equals = function (color1, color2) {\n    if (!color1 || !color2) return false;\n    return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\n  };\n\n  tinycolor.random = function () {\n    return tinycolor.fromRatio({\n      r: Math.random(),\n      g: Math.random(),\n      b: Math.random(),\n    });\n  };\n\n  // Modification Functions\n  // ----------------------\n  // Thanks to less.js for some of the basics here\n  // <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\n\n  function desaturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s -= amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function saturate(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.s += amount / 100;\n    hsl.s = clamp01(hsl.s);\n    return tinycolor(hsl);\n  }\n\n  function greyscale(color) {\n    return tinycolor(color).desaturate(100);\n  }\n\n  function lighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l += amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  function brighten(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var rgb = tinycolor(color).toRgb();\n    rgb.r = Math.max(0, Math.min(255, rgb.r - Math.round(255 * -(amount / 100))));\n    rgb.g = Math.max(0, Math.min(255, rgb.g - Math.round(255 * -(amount / 100))));\n    rgb.b = Math.max(0, Math.min(255, rgb.b - Math.round(255 * -(amount / 100))));\n    return tinycolor(rgb);\n  }\n\n  function darken(color, amount) {\n    amount = amount === 0 ? 0 : amount || 10;\n    var hsl = tinycolor(color).toHsl();\n    hsl.l -= amount / 100;\n    hsl.l = clamp01(hsl.l);\n    return tinycolor(hsl);\n  }\n\n  // Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\n  // Values outside of this range will be wrapped into this range.\n  function spin(color, amount) {\n    var hsl = tinycolor(color).toHsl();\n    var hue = (hsl.h + amount) % 360;\n    hsl.h = hue < 0 ? 360 + hue : hue;\n    return tinycolor(hsl);\n  }\n\n  // Combination Functions\n  // ---------------------\n  // Thanks to jQuery xColor for some of the ideas behind these\n  // <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\n\n  function complement(color) {\n    var hsl = tinycolor(color).toHsl();\n    hsl.h = (hsl.h + 180) % 360;\n    return tinycolor(hsl);\n  }\n\n  function polyad(color, number) {\n    if (isNaN(number) || number <= 0) {\n      throw new Error(\"Argument to polyad must be a positive number\");\n    }\n    var hsl = tinycolor(color).toHsl();\n    var result = [tinycolor(color)];\n    var step = 360 / number;\n    for (var i = 1; i < number; i++) {\n      result.push(tinycolor({ h: (hsl.h + i * step) % 360, s: hsl.s, l: hsl.l }));\n    }\n\n    return result;\n  }\n\n  function splitcomplement(color) {\n    var hsl = tinycolor(color).toHsl();\n    var h = hsl.h;\n    return [\n      tinycolor(color),\n      tinycolor({ h: (h + 72) % 360, s: hsl.s, l: hsl.l }),\n      tinycolor({ h: (h + 216) % 360, s: hsl.s, l: hsl.l }),\n    ];\n  }\n\n  function analogous(color, results, slices) {\n    results = results || 6;\n    slices = slices || 30;\n\n    var hsl = tinycolor(color).toHsl();\n    var part = 360 / slices;\n    var ret = [tinycolor(color)];\n\n    for (hsl.h = (hsl.h - ((part * results) >> 1) + 720) % 360; --results; ) {\n      hsl.h = (hsl.h + part) % 360;\n      ret.push(tinycolor(hsl));\n    }\n    return ret;\n  }\n\n  function monochromatic(color, results) {\n    results = results || 6;\n    var hsv = tinycolor(color).toHsv();\n    var h = hsv.h,\n      s = hsv.s,\n      v = hsv.v;\n    var ret = [];\n    var modification = 1 / results;\n\n    while (results--) {\n      ret.push(tinycolor({ h: h, s: s, v: v }));\n      v = (v + modification) % 1;\n    }\n\n    return ret;\n  }\n\n  // Utility Functions\n  // ---------------------\n\n  tinycolor.mix = function (color1, color2, amount) {\n    amount = amount === 0 ? 0 : amount || 50;\n\n    var rgb1 = tinycolor(color1).toRgb();\n    var rgb2 = tinycolor(color2).toRgb();\n\n    var p = amount / 100;\n\n    var rgba = {\n      r: (rgb2.r - rgb1.r) * p + rgb1.r,\n      g: (rgb2.g - rgb1.g) * p + rgb1.g,\n      b: (rgb2.b - rgb1.b) * p + rgb1.b,\n      a: (rgb2.a - rgb1.a) * p + rgb1.a,\n    };\n\n    return tinycolor(rgba);\n  };\n\n  // Readability Functions\n  // ---------------------\n  // <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\n\n  // `contrast`\n  // Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\n  tinycolor.readability = function (color1, color2) {\n    var c1 = tinycolor(color1);\n    var c2 = tinycolor(color2);\n    return (\n      (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) /\n      (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05)\n    );\n  };\n\n  // `isReadable`\n  // Ensure that foreground and background color combinations meet WCAG2 guidelines.\n  // The third argument is an optional Object.\n  //      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\n  //      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\n  // If the entire object is absent, isReadable defaults to {level:\"AA\",size:\"small\"}.\n\n  // *Example*\n  //    tinycolor.isReadable(\"#000\", \"#111\") => false\n  //    tinycolor.isReadable(\"#000\", \"#111\",{level:\"AA\",size:\"large\"}) => false\n  tinycolor.isReadable = function (color1, color2, wcag2) {\n    var readability = tinycolor.readability(color1, color2);\n    var wcag2Parms, out;\n\n    out = false;\n\n    wcag2Parms = validateWCAG2Parms(wcag2);\n    switch (wcag2Parms.level + wcag2Parms.size) {\n      case \"AAsmall\":\n      case \"AAAlarge\":\n        out = readability >= 4.5;\n        break;\n      case \"AAlarge\":\n        out = readability >= 3;\n        break;\n      case \"AAAsmall\":\n        out = readability >= 7;\n        break;\n    }\n    return out;\n  };\n\n  // `mostReadable`\n  // Given a base color and a list of possible foreground or background\n  // colors for that base, returns the most readable color.\n  // Optionally returns Black or White if the most readable color is unreadable.\n  // *Example*\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:false}).toHexString(); // \"#112255\"\n  //    tinycolor.mostReadable(tinycolor.mostReadable(\"#123\", [\"#124\", \"#125\"],{includeFallbackColors:true}).toHexString();  // \"#ffffff\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"large\"}).toHexString(); // \"#faf3f3\"\n  //    tinycolor.mostReadable(\"#a8015a\", [\"#faf3f3\"],{includeFallbackColors:true,level:\"AAA\",size:\"small\"}).toHexString(); // \"#ffffff\"\n  tinycolor.mostReadable = function (baseColor, colorList, args) {\n    var bestColor = null;\n    var bestScore = 0;\n    var readability;\n    var includeFallbackColors, level, size;\n    args = args || {};\n    includeFallbackColors = args.includeFallbackColors;\n    level = args.level;\n    size = args.size;\n\n    for (var i = 0; i < colorList.length; i++) {\n      readability = tinycolor.readability(baseColor, colorList[i]);\n      if (readability > bestScore) {\n        bestScore = readability;\n        bestColor = tinycolor(colorList[i]);\n      }\n    }\n\n    if (\n      tinycolor.isReadable(baseColor, bestColor, {\n        level: level,\n        size: size,\n      }) ||\n      !includeFallbackColors\n    ) {\n      return bestColor;\n    } else {\n      args.includeFallbackColors = false;\n      return tinycolor.mostReadable(baseColor, [\"#fff\", \"#000\"], args);\n    }\n  };\n\n  // Big List of Colors\n  // ------------------\n  // <https://www.w3.org/TR/css-color-4/#named-colors>\n  var names = (tinycolor.names = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"0ff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"00f\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    burntsienna: \"ea7e5d\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"0ff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkgrey: \"a9a9a9\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkslategrey: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dimgrey: \"696969\",\n    dodgerblue: \"1e90ff\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"f0f\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    grey: \"808080\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgray: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightgrey: \"d3d3d3\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslategray: \"789\",\n    lightslategrey: \"789\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"0f0\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"f0f\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370db\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"db7093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    rebeccapurple: \"663399\",\n    red: \"f00\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    slategrey: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    wheat: \"f5deb3\",\n    white: \"fff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ff0\",\n    yellowgreen: \"9acd32\",\n  });\n\n  // Make it easy to access colors via `hexNames[hex]`\n  var hexNames = (tinycolor.hexNames = flip(names));\n\n  // Utilities\n  // ---------\n\n  // `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\n  function flip(o) {\n    var flipped = {};\n    for (var i in o) {\n      if (o.hasOwnProperty(i)) {\n        flipped[o[i]] = i;\n      }\n    }\n    return flipped;\n  }\n\n  // Return a valid alpha value [0,1] with all invalid values being set to 1\n  function boundAlpha(a) {\n    a = parseFloat(a);\n\n    if (isNaN(a) || a < 0 || a > 1) {\n      a = 1;\n    }\n\n    return a;\n  }\n\n  // Take input from [0, n] and return it as [0, 1]\n  function bound01(n, max) {\n    if (isOnePointZero(n)) n = \"100%\";\n\n    var processPercent = isPercentage(n);\n    n = Math.min(max, Math.max(0, parseFloat(n)));\n\n    // Automatically convert percentage into number\n    if (processPercent) {\n      n = parseInt(n * max, 10) / 100;\n    }\n\n    // Handle floating point rounding errors\n    if (Math.abs(n - max) < 0.000001) {\n      return 1;\n    }\n\n    // Convert into [0, 1] range if it isn't already\n    return (n % max) / parseFloat(max);\n  }\n\n  // Force a number between 0 and 1\n  function clamp01(val) {\n    return Math.min(1, Math.max(0, val));\n  }\n\n  // Parse a base-16 hex value into a base-10 integer\n  function parseIntFromHex(val) {\n    return parseInt(val, 16);\n  }\n\n  // Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\n  // <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\n  function isOnePointZero(n) {\n    return typeof n == \"string\" && n.indexOf(\".\") != -1 && parseFloat(n) === 1;\n  }\n\n  // Check to see if string passed in is a percentage\n  function isPercentage(n) {\n    return typeof n === \"string\" && n.indexOf(\"%\") != -1;\n  }\n\n  // Force a hex value to have 2 characters\n  function pad2(c) {\n    return c.length == 1 ? \"0\" + c : \"\" + c;\n  }\n\n  // Replace a decimal with it's percentage value\n  function convertToPercentage(n) {\n    if (n <= 1) {\n      n = n * 100 + \"%\";\n    }\n\n    return n;\n  }\n\n  // Converts a decimal to a hex value\n  function convertDecimalToHex(d) {\n    return Math.round(parseFloat(d) * 255).toString(16);\n  }\n  // Converts a hex value to a decimal\n  function convertHexToDecimal(h) {\n    return parseIntFromHex(h) / 255;\n  }\n\n  var matchers = (function () {\n    // <http://www.w3.org/TR/css3-values/#integers>\n    var CSS_INTEGER = \"[-\\\\+]?\\\\d+%?\";\n\n    // <http://www.w3.org/TR/css3-values/#number-value>\n    var CSS_NUMBER = \"[-\\\\+]?\\\\d*\\\\.\\\\d+%?\";\n\n    // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\n    var CSS_UNIT = \"(?:\" + CSS_NUMBER + \")|(?:\" + CSS_INTEGER + \")\";\n\n    // Actual matching.\n    // Parentheses and commas are optional, but not required.\n    // Whitespace can take the place of commas or opening paren\n    var PERMISSIVE_MATCH3 =\n      \"[\\\\s|\\\\(]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")\\\\s*\\\\)?\";\n    var PERMISSIVE_MATCH4 =\n      \"[\\\\s|\\\\(]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")[,|\\\\s]+(\" +\n      CSS_UNIT +\n      \")\\\\s*\\\\)?\";\n\n    return {\n      CSS_UNIT: new RegExp(CSS_UNIT),\n      rgb: new RegExp(\"rgb\" + PERMISSIVE_MATCH3),\n      rgba: new RegExp(\"rgba\" + PERMISSIVE_MATCH4),\n      hsl: new RegExp(\"hsl\" + PERMISSIVE_MATCH3),\n      hsla: new RegExp(\"hsla\" + PERMISSIVE_MATCH4),\n      hsv: new RegExp(\"hsv\" + PERMISSIVE_MATCH3),\n      hsva: new RegExp(\"hsva\" + PERMISSIVE_MATCH4),\n      hex3: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n      hex4: /^#?([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex8: /^#?([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\n    };\n  })();\n\n  // `isValidCSSUnit`\n  // Take in a single string / number and check to see if it looks like a CSS unit\n  // (see `matchers` above for definition).\n  function isValidCSSUnit(color) {\n    return !!matchers.CSS_UNIT.exec(color);\n  }\n\n  // `stringInputToObject`\n  // Permissive string parsing.  Take in a number of formats, and output an object\n  // based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\n  function stringInputToObject(color) {\n    color = color.replace(trimLeft, \"\").replace(trimRight, \"\").toLowerCase();\n    var named = false;\n    if (names[color]) {\n      color = names[color];\n      named = true;\n    } else if (color == \"transparent\") {\n      return { r: 0, g: 0, b: 0, a: 0, format: \"name\" };\n    }\n\n    // Try to match string input using regular expressions.\n    // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\n    // Just return an object and let the conversion functions handle that.\n    // This way the result will be the same whether the tinycolor is initialized with string or object.\n    var match;\n    if ((match = matchers.rgb.exec(color))) {\n      return { r: match[1], g: match[2], b: match[3] };\n    }\n    if ((match = matchers.rgba.exec(color))) {\n      return { r: match[1], g: match[2], b: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsl.exec(color))) {\n      return { h: match[1], s: match[2], l: match[3] };\n    }\n    if ((match = matchers.hsla.exec(color))) {\n      return { h: match[1], s: match[2], l: match[3], a: match[4] };\n    }\n    if ((match = matchers.hsv.exec(color))) {\n      return { h: match[1], s: match[2], v: match[3] };\n    }\n    if ((match = matchers.hsva.exec(color))) {\n      return { h: match[1], s: match[2], v: match[3], a: match[4] };\n    }\n    if ((match = matchers.hex8.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        a: convertHexToDecimal(match[4]),\n        format: named ? \"name\" : \"hex8\",\n      };\n    }\n    if ((match = matchers.hex6.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1]),\n        g: parseIntFromHex(match[2]),\n        b: parseIntFromHex(match[3]),\n        format: named ? \"name\" : \"hex\",\n      };\n    }\n    if ((match = matchers.hex4.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        a: convertHexToDecimal(match[4] + \"\" + match[4]),\n        format: named ? \"name\" : \"hex8\",\n      };\n    }\n    if ((match = matchers.hex3.exec(color))) {\n      return {\n        r: parseIntFromHex(match[1] + \"\" + match[1]),\n        g: parseIntFromHex(match[2] + \"\" + match[2]),\n        b: parseIntFromHex(match[3] + \"\" + match[3]),\n        format: named ? \"name\" : \"hex\",\n      };\n    }\n\n    return false;\n  }\n\n  function validateWCAG2Parms(parms) {\n    // return valid WCAG2 parms for isReadable.\n    // If input parms are invalid, return {\"level\":\"AA\", \"size\":\"small\"}\n    var level, size;\n    parms = parms || { level: \"AA\", size: \"small\" };\n    level = (parms.level || \"AA\").toUpperCase();\n    size = (parms.size || \"small\").toLowerCase();\n    if (level !== \"AA\" && level !== \"AAA\") {\n      level = \"AA\";\n    }\n    if (size !== \"small\" && size !== \"large\") {\n      size = \"small\";\n    }\n    return { level: level, size: size };\n  }\n\n  return tinycolor;\n\n}));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}