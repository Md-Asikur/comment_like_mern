{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupKeysMap, groupDisabledKeysMap } from '../_util/transKeys';\nimport warning from '../_util/warning';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\n\nconst TransferFC = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    children\n  } = props;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(className, hashId),\n    style: style\n  }, children));\n};\n\nconst Transfer = props => {\n  const {\n    dataSource = [],\n    targetKeys = [],\n    selectedKeys = [],\n    selectAllLabels = [],\n    operations = [],\n    style = {},\n    listStyle = {},\n    locale = {},\n    titles,\n    className,\n    disabled,\n    showSearch = false,\n    operationStyle,\n    showSelectAll,\n    oneWay,\n    pagination,\n    status: customStatus,\n    prefixCls: customizePrefixCls,\n    filterOption,\n    render,\n    footer,\n    children,\n    rowKey,\n    onScroll,\n    onChange,\n    onSearch,\n    onSelectChange\n  } = props;\n  const [sourceSelectedKeys, setSourceSelectedKeys] = useState(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n  const [targetSelectedKeys, setTargetSelectedKeys] = useState(() => selectedKeys.filter(key => targetKeys.includes(key)));\n  useEffect(() => {\n    if (props.selectedKeys) {\n      setSourceSelectedKeys(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n      setTargetSelectedKeys(() => selectedKeys.filter(key => targetKeys.includes(key)));\n    }\n  }, [props.selectedKeys, props.targetKeys]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'Transfer', '`pagination` not support customize render list.') : void 0;\n  }\n\n  const setStateKeys = useCallback((direction, keys) => {\n    if (direction === 'left') {\n      setSourceSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    } else {\n      setTargetSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const handleSelectChange = useCallback((direction, holder) => {\n    if (direction === 'left') {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(holder, targetSelectedKeys);\n    } else {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(sourceSelectedKeys, holder);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n\n  const getTitles = transferLocale => {\n    var _a;\n\n    return (_a = titles !== null && titles !== void 0 ? titles : transferLocale.titles) !== null && _a !== void 0 ? _a : [];\n  };\n\n  const handleLeftScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('left', e);\n  };\n\n  const handleRightScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('right', e);\n  };\n\n  const moveTo = direction => {\n    const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n    const dataSourceDisabledKeysMap = groupDisabledKeysMap(dataSource); // filter the disabled options\n\n    const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n    const newMoveKeysMap = groupKeysMap(newMoveKeys); // move items to target box\n\n    const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey)); // empty checked keys\n\n    const oppositeDirection = direction === 'right' ? 'left' : 'right';\n    setStateKeys(oppositeDirection, []);\n    handleSelectChange(oppositeDirection, []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n  };\n\n  const moveToLeft = () => {\n    moveTo('left');\n  };\n\n  const moveToRight = () => {\n    moveTo('right');\n  };\n\n  const onItemSelectAll = (direction, keys, checkAll) => {\n    setStateKeys(direction, prevKeys => {\n      let mergedCheckedKeys = [];\n\n      if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(keys))));\n      } else {\n        const selectedKeysMap = groupKeysMap(keys); // Remove current keys from origin keys\n\n        mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n      }\n\n      handleSelectChange(direction, mergedCheckedKeys);\n      return mergedCheckedKeys;\n    });\n  };\n\n  const onLeftItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('left', keys, checkAll);\n  };\n\n  const onRightItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('right', keys, checkAll);\n  };\n\n  const leftFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', e.target.value);\n\n  const rightFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', e.target.value);\n\n  const handleLeftClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', '');\n\n  const handleRightClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', '');\n\n  const onItemSelect = (direction, selectedKey, checked) => {\n    const holder = _toConsumableArray(direction === 'left' ? sourceSelectedKeys : targetSelectedKeys);\n\n    const index = holder.indexOf(selectedKey);\n\n    if (index > -1) {\n      holder.splice(index, 1);\n    }\n\n    if (checked) {\n      holder.push(selectedKey);\n    }\n\n    handleSelectChange(direction, holder);\n\n    if (!props.selectedKeys) {\n      setStateKeys(direction, holder);\n    }\n  };\n\n  const onLeftItemSelect = (selectedKey, checked) => {\n    onItemSelect('left', selectedKey, checked);\n  };\n\n  const onRightItemSelect = (selectedKey, checked) => {\n    onItemSelect('right', selectedKey, checked);\n  };\n\n  const onRightItemRemove = keys => {\n    setStateKeys('right', []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !keys.includes(key)), 'left', _toConsumableArray(keys));\n  };\n\n  const handleListStyle = direction => {\n    if (typeof listStyle === 'function') {\n      return listStyle({\n        direction\n      });\n    }\n\n    return listStyle || {};\n  };\n\n  const [leftDataSource, rightDataSource] = useMemo(() => {\n    const leftData = [];\n    const rightData = new Array(targetKeys.length);\n    const targetKeysMap = groupKeysMap(targetKeys);\n    dataSource.forEach(record => {\n      if (rowKey) {\n        record = Object.assign(Object.assign({}, record), {\n          key: rowKey(record)\n        });\n      } // rightData should be ordered by targetKeys\n      // leftData should be ordered by dataSource\n\n\n      if (targetKeysMap.has(record.key)) {\n        rightData[targetKeysMap.get(record.key)] = record;\n      } else {\n        leftData.push(record);\n      }\n    });\n    return [leftData, rightData];\n  }, [dataSource, targetKeys, rowKey]);\n  const configContext = useContext(ConfigContext);\n  const formItemContext = useContext(FormItemInputContext);\n  const {\n    getPrefixCls,\n    renderEmpty,\n    direction\n  } = configContext;\n  const {\n    hasFeedback,\n    status\n  } = formItemContext;\n\n  const getLocale = transferLocale => Object.assign(Object.assign(Object.assign({}, transferLocale), {\n    notFoundContent: (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Transfer')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Transfer\"\n    })\n  }), locale);\n\n  const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n  const mergedStatus = getMergedStatus(status, customStatus);\n  const mergedPagination = !children && pagination;\n  const leftActive = targetSelectedKeys.length > 0;\n  const rightActive = sourceSelectedKeys.length > 0;\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-disabled`]: disabled,\n    [`${prefixCls}-customize-list`]: !!children,\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), className);\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Transfer\",\n    defaultLocale: defaultLocale.Transfer\n  }, contextLocale => {\n    const listLocale = getLocale(contextLocale);\n    const [leftTitle, rightTitle] = getTitles(listLocale);\n    return /*#__PURE__*/React.createElement(TransferFC, {\n      prefixCls: prefixCls,\n      className: cls,\n      style: style\n    }, /*#__PURE__*/React.createElement(List, Object.assign({\n      prefixCls: `${prefixCls}-list`,\n      titleText: leftTitle,\n      dataSource: leftDataSource,\n      filterOption: filterOption,\n      style: handleListStyle('left'),\n      checkedKeys: sourceSelectedKeys,\n      handleFilter: leftFilter,\n      handleClear: handleLeftClear,\n      onItemSelect: onLeftItemSelect,\n      onItemSelectAll: onLeftItemSelectAll,\n      render: render,\n      showSearch: showSearch,\n      renderList: children,\n      footer: footer,\n      onScroll: handleLeftScroll,\n      disabled: disabled,\n      direction: direction === 'rtl' ? 'right' : 'left',\n      showSelectAll: showSelectAll,\n      selectAllLabel: selectAllLabels[0],\n      pagination: mergedPagination\n    }, listLocale)), /*#__PURE__*/React.createElement(Operation, {\n      className: `${prefixCls}-operation`,\n      rightActive: rightActive,\n      rightArrowText: operations[0],\n      moveToRight: moveToRight,\n      leftActive: leftActive,\n      leftArrowText: operations[1],\n      moveToLeft: moveToLeft,\n      style: operationStyle,\n      disabled: disabled,\n      direction: direction,\n      oneWay: oneWay\n    }), /*#__PURE__*/React.createElement(List, Object.assign({\n      prefixCls: `${prefixCls}-list`,\n      titleText: rightTitle,\n      dataSource: rightDataSource,\n      filterOption: filterOption,\n      style: handleListStyle('right'),\n      checkedKeys: targetSelectedKeys,\n      handleFilter: rightFilter,\n      handleClear: handleRightClear,\n      onItemSelect: onRightItemSelect,\n      onItemSelectAll: onRightItemSelectAll,\n      onItemRemove: onRightItemRemove,\n      render: render,\n      showSearch: showSearch,\n      renderList: children,\n      footer: footer,\n      onScroll: handleRightScroll,\n      disabled: disabled,\n      direction: direction === 'rtl' ? 'left' : 'right',\n      showSelectAll: showSelectAll,\n      selectAllLabel: selectAllLabels[1],\n      showRemove: oneWay,\n      pagination: mergedPagination\n    }, listLocale)));\n  });\n};\n\nif (process.env.NODE_ENV !== 'production') {\n  Transfer.displayName = 'Transfer';\n}\n\nTransfer.List = List;\nTransfer.Search = Search;\nTransfer.Operation = Operation;\nexport default Transfer;","map":{"version":3,"names":["_toConsumableArray","classNames","React","useCallback","useContext","useEffect","useMemo","useState","ConfigContext","DefaultRenderEmpty","FormItemInputContext","LocaleReceiver","defaultLocale","getMergedStatus","getStatusClassNames","groupKeysMap","groupDisabledKeysMap","warning","List","Operation","Search","useStyle","TransferFC","props","prefixCls","className","style","children","wrapSSR","hashId","createElement","Transfer","dataSource","targetKeys","selectedKeys","selectAllLabels","operations","listStyle","locale","titles","disabled","showSearch","operationStyle","showSelectAll","oneWay","pagination","status","customStatus","customizePrefixCls","filterOption","render","footer","rowKey","onScroll","onChange","onSearch","onSelectChange","sourceSelectedKeys","setSourceSelectedKeys","filter","key","includes","targetSelectedKeys","setTargetSelectedKeys","process","env","NODE_ENV","setStateKeys","direction","keys","prev","handleSelectChange","holder","getTitles","transferLocale","_a","handleLeftScroll","e","handleRightScroll","moveTo","moveKeys","dataSourceDisabledKeysMap","newMoveKeys","has","newMoveKeysMap","newTargetKeys","concat","targetKey","oppositeDirection","moveToLeft","moveToRight","onItemSelectAll","checkAll","prevKeys","mergedCheckedKeys","Array","from","Set","selectedKeysMap","onLeftItemSelectAll","onRightItemSelectAll","leftFilter","target","value","rightFilter","handleLeftClear","handleRightClear","onItemSelect","selectedKey","checked","index","indexOf","splice","push","onLeftItemSelect","onRightItemSelect","onRightItemRemove","handleListStyle","leftDataSource","rightDataSource","leftData","rightData","length","targetKeysMap","forEach","record","Object","assign","get","configContext","formItemContext","getPrefixCls","renderEmpty","hasFeedback","getLocale","notFoundContent","componentName","mergedStatus","mergedPagination","leftActive","rightActive","cls","contextLocale","listLocale","leftTitle","rightTitle","titleText","checkedKeys","handleFilter","handleClear","renderList","selectAllLabel","rightArrowText","leftArrowText","onItemRemove","showRemove","displayName"],"sources":["C:/Users/scs/OneDrive/Desktop/react-youtube-clone-master/client/node_modules/antd/es/transfer/index.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport classNames from 'classnames';\nimport React, { useCallback, useContext, useEffect, useMemo, useState } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DefaultRenderEmpty from '../config-provider/defaultRenderEmpty';\nimport { FormItemInputContext } from '../form/context';\nimport LocaleReceiver from '../locale/LocaleReceiver';\nimport defaultLocale from '../locale/en_US';\nimport { getMergedStatus, getStatusClassNames } from '../_util/statusUtils';\nimport { groupKeysMap, groupDisabledKeysMap } from '../_util/transKeys';\nimport warning from '../_util/warning';\nimport List from './list';\nimport Operation from './operation';\nimport Search from './search';\nimport useStyle from './style';\nconst TransferFC = props => {\n  const {\n    prefixCls,\n    className,\n    style,\n    children\n  } = props;\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(className, hashId),\n    style: style\n  }, children));\n};\nconst Transfer = props => {\n  const {\n    dataSource = [],\n    targetKeys = [],\n    selectedKeys = [],\n    selectAllLabels = [],\n    operations = [],\n    style = {},\n    listStyle = {},\n    locale = {},\n    titles,\n    className,\n    disabled,\n    showSearch = false,\n    operationStyle,\n    showSelectAll,\n    oneWay,\n    pagination,\n    status: customStatus,\n    prefixCls: customizePrefixCls,\n    filterOption,\n    render,\n    footer,\n    children,\n    rowKey,\n    onScroll,\n    onChange,\n    onSearch,\n    onSelectChange\n  } = props;\n  const [sourceSelectedKeys, setSourceSelectedKeys] = useState(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n  const [targetSelectedKeys, setTargetSelectedKeys] = useState(() => selectedKeys.filter(key => targetKeys.includes(key)));\n  useEffect(() => {\n    if (props.selectedKeys) {\n      setSourceSelectedKeys(() => selectedKeys.filter(key => !targetKeys.includes(key)));\n      setTargetSelectedKeys(() => selectedKeys.filter(key => targetKeys.includes(key)));\n    }\n  }, [props.selectedKeys, props.targetKeys]);\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!pagination || !children, 'Transfer', '`pagination` not support customize render list.') : void 0;\n  }\n  const setStateKeys = useCallback((direction, keys) => {\n    if (direction === 'left') {\n      setSourceSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    } else {\n      setTargetSelectedKeys(prev => typeof keys === 'function' ? keys(prev || []) : keys);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const handleSelectChange = useCallback((direction, holder) => {\n    if (direction === 'left') {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(holder, targetSelectedKeys);\n    } else {\n      onSelectChange === null || onSelectChange === void 0 ? void 0 : onSelectChange(sourceSelectedKeys, holder);\n    }\n  }, [sourceSelectedKeys, targetSelectedKeys]);\n  const getTitles = transferLocale => {\n    var _a;\n    return (_a = titles !== null && titles !== void 0 ? titles : transferLocale.titles) !== null && _a !== void 0 ? _a : [];\n  };\n  const handleLeftScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('left', e);\n  };\n  const handleRightScroll = e => {\n    onScroll === null || onScroll === void 0 ? void 0 : onScroll('right', e);\n  };\n  const moveTo = direction => {\n    const moveKeys = direction === 'right' ? sourceSelectedKeys : targetSelectedKeys;\n    const dataSourceDisabledKeysMap = groupDisabledKeysMap(dataSource);\n    // filter the disabled options\n    const newMoveKeys = moveKeys.filter(key => !dataSourceDisabledKeysMap.has(key));\n    const newMoveKeysMap = groupKeysMap(newMoveKeys);\n    // move items to target box\n    const newTargetKeys = direction === 'right' ? newMoveKeys.concat(targetKeys) : targetKeys.filter(targetKey => !newMoveKeysMap.has(targetKey));\n    // empty checked keys\n    const oppositeDirection = direction === 'right' ? 'left' : 'right';\n    setStateKeys(oppositeDirection, []);\n    handleSelectChange(oppositeDirection, []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(newTargetKeys, direction, newMoveKeys);\n  };\n  const moveToLeft = () => {\n    moveTo('left');\n  };\n  const moveToRight = () => {\n    moveTo('right');\n  };\n  const onItemSelectAll = (direction, keys, checkAll) => {\n    setStateKeys(direction, prevKeys => {\n      let mergedCheckedKeys = [];\n      if (checkAll) {\n        // Merge current keys with origin key\n        mergedCheckedKeys = Array.from(new Set([].concat(_toConsumableArray(prevKeys), _toConsumableArray(keys))));\n      } else {\n        const selectedKeysMap = groupKeysMap(keys);\n        // Remove current keys from origin keys\n        mergedCheckedKeys = prevKeys.filter(key => !selectedKeysMap.has(key));\n      }\n      handleSelectChange(direction, mergedCheckedKeys);\n      return mergedCheckedKeys;\n    });\n  };\n  const onLeftItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('left', keys, checkAll);\n  };\n  const onRightItemSelectAll = (keys, checkAll) => {\n    onItemSelectAll('right', keys, checkAll);\n  };\n  const leftFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', e.target.value);\n  const rightFilter = e => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', e.target.value);\n  const handleLeftClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('left', '');\n  const handleRightClear = () => onSearch === null || onSearch === void 0 ? void 0 : onSearch('right', '');\n  const onItemSelect = (direction, selectedKey, checked) => {\n    const holder = _toConsumableArray(direction === 'left' ? sourceSelectedKeys : targetSelectedKeys);\n    const index = holder.indexOf(selectedKey);\n    if (index > -1) {\n      holder.splice(index, 1);\n    }\n    if (checked) {\n      holder.push(selectedKey);\n    }\n    handleSelectChange(direction, holder);\n    if (!props.selectedKeys) {\n      setStateKeys(direction, holder);\n    }\n  };\n  const onLeftItemSelect = (selectedKey, checked) => {\n    onItemSelect('left', selectedKey, checked);\n  };\n  const onRightItemSelect = (selectedKey, checked) => {\n    onItemSelect('right', selectedKey, checked);\n  };\n  const onRightItemRemove = keys => {\n    setStateKeys('right', []);\n    onChange === null || onChange === void 0 ? void 0 : onChange(targetKeys.filter(key => !keys.includes(key)), 'left', _toConsumableArray(keys));\n  };\n  const handleListStyle = direction => {\n    if (typeof listStyle === 'function') {\n      return listStyle({\n        direction\n      });\n    }\n    return listStyle || {};\n  };\n  const [leftDataSource, rightDataSource] = useMemo(() => {\n    const leftData = [];\n    const rightData = new Array(targetKeys.length);\n    const targetKeysMap = groupKeysMap(targetKeys);\n    dataSource.forEach(record => {\n      if (rowKey) {\n        record = Object.assign(Object.assign({}, record), {\n          key: rowKey(record)\n        });\n      }\n      // rightData should be ordered by targetKeys\n      // leftData should be ordered by dataSource\n      if (targetKeysMap.has(record.key)) {\n        rightData[targetKeysMap.get(record.key)] = record;\n      } else {\n        leftData.push(record);\n      }\n    });\n    return [leftData, rightData];\n  }, [dataSource, targetKeys, rowKey]);\n  const configContext = useContext(ConfigContext);\n  const formItemContext = useContext(FormItemInputContext);\n  const {\n    getPrefixCls,\n    renderEmpty,\n    direction\n  } = configContext;\n  const {\n    hasFeedback,\n    status\n  } = formItemContext;\n  const getLocale = transferLocale => Object.assign(Object.assign(Object.assign({}, transferLocale), {\n    notFoundContent: (renderEmpty === null || renderEmpty === void 0 ? void 0 : renderEmpty('Transfer')) || /*#__PURE__*/React.createElement(DefaultRenderEmpty, {\n      componentName: \"Transfer\"\n    })\n  }), locale);\n  const prefixCls = getPrefixCls('transfer', customizePrefixCls);\n  const mergedStatus = getMergedStatus(status, customStatus);\n  const mergedPagination = !children && pagination;\n  const leftActive = targetSelectedKeys.length > 0;\n  const rightActive = sourceSelectedKeys.length > 0;\n  const cls = classNames(prefixCls, {\n    [`${prefixCls}-disabled`]: disabled,\n    [`${prefixCls}-customize-list`]: !!children,\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, getStatusClassNames(prefixCls, mergedStatus, hasFeedback), className);\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Transfer\",\n    defaultLocale: defaultLocale.Transfer\n  }, contextLocale => {\n    const listLocale = getLocale(contextLocale);\n    const [leftTitle, rightTitle] = getTitles(listLocale);\n    return /*#__PURE__*/React.createElement(TransferFC, {\n      prefixCls: prefixCls,\n      className: cls,\n      style: style\n    }, /*#__PURE__*/React.createElement(List, Object.assign({\n      prefixCls: `${prefixCls}-list`,\n      titleText: leftTitle,\n      dataSource: leftDataSource,\n      filterOption: filterOption,\n      style: handleListStyle('left'),\n      checkedKeys: sourceSelectedKeys,\n      handleFilter: leftFilter,\n      handleClear: handleLeftClear,\n      onItemSelect: onLeftItemSelect,\n      onItemSelectAll: onLeftItemSelectAll,\n      render: render,\n      showSearch: showSearch,\n      renderList: children,\n      footer: footer,\n      onScroll: handleLeftScroll,\n      disabled: disabled,\n      direction: direction === 'rtl' ? 'right' : 'left',\n      showSelectAll: showSelectAll,\n      selectAllLabel: selectAllLabels[0],\n      pagination: mergedPagination\n    }, listLocale)), /*#__PURE__*/React.createElement(Operation, {\n      className: `${prefixCls}-operation`,\n      rightActive: rightActive,\n      rightArrowText: operations[0],\n      moveToRight: moveToRight,\n      leftActive: leftActive,\n      leftArrowText: operations[1],\n      moveToLeft: moveToLeft,\n      style: operationStyle,\n      disabled: disabled,\n      direction: direction,\n      oneWay: oneWay\n    }), /*#__PURE__*/React.createElement(List, Object.assign({\n      prefixCls: `${prefixCls}-list`,\n      titleText: rightTitle,\n      dataSource: rightDataSource,\n      filterOption: filterOption,\n      style: handleListStyle('right'),\n      checkedKeys: targetSelectedKeys,\n      handleFilter: rightFilter,\n      handleClear: handleRightClear,\n      onItemSelect: onRightItemSelect,\n      onItemSelectAll: onRightItemSelectAll,\n      onItemRemove: onRightItemRemove,\n      render: render,\n      showSearch: showSearch,\n      renderList: children,\n      footer: footer,\n      onScroll: handleRightScroll,\n      disabled: disabled,\n      direction: direction === 'rtl' ? 'left' : 'right',\n      showSelectAll: showSelectAll,\n      selectAllLabel: selectAllLabels[1],\n      showRemove: oneWay,\n      pagination: mergedPagination\n    }, listLocale)));\n  });\n};\nif (process.env.NODE_ENV !== 'production') {\n  Transfer.displayName = 'Transfer';\n}\nTransfer.List = List;\nTransfer.Search = Search;\nTransfer.Operation = Operation;\nexport default Transfer;"],"mappings":"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"},"metadata":{},"sourceType":"module"}