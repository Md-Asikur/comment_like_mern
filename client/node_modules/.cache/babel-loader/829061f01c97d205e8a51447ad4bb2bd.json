{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { cloneElement } from '../_util/reactNode';\nimport Icon from '../icon';\n\nvar TreeSelect = /*#__PURE__*/function (_React$Component) {\n  _inherits(TreeSelect, _React$Component);\n\n  function TreeSelect(props) {\n    var _this;\n\n    _classCallCheck(this, TreeSelect);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TreeSelect).call(this, props));\n\n    _this.saveTreeSelect = function (node) {\n      _this.rcTreeSelect = node;\n    };\n\n    _this.renderSwitcherIcon = function (prefixCls, _ref) {\n      var isLeaf = _ref.isLeaf,\n          loading = _ref.loading;\n\n      if (loading) {\n        return React.createElement(Icon, {\n          type: \"loading\",\n          className: \"\".concat(prefixCls, \"-switcher-loading-icon\")\n        });\n      }\n\n      if (isLeaf) {\n        return null;\n      }\n\n      return React.createElement(Icon, {\n        type: \"caret-down\",\n        className: \"\".concat(prefixCls, \"-switcher-icon\")\n      });\n    };\n\n    _this.renderTreeSelect = function (_ref2) {\n      var _classNames;\n\n      var getContextPopupContainer = _ref2.getPopupContainer,\n          getPrefixCls = _ref2.getPrefixCls,\n          renderEmpty = _ref2.renderEmpty;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          className = _a.className,\n          size = _a.size,\n          notFoundContent = _a.notFoundContent,\n          dropdownStyle = _a.dropdownStyle,\n          dropdownClassName = _a.dropdownClassName,\n          suffixIcon = _a.suffixIcon,\n          removeIcon = _a.removeIcon,\n          clearIcon = _a.clearIcon,\n          getPopupContainer = _a.getPopupContainer,\n          restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"notFoundContent\", \"dropdownStyle\", \"dropdownClassName\", \"suffixIcon\", \"removeIcon\", \"clearIcon\", \"getPopupContainer\"]);\n\n      var rest = omit(restProps, ['inputIcon', 'removeIcon', 'clearIcon', 'switcherIcon']);\n      var prefixCls = getPrefixCls('select', customizePrefixCls);\n      var cls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-lg\"), size === 'large'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-sm\"), size === 'small'), _classNames), className); // showSearch: single - false, multiple - true\n\n      var showSearch = restProps.showSearch;\n\n      if (!('showSearch' in restProps)) {\n        showSearch = !!(restProps.multiple || restProps.treeCheckable);\n      }\n\n      var checkable = rest.treeCheckable;\n\n      if (checkable) {\n        checkable = React.createElement(\"span\", {\n          className: \"\".concat(prefixCls, \"-tree-checkbox-inner\")\n        });\n      }\n\n      var inputIcon = suffixIcon ? cloneElement(suffixIcon) : React.createElement(Icon, {\n        type: \"down\",\n        className: \"\".concat(prefixCls, \"-arrow-icon\")\n      });\n      var finalRemoveIcon = removeIcon ? cloneElement(removeIcon) : React.createElement(Icon, {\n        type: \"close\",\n        className: \"\".concat(prefixCls, \"-remove-icon\")\n      });\n      var finalClearIcon = clearIcon ? cloneElement(clearIcon) : React.createElement(Icon, {\n        type: \"close-circle\",\n        theme: \"filled\",\n        className: \"\".concat(prefixCls, \"-clear-icon\")\n      });\n      return React.createElement(RcTreeSelect, _extends({\n        switcherIcon: function switcherIcon(nodeProps) {\n          return _this.renderSwitcherIcon(prefixCls, nodeProps);\n        },\n        inputIcon: inputIcon,\n        removeIcon: finalRemoveIcon,\n        clearIcon: finalClearIcon\n      }, rest, {\n        showSearch: showSearch,\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        dropdownClassName: classNames(dropdownClassName, \"\".concat(prefixCls, \"-tree-dropdown\")),\n        prefixCls: prefixCls,\n        className: cls,\n        dropdownStyle: _extends({\n          maxHeight: '100vh',\n          overflow: 'auto'\n        }, dropdownStyle),\n        treeCheckable: checkable,\n        notFoundContent: notFoundContent || renderEmpty('Select'),\n        ref: _this.saveTreeSelect\n      }));\n    };\n\n    warning(props.multiple !== false || !props.treeCheckable, 'TreeSelect', '`multiple` will alway be `true` when `treeCheckable` is true');\n    return _this;\n  }\n\n  _createClass(TreeSelect, [{\n    key: \"focus\",\n    value: function focus() {\n      this.rcTreeSelect.focus();\n    }\n  }, {\n    key: \"blur\",\n    value: function blur() {\n      this.rcTreeSelect.blur();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderTreeSelect);\n    }\n  }]);\n\n  return TreeSelect;\n}(React.Component);\n\nexport { TreeSelect as default };\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect.defaultProps = {\n  transitionName: 'slide-up',\n  choiceTransitionName: 'zoom'\n};","map":{"version":3,"mappings":"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","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","RcTreeSelect","TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","classNames","omit","ConfigConsumer","warning","cloneElement","Icon","TreeSelect","props","_classCallCheck","_this","saveTreeSelect","node","rcTreeSelect","renderSwitcherIcon","prefixCls","isLeaf","loading","type","className","renderTreeSelect","getContextPopupContainer","getPopupContainer","getPrefixCls","renderEmpty","customizePrefixCls","_a","size","notFoundContent","dropdownStyle","dropdownClassName","suffixIcon","removeIcon","clearIcon","restProps","rest","cls","showSearch","multiple","treeCheckable","checkable","inputIcon","finalRemoveIcon","finalClearIcon","theme","switcherIcon","nodeProps","_extends","maxHeight","overflow","ref","focus","blur","Component","defaultProps","transitionName","choiceTransitionName"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\Youtube Deploy\\client\\node_modules\\antd\\es\\tree-select\\tree-select\\index.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport omit from 'omit.js';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { cloneElement } from '../_util/reactNode';\nimport Icon from '../icon';\nexport default class TreeSelect extends React.Component {\n    constructor(props) {\n        super(props);\n        this.saveTreeSelect = (node) => {\n            this.rcTreeSelect = node;\n        };\n        this.renderSwitcherIcon = (prefixCls, { isLeaf, loading }) => {\n            if (loading) {\n                return <Icon type=\"loading\" className={`${prefixCls}-switcher-loading-icon`}/>;\n            }\n            if (isLeaf) {\n                return null;\n            }\n            return <Icon type=\"caret-down\" className={`${prefixCls}-switcher-icon`}/>;\n        };\n        this.renderTreeSelect = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, renderEmpty, }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, className, size, notFoundContent, dropdownStyle, dropdownClassName, suffixIcon, removeIcon, clearIcon, getPopupContainer } = _a, restProps = __rest(_a, [\"prefixCls\", \"className\", \"size\", \"notFoundContent\", \"dropdownStyle\", \"dropdownClassName\", \"suffixIcon\", \"removeIcon\", \"clearIcon\", \"getPopupContainer\"]);\n            const rest = omit(restProps, ['inputIcon', 'removeIcon', 'clearIcon', 'switcherIcon']);\n            const prefixCls = getPrefixCls('select', customizePrefixCls);\n            const cls = classNames({\n                [`${prefixCls}-lg`]: size === 'large',\n                [`${prefixCls}-sm`]: size === 'small',\n            }, className);\n            // showSearch: single - false, multiple - true\n            let { showSearch } = restProps;\n            if (!('showSearch' in restProps)) {\n                showSearch = !!(restProps.multiple || restProps.treeCheckable);\n            }\n            let checkable = rest.treeCheckable;\n            if (checkable) {\n                checkable = <span className={`${prefixCls}-tree-checkbox-inner`}/>;\n            }\n            const inputIcon = suffixIcon ? (cloneElement(suffixIcon)) : (<Icon type=\"down\" className={`${prefixCls}-arrow-icon`}/>);\n            const finalRemoveIcon = removeIcon ? (cloneElement(removeIcon)) : (<Icon type=\"close\" className={`${prefixCls}-remove-icon`}/>);\n            const finalClearIcon = clearIcon ? (cloneElement(clearIcon)) : (<Icon type=\"close-circle\" theme=\"filled\" className={`${prefixCls}-clear-icon`}/>);\n            return (<RcTreeSelect switcherIcon={(nodeProps) => this.renderSwitcherIcon(prefixCls, nodeProps)} inputIcon={inputIcon} removeIcon={finalRemoveIcon} clearIcon={finalClearIcon} {...rest} showSearch={showSearch} getPopupContainer={getPopupContainer || getContextPopupContainer} dropdownClassName={classNames(dropdownClassName, `${prefixCls}-tree-dropdown`)} prefixCls={prefixCls} className={cls} dropdownStyle={Object.assign({ maxHeight: '100vh', overflow: 'auto' }, dropdownStyle)} treeCheckable={checkable} notFoundContent={notFoundContent || renderEmpty('Select')} ref={this.saveTreeSelect}/>);\n        };\n        warning(props.multiple !== false || !props.treeCheckable, 'TreeSelect', '`multiple` will alway be `true` when `treeCheckable` is true');\n    }\n    focus() {\n        this.rcTreeSelect.focus();\n    }\n    blur() {\n        this.rcTreeSelect.blur();\n    }\n    render() {\n        return <ConfigConsumer>{this.renderTreeSelect}</ConfigConsumer>;\n    }\n}\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nTreeSelect.defaultProps = {\n    transitionName: 'slide-up',\n    choiceTransitionName: 'zoom',\n};\n"]},"metadata":{},"sourceType":"module"}