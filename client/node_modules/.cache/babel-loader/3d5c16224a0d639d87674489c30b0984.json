{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport Row from '../grid/row';\nimport Col from '../grid/col';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nimport FormContext from './context';\nvar ValidateStatuses = tuple('success', 'warning', 'error', 'validating', '');\n\nfunction intersperseSpace(list) {\n  return list.reduce(function (current, item) {\n    return [].concat(_toConsumableArray(current), [' ', item]);\n  }, []).slice(1);\n}\n\nvar FormItem = /*#__PURE__*/function (_React$Component) {\n  _inherits(FormItem, _React$Component);\n\n  function FormItem() {\n    var _this;\n\n    _classCallCheck(this, FormItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FormItem).apply(this, arguments));\n    _this.helpShow = false; // Resolve duplicated ids bug between different forms\n    // https://github.com/ant-design/ant-design/issues/7351\n\n    _this.onLabelClick = function () {\n      var id = _this.props.id || _this.getId();\n\n      if (!id) {\n        return;\n      }\n\n      var formItemNode = ReactDOM.findDOMNode(_assertThisInitialized(_this));\n      var control = formItemNode.querySelector(\"[id=\\\"\".concat(id, \"\\\"]\"));\n\n      if (control && control.focus) {\n        control.focus();\n      }\n    };\n\n    _this.onHelpAnimEnd = function (_key, helpShow) {\n      _this.helpShow = helpShow;\n\n      if (!helpShow) {\n        _this.setState({});\n      }\n    };\n\n    _this.renderFormItem = function (_ref) {\n      var _itemClassName;\n\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          style = _this$props.style,\n          className = _this$props.className;\n      var prefixCls = getPrefixCls('form', customizePrefixCls);\n\n      var children = _this.renderChildren(prefixCls);\n\n      var itemClassName = (_itemClassName = {}, _defineProperty(_itemClassName, \"\".concat(prefixCls, \"-item\"), true), _defineProperty(_itemClassName, \"\".concat(prefixCls, \"-item-with-help\"), _this.helpShow), _defineProperty(_itemClassName, \"\".concat(className), !!className), _itemClassName);\n      return React.createElement(Row, {\n        className: classNames(itemClassName),\n        style: style,\n        key: \"row\"\n      }, children);\n    };\n\n    return _this;\n  }\n\n  _createClass(FormItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          help = _this$props2.help,\n          validateStatus = _this$props2.validateStatus,\n          id = _this$props2.id;\n      warning(this.getControls(children, true).length <= 1 || help !== undefined || validateStatus !== undefined, 'Form.Item', 'Cannot generate `validateStatus` and `help` automatically, ' + 'while there are more than one `getFieldDecorator` in it.');\n      warning(!id, 'Form.Item', '`id` is deprecated for its label `htmlFor`. Please use `htmlFor` directly.');\n    }\n  }, {\n    key: \"getHelpMessage\",\n    value: function getHelpMessage() {\n      var help = this.props.help;\n\n      if (help === undefined && this.getOnlyControl()) {\n        var _this$getField = this.getField(),\n            errors = _this$getField.errors;\n\n        if (errors) {\n          return intersperseSpace(errors.map(function (e, index) {\n            var node = null;\n\n            if (React.isValidElement(e)) {\n              node = e;\n            } else if (React.isValidElement(e.message)) {\n              node = e.message;\n            } // eslint-disable-next-line react/no-array-index-key\n\n\n            return node ? React.cloneElement(node, {\n              key: index\n            }) : e.message;\n          }));\n        }\n\n        return '';\n      }\n\n      return help;\n    }\n  }, {\n    key: \"getControls\",\n    value: function getControls(children, recursively) {\n      var controls = [];\n      var childrenArray = React.Children.toArray(children);\n\n      for (var i = 0; i < childrenArray.length; i++) {\n        if (!recursively && controls.length > 0) {\n          break;\n        }\n\n        var child = childrenArray[i];\n\n        if (child.type && (child.type === FormItem || child.type.displayName === 'FormItem')) {\n          continue;\n        }\n\n        if (!child.props) {\n          continue;\n        }\n\n        if (FIELD_META_PROP in child.props) {\n          // And means FIELD_DATA_PROP in child.props, too.\n          controls.push(child);\n        } else if (child.props.children) {\n          controls = controls.concat(this.getControls(child.props.children, recursively));\n        }\n      }\n\n      return controls;\n    }\n  }, {\n    key: \"getOnlyControl\",\n    value: function getOnlyControl() {\n      var child = this.getControls(this.props.children, false)[0];\n      return child !== undefined ? child : null;\n    }\n  }, {\n    key: \"getChildProp\",\n    value: function getChildProp(prop) {\n      var child = this.getOnlyControl();\n      return child && child.props && child.props[prop];\n    }\n  }, {\n    key: \"getId\",\n    value: function getId() {\n      return this.getChildProp('id');\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.getChildProp(FIELD_META_PROP);\n    }\n  }, {\n    key: \"getField\",\n    value: function getField() {\n      return this.getChildProp(FIELD_DATA_PROP);\n    }\n  }, {\n    key: \"getValidateStatus\",\n    value: function getValidateStatus() {\n      var onlyControl = this.getOnlyControl();\n\n      if (!onlyControl) {\n        return '';\n      }\n\n      var field = this.getField();\n\n      if (field.validating) {\n        return 'validating';\n      }\n\n      if (field.errors) {\n        return 'error';\n      }\n\n      var fieldValue = 'value' in field ? field.value : this.getMeta().initialValue;\n\n      if (fieldValue !== undefined && fieldValue !== null && fieldValue !== '') {\n        return 'success';\n      }\n\n      return '';\n    }\n  }, {\n    key: \"isRequired\",\n    value: function isRequired() {\n      var required = this.props.required;\n\n      if (required !== undefined) {\n        return required;\n      }\n\n      if (this.getOnlyControl()) {\n        var meta = this.getMeta() || {};\n        var validate = meta.validate || [];\n        return validate.filter(function (item) {\n          return !!item.rules;\n        }).some(function (item) {\n          return item.rules.some(function (rule) {\n            return rule.required;\n          });\n        });\n      }\n\n      return false;\n    }\n  }, {\n    key: \"renderHelp\",\n    value: function renderHelp(prefixCls) {\n      var help = this.getHelpMessage();\n      var children = help ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-explain\"),\n        key: \"help\"\n      }, help) : null;\n\n      if (children) {\n        this.helpShow = !!children;\n      }\n\n      return React.createElement(Animate, {\n        transitionName: \"show-help\",\n        component: \"\",\n        transitionAppear: true,\n        key: \"help\",\n        onEnd: this.onHelpAnimEnd\n      }, children);\n    }\n  }, {\n    key: \"renderExtra\",\n    value: function renderExtra(prefixCls) {\n      var extra = this.props.extra;\n      return extra ? React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-extra\")\n      }, extra) : null;\n    }\n  }, {\n    key: \"renderValidateWrapper\",\n    value: function renderValidateWrapper(prefixCls, c1, c2, c3) {\n      var props = this.props;\n      var onlyControl = this.getOnlyControl;\n      var validateStatus = props.validateStatus === undefined && onlyControl ? this.getValidateStatus() : props.validateStatus;\n      var classes = \"\".concat(prefixCls, \"-item-control\");\n\n      if (validateStatus) {\n        classes = classNames(\"\".concat(prefixCls, \"-item-control\"), {\n          'has-feedback': props.hasFeedback || validateStatus === 'validating',\n          'has-success': validateStatus === 'success',\n          'has-warning': validateStatus === 'warning',\n          'has-error': validateStatus === 'error',\n          'is-validating': validateStatus === 'validating'\n        });\n      }\n\n      var iconType = '';\n\n      switch (validateStatus) {\n        case 'success':\n          iconType = 'check-circle';\n          break;\n\n        case 'warning':\n          iconType = 'exclamation-circle';\n          break;\n\n        case 'error':\n          iconType = 'close-circle';\n          break;\n\n        case 'validating':\n          iconType = 'loading';\n          break;\n\n        default:\n          iconType = '';\n          break;\n      }\n\n      var icon = props.hasFeedback && iconType ? React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-item-children-icon\")\n      }, React.createElement(Icon, {\n        type: iconType,\n        theme: iconType === 'loading' ? 'outlined' : 'filled'\n      })) : null;\n      return React.createElement(\"div\", {\n        className: classes\n      }, React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-item-children\")\n      }, c1, icon), c2, c3);\n    }\n  }, {\n    key: \"renderWrapper\",\n    value: function renderWrapper(prefixCls, children) {\n      var _this2 = this;\n\n      return React.createElement(FormContext.Consumer, {\n        key: \"wrapper\"\n      }, function (_ref2) {\n        var contextWrapperCol = _ref2.wrapperCol,\n            vertical = _ref2.vertical;\n        var wrapperCol = _this2.props.wrapperCol;\n        var mergedWrapperCol = ('wrapperCol' in _this2.props ? wrapperCol : contextWrapperCol) || {};\n        var className = classNames(\"\".concat(prefixCls, \"-item-control-wrapper\"), mergedWrapperCol.className); // No pass FormContext since it's useless\n\n        return React.createElement(FormContext.Provider, {\n          value: {\n            vertical: vertical\n          }\n        }, React.createElement(Col, _extends({}, mergedWrapperCol, {\n          className: className\n        }), children));\n      });\n    }\n  }, {\n    key: \"renderLabel\",\n    value: function renderLabel(prefixCls) {\n      var _this3 = this;\n\n      return React.createElement(FormContext.Consumer, {\n        key: \"label\"\n      }, function (_ref3) {\n        var _classNames;\n\n        var vertical = _ref3.vertical,\n            contextLabelAlign = _ref3.labelAlign,\n            contextLabelCol = _ref3.labelCol,\n            contextColon = _ref3.colon;\n        var _this3$props = _this3.props,\n            label = _this3$props.label,\n            labelCol = _this3$props.labelCol,\n            labelAlign = _this3$props.labelAlign,\n            colon = _this3$props.colon,\n            id = _this3$props.id,\n            htmlFor = _this3$props.htmlFor;\n\n        var required = _this3.isRequired();\n\n        var mergedLabelCol = ('labelCol' in _this3.props ? labelCol : contextLabelCol) || {};\n        var mergedLabelAlign = 'labelAlign' in _this3.props ? labelAlign : contextLabelAlign;\n        var labelClsBasic = \"\".concat(prefixCls, \"-item-label\");\n        var labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && \"\".concat(labelClsBasic, \"-left\"), mergedLabelCol.className);\n        var labelChildren = label; // Keep label is original where there should have no colon\n\n        var computedColon = colon === true || contextColon !== false && colon !== false;\n        var haveColon = computedColon && !vertical; // Remove duplicated user input colon\n\n        if (haveColon && typeof label === 'string' && label.trim() !== '') {\n          labelChildren = label.replace(/[：:]\\s*$/, '');\n        }\n\n        var labelClassName = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-required\"), required), _defineProperty(_classNames, \"\".concat(prefixCls, \"-item-no-colon\"), !computedColon), _classNames));\n        return label ? React.createElement(Col, _extends({}, mergedLabelCol, {\n          className: labelColClassName\n        }), React.createElement(\"label\", {\n          htmlFor: htmlFor || id || _this3.getId(),\n          className: labelClassName,\n          title: typeof label === 'string' ? label : '',\n          onClick: _this3.onLabelClick\n        }, labelChildren)) : null;\n      });\n    }\n  }, {\n    key: \"renderChildren\",\n    value: function renderChildren(prefixCls) {\n      var children = this.props.children;\n      return [this.renderLabel(prefixCls), this.renderWrapper(prefixCls, this.renderValidateWrapper(prefixCls, children, this.renderHelp(prefixCls), this.renderExtra(prefixCls)))];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderFormItem);\n    }\n  }]);\n\n  return FormItem;\n}(React.Component);\n\nexport { FormItem as default };\nFormItem.defaultProps = {\n  hasFeedback: false\n};\nFormItem.propTypes = {\n  prefixCls: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n  labelAlign: PropTypes.string,\n  labelCol: PropTypes.object,\n  help: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n  validateStatus: PropTypes.oneOf(ValidateStatuses),\n  hasFeedback: PropTypes.bool,\n  wrapperCol: PropTypes.object,\n  className: PropTypes.string,\n  id: PropTypes.string,\n  children: PropTypes.node,\n  colon: PropTypes.bool\n};","map":{"version":3,"mappings":"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","names":["React","ReactDOM","PropTypes","classNames","Animate","Row","Col","Icon","ConfigConsumer","warning","tuple","FIELD_META_PROP","FIELD_DATA_PROP","FormContext","ValidateStatuses","intersperseSpace","list","reduce","current","item","slice","FormItem","_classCallCheck","_this","arguments","helpShow","onLabelClick","id","props","getId","formItemNode","findDOMNode","control","querySelector","focus","onHelpAnimEnd","_key","setState","renderFormItem","getPrefixCls","customizePrefixCls","prefixCls","style","className","children","renderChildren","itemClassName","key","help","validateStatus","getControls","length","undefined","getOnlyControl","getField","errors","map","e","index","node","isValidElement","message","cloneElement","recursively","controls","childrenArray","Children","toArray","i","child","type","displayName","push","concat","prop","getChildProp","onlyControl","field","validating","fieldValue","value","getMeta","initialValue","required","meta","validate","filter","rules","some","rule","getHelpMessage","transitionName","component","transitionAppear","onEnd","extra","c1","c2","c3","getValidateStatus","classes","hasFeedback","iconType","icon","theme","Consumer","contextWrapperCol","wrapperCol","vertical","_this2","mergedWrapperCol","Provider","contextLabelAlign","labelAlign","contextLabelCol","labelCol","contextColon","colon","_this3","label","htmlFor","isRequired","mergedLabelCol","mergedLabelAlign","labelClsBasic","labelColClassName","labelChildren","computedColon","haveColon","trim","replace","labelClassName","title","onClick","renderLabel","renderWrapper","renderValidateWrapper","renderHelp","renderExtra","Component","defaultProps","propTypes","string","oneOfType","object","bool","oneOf"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\react-youtube-clone-master\\client\\node_modules\\antd\\es\\form\\form\\FormItem.jsx"],"sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Animate from 'rc-animate';\nimport Row from '../grid/row';\nimport Col from '../grid/col';\nimport Icon from '../icon';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport { tuple } from '../_util/type';\nimport { FIELD_META_PROP, FIELD_DATA_PROP } from './constants';\nimport FormContext from './context';\nconst ValidateStatuses = tuple('success', 'warning', 'error', 'validating', '');\nfunction intersperseSpace(list) {\n    return list.reduce((current, item) => [...current, ' ', item], []).slice(1);\n}\nexport default class FormItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.helpShow = false;\n        // Resolve duplicated ids bug between different forms\n        // https://github.com/ant-design/ant-design/issues/7351\n        this.onLabelClick = () => {\n            const id = this.props.id || this.getId();\n            if (!id) {\n                return;\n            }\n            const formItemNode = ReactDOM.findDOMNode(this);\n            const control = formItemNode.querySelector(`[id=\"${id}\"]`);\n            if (control && control.focus) {\n                control.focus();\n            }\n        };\n        this.onHelpAnimEnd = (_key, helpShow) => {\n            this.helpShow = helpShow;\n            if (!helpShow) {\n                this.setState({});\n            }\n        };\n        this.renderFormItem = ({ getPrefixCls }) => {\n            const { prefixCls: customizePrefixCls, style, className } = this.props;\n            const prefixCls = getPrefixCls('form', customizePrefixCls);\n            const children = this.renderChildren(prefixCls);\n            const itemClassName = {\n                [`${prefixCls}-item`]: true,\n                [`${prefixCls}-item-with-help`]: this.helpShow,\n                [`${className}`]: !!className,\n            };\n            return (<Row className={classNames(itemClassName)} style={style} key=\"row\">\n        {children}\n      </Row>);\n        };\n    }\n    componentDidMount() {\n        const { children, help, validateStatus, id } = this.props;\n        warning(this.getControls(children, true).length <= 1 ||\n            (help !== undefined || validateStatus !== undefined), 'Form.Item', 'Cannot generate `validateStatus` and `help` automatically, ' +\n            'while there are more than one `getFieldDecorator` in it.');\n        warning(!id, 'Form.Item', '`id` is deprecated for its label `htmlFor`. Please use `htmlFor` directly.');\n    }\n    getHelpMessage() {\n        const { help } = this.props;\n        if (help === undefined && this.getOnlyControl()) {\n            const { errors } = this.getField();\n            if (errors) {\n                return intersperseSpace(errors.map((e, index) => {\n                    let node = null;\n                    if (React.isValidElement(e)) {\n                        node = e;\n                    }\n                    else if (React.isValidElement(e.message)) {\n                        node = e.message;\n                    }\n                    // eslint-disable-next-line react/no-array-index-key\n                    return node ? React.cloneElement(node, { key: index }) : e.message;\n                }));\n            }\n            return '';\n        }\n        return help;\n    }\n    getControls(children, recursively) {\n        let controls = [];\n        const childrenArray = React.Children.toArray(children);\n        for (let i = 0; i < childrenArray.length; i++) {\n            if (!recursively && controls.length > 0) {\n                break;\n            }\n            const child = childrenArray[i];\n            if (child.type &&\n                (child.type === FormItem || child.type.displayName === 'FormItem')) {\n                continue;\n            }\n            if (!child.props) {\n                continue;\n            }\n            if (FIELD_META_PROP in child.props) {\n                // And means FIELD_DATA_PROP in child.props, too.\n                controls.push(child);\n            }\n            else if (child.props.children) {\n                controls = controls.concat(this.getControls(child.props.children, recursively));\n            }\n        }\n        return controls;\n    }\n    getOnlyControl() {\n        const child = this.getControls(this.props.children, false)[0];\n        return child !== undefined ? child : null;\n    }\n    getChildProp(prop) {\n        const child = this.getOnlyControl();\n        return child && child.props && child.props[prop];\n    }\n    getId() {\n        return this.getChildProp('id');\n    }\n    getMeta() {\n        return this.getChildProp(FIELD_META_PROP);\n    }\n    getField() {\n        return this.getChildProp(FIELD_DATA_PROP);\n    }\n    getValidateStatus() {\n        const onlyControl = this.getOnlyControl();\n        if (!onlyControl) {\n            return '';\n        }\n        const field = this.getField();\n        if (field.validating) {\n            return 'validating';\n        }\n        if (field.errors) {\n            return 'error';\n        }\n        const fieldValue = 'value' in field ? field.value : this.getMeta().initialValue;\n        if (fieldValue !== undefined && fieldValue !== null && fieldValue !== '') {\n            return 'success';\n        }\n        return '';\n    }\n    isRequired() {\n        const { required } = this.props;\n        if (required !== undefined) {\n            return required;\n        }\n        if (this.getOnlyControl()) {\n            const meta = this.getMeta() || {};\n            const validate = meta.validate || [];\n            return validate\n                .filter((item) => !!item.rules)\n                .some((item) => {\n                return item.rules.some((rule) => rule.required);\n            });\n        }\n        return false;\n    }\n    renderHelp(prefixCls) {\n        const help = this.getHelpMessage();\n        const children = help ? (<div className={`${prefixCls}-explain`} key=\"help\">\n        {help}\n      </div>) : null;\n        if (children) {\n            this.helpShow = !!children;\n        }\n        return (<Animate transitionName=\"show-help\" component=\"\" transitionAppear key=\"help\" onEnd={this.onHelpAnimEnd}>\n        {children}\n      </Animate>);\n    }\n    renderExtra(prefixCls) {\n        const { extra } = this.props;\n        return extra ? <div className={`${prefixCls}-extra`}>{extra}</div> : null;\n    }\n    renderValidateWrapper(prefixCls, c1, c2, c3) {\n        const { props } = this;\n        const onlyControl = this.getOnlyControl;\n        const validateStatus = props.validateStatus === undefined && onlyControl\n            ? this.getValidateStatus()\n            : props.validateStatus;\n        let classes = `${prefixCls}-item-control`;\n        if (validateStatus) {\n            classes = classNames(`${prefixCls}-item-control`, {\n                'has-feedback': props.hasFeedback || validateStatus === 'validating',\n                'has-success': validateStatus === 'success',\n                'has-warning': validateStatus === 'warning',\n                'has-error': validateStatus === 'error',\n                'is-validating': validateStatus === 'validating',\n            });\n        }\n        let iconType = '';\n        switch (validateStatus) {\n            case 'success':\n                iconType = 'check-circle';\n                break;\n            case 'warning':\n                iconType = 'exclamation-circle';\n                break;\n            case 'error':\n                iconType = 'close-circle';\n                break;\n            case 'validating':\n                iconType = 'loading';\n                break;\n            default:\n                iconType = '';\n                break;\n        }\n        const icon = props.hasFeedback && iconType ? (<span className={`${prefixCls}-item-children-icon`}>\n          <Icon type={iconType} theme={iconType === 'loading' ? 'outlined' : 'filled'}/>\n        </span>) : null;\n        return (<div className={classes}>\n        <span className={`${prefixCls}-item-children`}>\n          {c1}\n          {icon}\n        </span>\n        {c2}\n        {c3}\n      </div>);\n    }\n    renderWrapper(prefixCls, children) {\n        return (<FormContext.Consumer key=\"wrapper\">\n        {({ wrapperCol: contextWrapperCol, vertical }) => {\n            const { wrapperCol } = this.props;\n            const mergedWrapperCol = ('wrapperCol' in this.props ? wrapperCol : contextWrapperCol) || {};\n            const className = classNames(`${prefixCls}-item-control-wrapper`, mergedWrapperCol.className);\n            // No pass FormContext since it's useless\n            return (<FormContext.Provider value={{ vertical }}>\n              <Col {...mergedWrapperCol} className={className}>\n                {children}\n              </Col>\n            </FormContext.Provider>);\n        }}\n      </FormContext.Consumer>);\n    }\n    renderLabel(prefixCls) {\n        return (<FormContext.Consumer key=\"label\">\n        {({ vertical, labelAlign: contextLabelAlign, labelCol: contextLabelCol, colon: contextColon, }) => {\n            const { label, labelCol, labelAlign, colon, id, htmlFor } = this.props;\n            const required = this.isRequired();\n            const mergedLabelCol = ('labelCol' in this.props ? labelCol : contextLabelCol) || {};\n            const mergedLabelAlign = 'labelAlign' in this.props ? labelAlign : contextLabelAlign;\n            const labelClsBasic = `${prefixCls}-item-label`;\n            const labelColClassName = classNames(labelClsBasic, mergedLabelAlign === 'left' && `${labelClsBasic}-left`, mergedLabelCol.className);\n            let labelChildren = label;\n            // Keep label is original where there should have no colon\n            const computedColon = colon === true || (contextColon !== false && colon !== false);\n            const haveColon = computedColon && !vertical;\n            // Remove duplicated user input colon\n            if (haveColon && typeof label === 'string' && label.trim() !== '') {\n                labelChildren = label.replace(/[：:]\\s*$/, '');\n            }\n            const labelClassName = classNames({\n                [`${prefixCls}-item-required`]: required,\n                [`${prefixCls}-item-no-colon`]: !computedColon,\n            });\n            return label ? (<Col {...mergedLabelCol} className={labelColClassName}>\n              <label htmlFor={htmlFor || id || this.getId()} className={labelClassName} title={typeof label === 'string' ? label : ''} onClick={this.onLabelClick}>\n                {labelChildren}\n              </label>\n            </Col>) : null;\n        }}\n      </FormContext.Consumer>);\n    }\n    renderChildren(prefixCls) {\n        const { children } = this.props;\n        return [\n            this.renderLabel(prefixCls),\n            this.renderWrapper(prefixCls, this.renderValidateWrapper(prefixCls, children, this.renderHelp(prefixCls), this.renderExtra(prefixCls))),\n        ];\n    }\n    render() {\n        return <ConfigConsumer>{this.renderFormItem}</ConfigConsumer>;\n    }\n}\nFormItem.defaultProps = {\n    hasFeedback: false,\n};\nFormItem.propTypes = {\n    prefixCls: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n    labelAlign: PropTypes.string,\n    labelCol: PropTypes.object,\n    help: PropTypes.oneOfType([PropTypes.node, PropTypes.bool]),\n    validateStatus: PropTypes.oneOf(ValidateStatuses),\n    hasFeedback: PropTypes.bool,\n    wrapperCol: PropTypes.object,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    children: PropTypes.node,\n    colon: PropTypes.bool,\n};\n"]},"metadata":{},"sourceType":"module"}