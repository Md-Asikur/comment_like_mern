{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scs\\\\OneDrive\\\\Desktop\\\\react-youtube-clone-master\\\\client\\\\src\\\\components\\\\views\\\\DetailVideoPage\\\\Sections\\\\SingleComment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  TextArea\n} = Input;\n\nfunction SingleComment(props) {\n  _s();\n\n  const user = useSelector(state => state.user);\n  const [CommentValue, setCommentValue] = useState(\"\");\n  const [OpenReply, setOpenReply] = useState(false);\n\n  const handleChange = e => {\n    setCommentValue(e.currentTarget.value);\n  };\n\n  const openReply = () => {\n    setOpenReply(!OpenReply);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    const variables = {\n      writer: user.userData._id,\n      postId: props.postId,\n      responseTo: props.comment._id,\n      content: CommentValue\n    };\n    axios.post('/api/comment/saveComment', variables).then(response => {\n      if (response.data.success) {\n        setCommentValue(\"\");\n        setOpenReply(!OpenReply);\n        props.refreshFunction(response.data.result);\n      } else {\n        alert('Failed to save Comment');\n      }\n    });\n  };\n\n  const actions = [/*#__PURE__*/_jsxDEV(LikeDislikes, {\n    comment: true,\n    commentId: props.comment._id,\n    userId: localStorage.getItem('userId')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n    onClick: openReply,\n    children: \"Reply to \"\n  }, \"comment-basic-reply-to\", false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this)];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Comment, {\n      actions: actions,\n      author: props.comment.writer.name,\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        src: props.comment.writer.image,\n        alt: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this),\n      content: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.comment.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), OpenReply && /*#__PURE__*/_jsxDEV(\"form\", {\n      style: {\n        display: 'flex'\n      },\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextArea, {\n        style: {\n          width: '100%',\n          borderRadius: '5px'\n        },\n        onChange: handleChange,\n        value: CommentValue,\n        placeholder: \"write some comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          width: '20%',\n          height: '52px'\n        },\n        onClick: onSubmit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleComment, \"TZOiyjFfAtI/+SewiQCLqInq/Pc=\", false, function () {\n  return [useSelector];\n});\n\n_c = SingleComment;\nexport default SingleComment;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleComment\");","map":{"version":3,"names":["React","useState","Comment","Avatar","Button","Input","axios","useSelector","LikeDislikes","TextArea","SingleComment","props","user","state","CommentValue","setCommentValue","OpenReply","setOpenReply","handleChange","e","currentTarget","value","openReply","onSubmit","preventDefault","variables","writer","userData","_id","postId","responseTo","comment","content","post","then","response","data","success","refreshFunction","result","alert","actions","localStorage","getItem","name","image","display","width","borderRadius","height"],"sources":["C:/Users/scs/OneDrive/Desktop/react-youtube-clone-master/client/src/components/views/DetailVideoPage/Sections/SingleComment.js"],"sourcesContent":["import React, { useState } from 'react'\nimport { Comment, Avatar, Button, Input } from 'antd';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport LikeDislikes from './LikeDislikes';\nconst { TextArea } = Input;\nfunction SingleComment(props) {\n    const user = useSelector(state => state.user);\n    const [CommentValue, setCommentValue] = useState(\"\")\n    const [OpenReply, setOpenReply] = useState(false)\n\n    const handleChange = (e) => {\n        setCommentValue(e.currentTarget.value)\n    }\n\n    const openReply = () => {\n        setOpenReply(!OpenReply)\n    }\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        const variables = {\n            writer: user.userData._id,\n            postId: props.postId,\n            responseTo: props.comment._id,\n            content: CommentValue\n        }\n\n\n        axios.post('/api/comment/saveComment', variables)\n            .then(response => {\n                if (response.data.success) {\n                    setCommentValue(\"\")\n                    setOpenReply(!OpenReply)\n                    props.refreshFunction(response.data.result)\n                } else {\n                    alert('Failed to save Comment')\n                }\n            })\n    }\n\n    const actions = [\n        <LikeDislikes comment commentId={props.comment._id} userId={localStorage.getItem('userId')} />,\n        <span onClick={openReply} key=\"comment-basic-reply-to\">Reply to </span>\n    ]\n\n    return (\n        <div>\n            <Comment\n                actions={actions}\n                author={props.comment.writer.name}\n                avatar={\n                    <Avatar\n                        src={props.comment.writer.image}\n                        alt=\"image\"\n                    />\n                }\n                content={\n                    <p>\n                        {props.comment.content}\n                    </p>\n                }\n            ></Comment>\n\n\n            {OpenReply &&\n                <form style={{ display: 'flex' }} onSubmit={onSubmit}>\n                    <TextArea\n                        style={{ width: '100%', borderRadius: '5px' }}\n                        onChange={handleChange}\n                        value={CommentValue}\n                        placeholder=\"write some comments\"\n                    />\n                    <br />\n                    <Button style={{ width: '20%', height: '52px' }} onClick={onSubmit}>Submit</Button>\n                </form>\n            }\n\n        </div>\n    )\n}\n\nexport default SingleComment\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}