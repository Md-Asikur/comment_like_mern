{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Animate from 'rc-animate';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport ScrollNumber from './ScrollNumber';\nimport { PresetColorTypes } from '../_util/colors';\nimport { ConfigConsumer } from '../config-provider';\n\nfunction isPresetColor(color) {\n  return PresetColorTypes.indexOf(color) !== -1;\n}\n\nvar Badge = /*#__PURE__*/function (_React$Component) {\n  _inherits(Badge, _React$Component);\n\n  function Badge() {\n    var _this;\n\n    _classCallCheck(this, Badge);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Badge).apply(this, arguments));\n\n    _this.renderBadge = function (_ref) {\n      var _classNames;\n\n      var getPrefixCls = _ref.getPrefixCls;\n\n      var _a = _this.props,\n          customizePrefixCls = _a.prefixCls,\n          customizeScrollNumberPrefixCls = _a.scrollNumberPrefixCls,\n          children = _a.children,\n          status = _a.status,\n          text = _a.text,\n          color = _a.color,\n          restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\"]);\n\n      var omitArr = ['count', 'showZero', 'overflowCount', 'className', 'style', 'dot', 'offset', 'title'];\n      var prefixCls = getPrefixCls('badge', customizePrefixCls);\n      var scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n\n      var scrollNumber = _this.renderBadgeNumber(prefixCls, scrollNumberPrefixCls);\n\n      var statusText = _this.renderStatusText(prefixCls);\n\n      var statusCls = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-dot\"), _this.hasStatus()), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(status), !!status), _defineProperty(_classNames, \"\".concat(prefixCls, \"-status-\").concat(color), isPresetColor(color)), _classNames));\n      var statusStyle = {};\n\n      if (color && !isPresetColor(color)) {\n        statusStyle.background = color;\n      } // <Badge status=\"success\" />\n\n\n      if (!children && _this.hasStatus()) {\n        var styleWithOffset = _this.getStyleWithOffset();\n\n        var statusTextColor = styleWithOffset && styleWithOffset.color;\n        return React.createElement(\"span\", _extends({}, omit(restProps, omitArr), {\n          className: _this.getBadgeClassName(prefixCls),\n          style: styleWithOffset\n        }), React.createElement(\"span\", {\n          className: statusCls,\n          style: statusStyle\n        }), React.createElement(\"span\", {\n          style: {\n            color: statusTextColor\n          },\n          className: \"\".concat(prefixCls, \"-status-text\")\n        }, text));\n      }\n\n      return React.createElement(\"span\", _extends({}, omit(restProps, omitArr), {\n        className: _this.getBadgeClassName(prefixCls)\n      }), children, React.createElement(Animate, {\n        component: \"\",\n        showProp: \"data-show\",\n        transitionName: children ? \"\".concat(prefixCls, \"-zoom\") : '',\n        transitionAppear: true\n      }, scrollNumber), statusText);\n    };\n\n    return _this;\n  }\n\n  _createClass(Badge, [{\n    key: \"getNumberedDispayCount\",\n    value: function getNumberedDispayCount() {\n      var _this$props = this.props,\n          count = _this$props.count,\n          overflowCount = _this$props.overflowCount;\n      var displayCount = count > overflowCount ? \"\".concat(overflowCount, \"+\") : count;\n      return displayCount;\n    }\n  }, {\n    key: \"getDispayCount\",\n    value: function getDispayCount() {\n      var isDot = this.isDot(); // dot mode don't need count\n\n      if (isDot) {\n        return '';\n      }\n\n      return this.getNumberedDispayCount();\n    }\n  }, {\n    key: \"getScrollNumberTitle\",\n    value: function getScrollNumberTitle() {\n      var _this$props2 = this.props,\n          title = _this$props2.title,\n          count = _this$props2.count;\n\n      if (title) {\n        return title;\n      }\n\n      return typeof count === 'string' || typeof count === 'number' ? count : undefined;\n    }\n  }, {\n    key: \"getStyleWithOffset\",\n    value: function getStyleWithOffset() {\n      var _this$props3 = this.props,\n          offset = _this$props3.offset,\n          style = _this$props3.style;\n      return offset ? _extends({\n        right: -parseInt(offset[0], 10),\n        marginTop: offset[1]\n      }, style) : style;\n    }\n  }, {\n    key: \"getBadgeClassName\",\n    value: function getBadgeClassName(prefixCls) {\n      var _classNames2;\n\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          children = _this$props4.children;\n      return classNames(className, prefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-status\"), this.hasStatus()), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-not-a-wrapper\"), !children), _classNames2));\n    }\n  }, {\n    key: \"hasStatus\",\n    value: function hasStatus() {\n      var _this$props5 = this.props,\n          status = _this$props5.status,\n          color = _this$props5.color;\n      return !!status || !!color;\n    }\n  }, {\n    key: \"isZero\",\n    value: function isZero() {\n      var numberedDispayCount = this.getNumberedDispayCount();\n      return numberedDispayCount === '0' || numberedDispayCount === 0;\n    }\n  }, {\n    key: \"isDot\",\n    value: function isDot() {\n      var dot = this.props.dot;\n      var isZero = this.isZero();\n      return dot && !isZero || this.hasStatus();\n    }\n  }, {\n    key: \"isHidden\",\n    value: function isHidden() {\n      var showZero = this.props.showZero;\n      var displayCount = this.getDispayCount();\n      var isZero = this.isZero();\n      var isDot = this.isDot();\n      var isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n      return (isEmpty || isZero && !showZero) && !isDot;\n    }\n  }, {\n    key: \"renderStatusText\",\n    value: function renderStatusText(prefixCls) {\n      var text = this.props.text;\n      var hidden = this.isHidden();\n      return hidden || !text ? null : React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-status-text\")\n      }, text);\n    }\n  }, {\n    key: \"renderDispayComponent\",\n    value: function renderDispayComponent() {\n      var count = this.props.count;\n      var customNode = count;\n\n      if (!customNode || _typeof(customNode) !== 'object') {\n        return undefined;\n      }\n\n      return React.cloneElement(customNode, {\n        style: _extends(_extends({}, this.getStyleWithOffset()), customNode.props && customNode.props.style)\n      });\n    }\n  }, {\n    key: \"renderBadgeNumber\",\n    value: function renderBadgeNumber(prefixCls, scrollNumberPrefixCls) {\n      var _classNames3;\n\n      var _this$props6 = this.props,\n          status = _this$props6.status,\n          count = _this$props6.count;\n      var displayCount = this.getDispayCount();\n      var isDot = this.isDot();\n      var hidden = this.isHidden();\n      var scrollNumberCls = classNames((_classNames3 = {}, _defineProperty(_classNames3, \"\".concat(prefixCls, \"-dot\"), isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-count\"), !isDot), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-multiple-words\"), !isDot && count && count.toString && count.toString().length > 1), _defineProperty(_classNames3, \"\".concat(prefixCls, \"-status-\").concat(status), this.hasStatus()), _classNames3));\n      return hidden ? null : React.createElement(ScrollNumber, {\n        prefixCls: scrollNumberPrefixCls,\n        \"data-show\": !hidden,\n        className: scrollNumberCls,\n        count: displayCount,\n        displayComponent: this.renderDispayComponent() // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n        ,\n        title: this.getScrollNumberTitle(),\n        style: this.getStyleWithOffset(),\n        key: \"scrollNumber\"\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderBadge);\n    }\n  }]);\n\n  return Badge;\n}(React.Component);\n\nexport { Badge as default };\nBadge.defaultProps = {\n  count: null,\n  showZero: false,\n  dot: false,\n  overflowCount: 99\n};\nBadge.propTypes = {\n  count: PropTypes.node,\n  showZero: PropTypes.bool,\n  dot: PropTypes.bool,\n  overflowCount: PropTypes.number\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAIA,MAAM,GAAI,QAAQ,KAAKA,MAAb,IAAwB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAClD,IAAIC,CAAC,GAAG,EAAR;;EACA,KAAK,IAAIC,CAAT,IAAcH,CAAd;IAAiB,IAAII,MAAM,CAACC,SAAPD,CAAiBE,cAAjBF,CAAgCG,IAAhCH,CAAqCJ,CAArCI,EAAwCD,CAAxCC,KAA8CH,CAAC,CAACO,OAAFP,CAAUE,CAAVF,IAAe,CAAjE,EACbC,CAAC,CAACC,CAAD,CAADD,GAAOF,CAAC,CAACG,CAAD,CAARD;EADJ;;EAEA,IAAIF,CAAC,IAAI,IAALA,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EACI,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAPL,CAA6BJ,CAA7BI,CAApB,EAAqDM,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;IACpE,IAAIT,CAAC,CAACO,OAAFP,CAAUE,CAAC,CAACO,CAAD,CAAXT,IAAkB,CAAlBA,IAAuBG,MAAM,CAACC,SAAPD,CAAiBQ,oBAAjBR,CAAsCG,IAAtCH,CAA2CJ,CAA3CI,EAA8CD,CAAC,CAACO,CAAD,CAA/CN,CAA3B,EACIF,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAADR,GAAUF,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAXR;EACP;EACL,OAAOA,CAAP;AATJ;;AAWA,OAAO,KAAKW,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,cAAT,QAA+B,oBAA/B;;AACA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;EAC1B,OAAOH,gBAAgB,CAACX,OAAjBW,CAAyBG,KAAzBH,MAAoC,CAAC,CAA5C;AACH;;IACoBI,K;;;EACjB,iBAAc;IAAA;;IAAAC;;IACVC,4EAASC,SAAT;;IACAD,MAAKE,WAAL,GAAmB,gBAAsB;MAAA;;MAAA,IAAnBC,YAAmB,QAAnBA,YAAmB;;MAC/B,MAAE,GAAGH,MAAKI,KAAV;MAAA,IAA8BC,kBAA9B,GAA2IC,EAA3I,CAAmBC,SAAnB;MAAA,IAAyEC,8BAAzE,GAA2IF,EAA3I,CAAkDG,qBAAlD;MAAA,IAAyGC,QAAzG,GAA2IJ,EAA3I,CAAyGI,QAAzG;MAAA,IAAmHC,MAAnH,GAA2IL,EAA3I,CAAmHK,MAAnH;MAAA,IAA2HC,IAA3H,GAA2IN,EAA3I,CAA2HM,IAA3H;MAAA,IAAiIf,KAAjI,GAA2IS,EAA3I,CAAiIT,KAAjI;MAAA,IAA+IgB,SAA/I,GAA2JvC,MAAM,CAACgC,EAAD,EAAK,CAAC,WAAD,EAAc,uBAAd,EAAuC,UAAvC,EAAmD,QAAnD,EAA6D,MAA7D,EAAqE,OAArE,CAAL,CAAjK;;MACN,IAAMQ,OAAO,GAAG,CACZ,OADY,EAEZ,UAFY,EAGZ,eAHY,EAIZ,WAJY,EAKZ,OALY,EAMZ,KANY,EAOZ,QAPY,EAQZ,OARY,CAAhB;MAUA,IAAMP,SAAS,GAAGJ,YAAY,CAAC,OAAD,EAAUE,kBAAV,CAA9B;MACA,IAAMI,qBAAqB,GAAGN,YAAY,CAAC,eAAD,EAAkBK,8BAAlB,CAA1C;;MACA,IAAMO,YAAY,GAAGf,MAAKgB,iBAAL,CAAuBT,SAAvB,EAAkCE,qBAAlC,CAArB;;MACA,IAAMQ,UAAU,GAAGjB,MAAKkB,gBAAL,CAAsBX,SAAtB,CAAnB;;MACA,IAAMY,SAAS,GAAG3B,UAAU,2DACpBe,SADoB,kBACKP,MAAKoB,SAAL,EADL,0CAEpBb,SAFoB,qBAEAI,MAFA,GAEW,CAAC,CAACA,MAFb,0CAGpBJ,SAHoB,qBAGAV,KAHA,GAGUD,aAAa,CAACC,KAAD,CAHvB,gBAA5B;MAKA,IAAMwB,WAAW,GAAG,EAApB;;MACA,IAAIxB,KAAK,IAAI,CAACD,aAAa,CAACC,KAAD,CAA3B,EAAoC;QAChCwB,WAAW,CAACC,UAAZD,GAAyBxB,KAAzBwB;MAvBiC,EAyBrC;;;MACA,IAAI,CAACX,QAAD,IAAaV,MAAKoB,SAAL,EAAjB,EAAmC;QAC/B,IAAMG,eAAe,GAAGvB,MAAKwB,kBAAL,EAAxB;;QACA,IAAMC,eAAe,GAAGF,eAAe,IAAIA,eAAe,CAAC1B,KAA3D;QACA,OAAQT,yCAAUG,IAAI,CAACsB,SAAD,EAAYC,OAAZ,CAAd;UAAoCY,SAAS,EAAE1B,MAAK2B,iBAAL,CAAuBpB,SAAvB,CAA/C;UAAkFqB,KAAK,EAAEL;QAAzF,IACdnC;UAAMsC,SAAS,EAAEP,SAAjB;UAA4BS,KAAK,EAAEP;QAAnC,EADc,EAEdjC;UAAMwC,KAAK,EAAE;YAAE/B,KAAK,EAAE4B;UAAT,CAAb;UAAyCC,SAAS,YAAKnB,SAAL;QAAlD,GACGK,IADH,CAFc,CAAR;MAMH;;MACD,OAAQxB,yCAAUG,IAAI,CAACsB,SAAD,EAAYC,OAAZ,CAAd;QAAoCY,SAAS,EAAE1B,MAAK2B,iBAAL,CAAuBpB,SAAvB;MAA/C,IACXG,QADW,EAEZtB,oBAACE,OAAD;QAASuC,SAAS,EAAC,EAAnB;QAAsBC,QAAQ,EAAC,WAA/B;QAA2CC,cAAc,EAAErB,QAAQ,aAAMH,SAAN,aAAyB,EAA5F;QAAgGyB,gBAAgB;MAAhH,GACGjB,YADH,CAFY,EAKXE,UALW,CAAR;IApCJ;;IAFU;EA8Cb;;;;6CACwB;MAAA,kBACY,KAAKb,KADjB;MAAA,IACb6B,KADa,eACbA,KADa;MAAA,IACNC,aADM,eACNA,aADM;MAErB,IAAMC,YAAY,GAAGF,KAAK,GAAGC,aAARD,aAA2BC,aAA3B,SAA8CD,KAAnE;MACA,OAAOE,YAAP;IACH;;;qCACgB;MACb,IAAMC,KAAK,GAAG,KAAKA,KAAL,EAAd,CADa,CAEb;;MACA,IAAIA,KAAJ,EAAW;QACP,OAAO,EAAP;MACH;;MACD,OAAO,KAAKC,sBAAL,EAAP;IACH;;;2CACsB;MAAA,mBACM,KAAKjC,KADX;MAAA,IACXkC,KADW,gBACXA,KADW;MAAA,IACJL,KADI,gBACJA,KADI;;MAEnB,IAAIK,KAAJ,EAAW;QACP,OAAOA,KAAP;MACH;;MACD,OAAO,OAAOL,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,QAA9C,GAAyDA,KAAzD,GAAiEM,SAAxE;IACH;;;yCACoB;MAAA,mBACS,KAAKnC,KADd;MAAA,IACToC,MADS,gBACTA,MADS;MAAA,IACDZ,KADC,gBACDA,KADC;MAEjB,OAAOY,MAAM,GACPC,SAAc;QAAEC,KAAK,EAAE,CAACC,QAAQ,CAACH,MAAM,CAAC,CAAD,CAAP,EAAY,EAAZ,CAAlB;QAAmCI,SAAS,EAAEJ,MAAM,CAAC,CAAD;MAApD,CAAd,EAAyEZ,KAAzE,CADO,GAC2EA,KADxF;IAEH;;;sCACiBrB,WAAW;MAAA;;MAAA,mBACO,KAAKH,KADZ;MAAA,IACjBsB,SADiB,gBACjBA,SADiB;MAAA,IACNhB,QADM,gBACNA,QADM;MAEzB,OAAOlB,UAAU,CAACkC,SAAD,EAAYnB,SAAZ,8DACTA,SADS,cACY,KAAKa,SAAL,EADZ,2CAETb,SAFS,qBAEmB,CAACG,QAFpB,iBAAjB;IAIH;;;gCACW;MAAA,mBACkB,KAAKN,KADvB;MAAA,IACAO,MADA,gBACAA,MADA;MAAA,IACQd,KADR,gBACQA,KADR;MAER,OAAO,CAAC,CAACc,MAAF,IAAY,CAAC,CAACd,KAArB;IACH;;;6BACQ;MACL,IAAMgD,mBAAmB,GAAG,KAAKR,sBAAL,EAA5B;MACA,OAAOQ,mBAAmB,KAAK,GAAxBA,IAA+BA,mBAAmB,KAAK,CAA9D;IACH;;;4BACO;MAAA,IACIC,GADJ,GACY,KAAK1C,KAAL,CAAR0C,GADJ;MAEJ,IAAMC,MAAM,GAAG,KAAKA,MAAL,EAAf;MACA,OAAQD,GAAG,IAAI,CAACC,MAARD,IAAmB,KAAK1B,SAAL,EAA3B;IACH;;;+BACU;MAAA,IACC4B,QADD,GACc,KAAK5C,KAAL,CAAb4C,QADD;MAEP,IAAMb,YAAY,GAAG,KAAKc,cAAL,EAArB;MACA,IAAMF,MAAM,GAAG,KAAKA,MAAL,EAAf;MACA,IAAMX,KAAK,GAAG,KAAKA,KAAL,EAAd;MACA,IAAMc,OAAO,GAAGf,YAAY,KAAK,IAAjBA,IAAyBA,YAAY,KAAKI,SAA1CJ,IAAuDA,YAAY,KAAK,EAAxF;MACA,OAAO,CAACe,OAAO,IAAKH,MAAM,IAAI,CAACC,QAAxB,KAAsC,CAACZ,KAA9C;IACH;;;qCACgB7B,WAAW;MAAA,IAChBK,IADgB,GACP,KAAKR,KAAL,CAATQ,IADgB;MAExB,IAAMuC,MAAM,GAAG,KAAKC,QAAL,EAAf;MACA,OAAOD,MAAM,IAAI,CAACvC,IAAXuC,GAAkB,IAAlBA,GAAyB/D;QAAMsC,SAAS,YAAKnB,SAAL;MAAf,GAA8CK,IAA9C,CAAhC;IACH;;;4CACuB;MAAA,IACZqB,KADY,GACF,KAAK7B,KAAL,CAAV6B,KADY;MAEpB,IAAMoB,UAAU,GAAGpB,KAAnB;;MACA,IAAI,CAACoB,UAAD,IAAeC,QAAOD,UAAP,MAAsB,QAAzC,EAAmD;QAC/C,OAAOd,SAAP;MACH;;MACD,OAAOnD,KAAK,CAACmE,YAANnE,CAAmBiE,UAAnBjE,EAA+B;QAClCwC,KAAK,EAAEa,SAAcA,SAAc,EAAd,EAAkB,KAAKjB,kBAAL,EAAlB,CAAd,EAA6D6B,UAAU,CAACjD,KAAXiD,IAAoBA,UAAU,CAACjD,KAAXiD,CAAiBzB,KAAlG;MAD2B,CAA/BxC,CAAP;IAGH;;;sCACiBmB,WAAWE,uBAAuB;MAAA;;MAAA,mBACtB,KAAKL,KADiB;MAAA,IACxCO,MADwC,gBACxCA,MADwC;MAAA,IAChCsB,KADgC,gBAChCA,KADgC;MAEhD,IAAME,YAAY,GAAG,KAAKc,cAAL,EAArB;MACA,IAAMb,KAAK,GAAG,KAAKA,KAAL,EAAd;MACA,IAAMe,MAAM,GAAG,KAAKC,QAAL,EAAf;MACA,IAAMI,eAAe,GAAGhE,UAAU,6DAC1Be,SAD0B,WACR6B,KADQ,2CAE1B7B,SAF0B,aAEN,CAAC6B,KAFK,2CAG1B7B,SAH0B,sBAGG,CAAC6B,KAAD,IAAUH,KAAV,IAAmBA,KAAK,CAACwB,QAAzB,IAAqCxB,KAAK,CAACwB,QAANxB,GAAiB/C,MAAjB+C,GAA0B,CAHlE,2CAI1B1B,SAJ0B,qBAINI,MAJM,GAIK,KAAKS,SAAL,EAJL,iBAAlC;MAMA,OAAO+B,MAAM,GAAG,IAAH,GAAW/D,oBAACK,YAAD;QAAcc,SAAS,EAAEE,qBAAzB;QAAgD,aAAW,CAAC0C,MAA5D;QAAoEzB,SAAS,EAAE8B,eAA/E;QAAgGvB,KAAK,EAAEE,YAAvG;QAAqHuB,gBAAgB,EAAE,KAAKC,qBAAL,EAAvI,CAAqK;QAArK;QACvBrB,KAAK,EAAE,KAAKsB,oBAAL,EADgB;QACahC,KAAK,EAAE,KAAKJ,kBAAL,EADpB;QAC+CqC,GAAG,EAAC;MADnD,EAAxB;IAEH;;;6BACQ;MACL,OAAOzE,oBAACO,cAAD,QAAiB,KAAKO,WAAtB,CAAP;IACH;;;;EApI8Bd,KAAK,CAAC0E;;SAApBhE,K;AAsIrBA,KAAK,CAACiE,YAANjE,GAAqB;EACjBmC,KAAK,EAAE,IADU;EAEjBe,QAAQ,EAAE,KAFO;EAGjBF,GAAG,EAAE,KAHY;EAIjBZ,aAAa,EAAE;AAJE,CAArBpC;AAMAA,KAAK,CAACkE,SAANlE,GAAkB;EACdmC,KAAK,EAAE5C,SAAS,CAAC4E,IADH;EAEdjB,QAAQ,EAAE3D,SAAS,CAAC6E,IAFN;EAGdpB,GAAG,EAAEzD,SAAS,CAAC6E,IAHD;EAIdhC,aAAa,EAAE7C,SAAS,CAAC8E;AAJX,CAAlBrE","names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","PropTypes","Animate","omit","classNames","ScrollNumber","PresetColorTypes","ConfigConsumer","isPresetColor","color","Badge","_classCallCheck","_this","arguments","renderBadge","getPrefixCls","props","customizePrefixCls","_a","prefixCls","customizeScrollNumberPrefixCls","scrollNumberPrefixCls","children","status","text","restProps","omitArr","scrollNumber","renderBadgeNumber","statusText","renderStatusText","statusCls","hasStatus","statusStyle","background","styleWithOffset","getStyleWithOffset","statusTextColor","className","getBadgeClassName","style","component","showProp","transitionName","transitionAppear","count","overflowCount","displayCount","isDot","getNumberedDispayCount","title","undefined","offset","_extends","right","parseInt","marginTop","numberedDispayCount","dot","isZero","showZero","getDispayCount","isEmpty","hidden","isHidden","customNode","_typeof","cloneElement","scrollNumberCls","toString","displayComponent","renderDispayComponent","getScrollNumberTitle","key","Component","defaultProps","propTypes","node","bool","number"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\react-youtube-clone-master\\client\\node_modules\\antd\\es\\badge\\badge\\index.jsx"],"sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport Animate from 'rc-animate';\nimport omit from 'omit.js';\nimport classNames from 'classnames';\nimport ScrollNumber from './ScrollNumber';\nimport { PresetColorTypes } from '../_util/colors';\nimport { ConfigConsumer } from '../config-provider';\nfunction isPresetColor(color) {\n    return PresetColorTypes.indexOf(color) !== -1;\n}\nexport default class Badge extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderBadge = ({ getPrefixCls }) => {\n            const _a = this.props, { prefixCls: customizePrefixCls, scrollNumberPrefixCls: customizeScrollNumberPrefixCls, children, status, text, color } = _a, restProps = __rest(_a, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\"]);\n            const omitArr = [\n                'count',\n                'showZero',\n                'overflowCount',\n                'className',\n                'style',\n                'dot',\n                'offset',\n                'title',\n            ];\n            const prefixCls = getPrefixCls('badge', customizePrefixCls);\n            const scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n            const scrollNumber = this.renderBadgeNumber(prefixCls, scrollNumberPrefixCls);\n            const statusText = this.renderStatusText(prefixCls);\n            const statusCls = classNames({\n                [`${prefixCls}-status-dot`]: this.hasStatus(),\n                [`${prefixCls}-status-${status}`]: !!status,\n                [`${prefixCls}-status-${color}`]: isPresetColor(color),\n            });\n            const statusStyle = {};\n            if (color && !isPresetColor(color)) {\n                statusStyle.background = color;\n            }\n            // <Badge status=\"success\" />\n            if (!children && this.hasStatus()) {\n                const styleWithOffset = this.getStyleWithOffset();\n                const statusTextColor = styleWithOffset && styleWithOffset.color;\n                return (<span {...omit(restProps, omitArr)} className={this.getBadgeClassName(prefixCls)} style={styleWithOffset}>\n          <span className={statusCls} style={statusStyle}/>\n          <span style={{ color: statusTextColor }} className={`${prefixCls}-status-text`}>\n            {text}\n          </span>\n        </span>);\n            }\n            return (<span {...omit(restProps, omitArr)} className={this.getBadgeClassName(prefixCls)}>\n        {children}\n        <Animate component=\"\" showProp=\"data-show\" transitionName={children ? `${prefixCls}-zoom` : ''} transitionAppear>\n          {scrollNumber}\n        </Animate>\n        {statusText}\n      </span>);\n        };\n    }\n    getNumberedDispayCount() {\n        const { count, overflowCount } = this.props;\n        const displayCount = count > overflowCount ? `${overflowCount}+` : count;\n        return displayCount;\n    }\n    getDispayCount() {\n        const isDot = this.isDot();\n        // dot mode don't need count\n        if (isDot) {\n            return '';\n        }\n        return this.getNumberedDispayCount();\n    }\n    getScrollNumberTitle() {\n        const { title, count } = this.props;\n        if (title) {\n            return title;\n        }\n        return typeof count === 'string' || typeof count === 'number' ? count : undefined;\n    }\n    getStyleWithOffset() {\n        const { offset, style } = this.props;\n        return offset\n            ? Object.assign({ right: -parseInt(offset[0], 10), marginTop: offset[1] }, style) : style;\n    }\n    getBadgeClassName(prefixCls) {\n        const { className, children } = this.props;\n        return classNames(className, prefixCls, {\n            [`${prefixCls}-status`]: this.hasStatus(),\n            [`${prefixCls}-not-a-wrapper`]: !children,\n        });\n    }\n    hasStatus() {\n        const { status, color } = this.props;\n        return !!status || !!color;\n    }\n    isZero() {\n        const numberedDispayCount = this.getNumberedDispayCount();\n        return numberedDispayCount === '0' || numberedDispayCount === 0;\n    }\n    isDot() {\n        const { dot } = this.props;\n        const isZero = this.isZero();\n        return (dot && !isZero) || this.hasStatus();\n    }\n    isHidden() {\n        const { showZero } = this.props;\n        const displayCount = this.getDispayCount();\n        const isZero = this.isZero();\n        const isDot = this.isDot();\n        const isEmpty = displayCount === null || displayCount === undefined || displayCount === '';\n        return (isEmpty || (isZero && !showZero)) && !isDot;\n    }\n    renderStatusText(prefixCls) {\n        const { text } = this.props;\n        const hidden = this.isHidden();\n        return hidden || !text ? null : <span className={`${prefixCls}-status-text`}>{text}</span>;\n    }\n    renderDispayComponent() {\n        const { count } = this.props;\n        const customNode = count;\n        if (!customNode || typeof customNode !== 'object') {\n            return undefined;\n        }\n        return React.cloneElement(customNode, {\n            style: Object.assign(Object.assign({}, this.getStyleWithOffset()), (customNode.props && customNode.props.style)),\n        });\n    }\n    renderBadgeNumber(prefixCls, scrollNumberPrefixCls) {\n        const { status, count } = this.props;\n        const displayCount = this.getDispayCount();\n        const isDot = this.isDot();\n        const hidden = this.isHidden();\n        const scrollNumberCls = classNames({\n            [`${prefixCls}-dot`]: isDot,\n            [`${prefixCls}-count`]: !isDot,\n            [`${prefixCls}-multiple-words`]: !isDot && count && count.toString && count.toString().length > 1,\n            [`${prefixCls}-status-${status}`]: this.hasStatus(),\n        });\n        return hidden ? null : (<ScrollNumber prefixCls={scrollNumberPrefixCls} data-show={!hidden} className={scrollNumberCls} count={displayCount} displayComponent={this.renderDispayComponent()} // <Badge status=\"success\" count={<Icon type=\"xxx\" />}></Badge>\n         title={this.getScrollNumberTitle()} style={this.getStyleWithOffset()} key=\"scrollNumber\"/>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderBadge}</ConfigConsumer>;\n    }\n}\nBadge.defaultProps = {\n    count: null,\n    showZero: false,\n    dot: false,\n    overflowCount: 99,\n};\nBadge.propTypes = {\n    count: PropTypes.node,\n    showZero: PropTypes.bool,\n    dot: PropTypes.bool,\n    overflowCount: PropTypes.number,\n};\n"]},"metadata":{},"sourceType":"module"}