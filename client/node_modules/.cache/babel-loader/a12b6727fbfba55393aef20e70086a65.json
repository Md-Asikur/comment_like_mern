{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport RcDropdown from 'rc-dropdown';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport Icon from '../icon';\nimport { tuple } from '../_util/type';\nvar Placements = tuple('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');\n\nvar Dropdown = /*#__PURE__*/function (_React$Component) {\n  _inherits(Dropdown, _React$Component);\n\n  function Dropdown() {\n    var _this;\n\n    _classCallCheck(this, Dropdown);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dropdown).apply(this, arguments));\n\n    _this.renderOverlay = function (prefixCls) {\n      // rc-dropdown already can process the function of overlay, but we have check logic here.\n      // So we need render the element to check and pass back to rc-dropdown.\n      var overlay = _this.props.overlay;\n      var overlayNode;\n\n      if (typeof overlay === 'function') {\n        overlayNode = overlay();\n      } else {\n        overlayNode = overlay;\n      }\n\n      overlayNode = React.Children.only(overlayNode);\n      var overlayProps = overlayNode.props; // Warning if use other mode\n\n      warning(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', \"mode=\\\"\".concat(overlayProps.mode, \"\\\" is not supported for Dropdown's Menu.\")); // menu cannot be selectable in dropdown defaultly\n      // menu should be focusable in dropdown defaultly\n\n      var _overlayProps$selecta = overlayProps.selectable,\n          selectable = _overlayProps$selecta === void 0 ? false : _overlayProps$selecta,\n          _overlayProps$focusab = overlayProps.focusable,\n          focusable = _overlayProps$focusab === void 0 ? true : _overlayProps$focusab;\n      var expandIcon = React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow\")\n      }, React.createElement(Icon, {\n        type: \"right\",\n        className: \"\".concat(prefixCls, \"-menu-submenu-arrow-icon\")\n      }));\n      var fixedModeOverlay = typeof overlayNode.type === 'string' ? overlay : React.cloneElement(overlayNode, {\n        mode: 'vertical',\n        selectable: selectable,\n        focusable: focusable,\n        expandIcon: expandIcon\n      });\n      return fixedModeOverlay;\n    };\n\n    _this.renderDropDown = function (_ref) {\n      var getContextPopupContainer = _ref.getPopupContainer,\n          getPrefixCls = _ref.getPrefixCls;\n      var _this$props = _this.props,\n          customizePrefixCls = _this$props.prefixCls,\n          children = _this$props.children,\n          trigger = _this$props.trigger,\n          disabled = _this$props.disabled,\n          getPopupContainer = _this$props.getPopupContainer;\n      var prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n      var child = React.Children.only(children);\n      var dropdownTrigger = React.cloneElement(child, {\n        className: classNames(child.props.className, \"\".concat(prefixCls, \"-trigger\")),\n        disabled: disabled\n      });\n      var triggerActions = disabled ? [] : trigger;\n      var alignPoint;\n\n      if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n        alignPoint = true;\n      }\n\n      return React.createElement(RcDropdown, _extends({\n        alignPoint: alignPoint\n      }, _this.props, {\n        prefixCls: prefixCls,\n        getPopupContainer: getPopupContainer || getContextPopupContainer,\n        transitionName: _this.getTransitionName(),\n        trigger: triggerActions,\n        overlay: function overlay() {\n          return _this.renderOverlay(prefixCls);\n        }\n      }), dropdownTrigger);\n    };\n\n    return _this;\n  }\n\n  _createClass(Dropdown, [{\n    key: \"getTransitionName\",\n    value: function getTransitionName() {\n      var _this$props2 = this.props,\n          _this$props2$placemen = _this$props2.placement,\n          placement = _this$props2$placemen === void 0 ? '' : _this$props2$placemen,\n          transitionName = _this$props2.transitionName;\n\n      if (transitionName !== undefined) {\n        return transitionName;\n      }\n\n      if (placement.indexOf('top') >= 0) {\n        return 'slide-down';\n      }\n\n      return 'slide-up';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderDropDown);\n    }\n  }]);\n\n  return Dropdown;\n}(React.Component);\n\nexport { Dropdown as default };\nDropdown.defaultProps = {\n  mouseEnterDelay: 0.15,\n  mouseLeaveDelay: 0.1,\n  placement: 'bottomLeft'\n};","map":{"version":3,"mappings":"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","names":["React","RcDropdown","classNames","ConfigConsumer","warning","Icon","tuple","Placements","Dropdown","_classCallCheck","_this","arguments","renderOverlay","prefixCls","overlay","props","overlayNode","Children","only","overlayProps","mode","selectable","focusable","expandIcon","className","type","fixedModeOverlay","cloneElement","renderDropDown","getContextPopupContainer","getPopupContainer","getPrefixCls","customizePrefixCls","children","trigger","disabled","child","dropdownTrigger","triggerActions","alignPoint","indexOf","transitionName","getTransitionName","placement","undefined","Component","defaultProps","mouseEnterDelay","mouseLeaveDelay"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\Youtube Deploy\\client\\node_modules\\antd\\es\\dropdown\\dropdown\\dropdown.jsx"],"sourcesContent":["import * as React from 'react';\nimport RcDropdown from 'rc-dropdown';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nimport warning from '../_util/warning';\nimport Icon from '../icon';\nimport { tuple } from '../_util/type';\nconst Placements = tuple('topLeft', 'topCenter', 'topRight', 'bottomLeft', 'bottomCenter', 'bottomRight');\nexport default class Dropdown extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.renderOverlay = (prefixCls) => {\n            // rc-dropdown already can process the function of overlay, but we have check logic here.\n            // So we need render the element to check and pass back to rc-dropdown.\n            const { overlay } = this.props;\n            let overlayNode;\n            if (typeof overlay === 'function') {\n                overlayNode = overlay();\n            }\n            else {\n                overlayNode = overlay;\n            }\n            overlayNode = React.Children.only(overlayNode);\n            const overlayProps = overlayNode.props;\n            // Warning if use other mode\n            warning(!overlayProps.mode || overlayProps.mode === 'vertical', 'Dropdown', `mode=\"${overlayProps.mode}\" is not supported for Dropdown's Menu.`);\n            // menu cannot be selectable in dropdown defaultly\n            // menu should be focusable in dropdown defaultly\n            const { selectable = false, focusable = true } = overlayProps;\n            const expandIcon = (<span className={`${prefixCls}-menu-submenu-arrow`}>\n        <Icon type=\"right\" className={`${prefixCls}-menu-submenu-arrow-icon`}/>\n      </span>);\n            const fixedModeOverlay = typeof overlayNode.type === 'string'\n                ? overlay\n                : React.cloneElement(overlayNode, {\n                    mode: 'vertical',\n                    selectable,\n                    focusable,\n                    expandIcon,\n                });\n            return fixedModeOverlay;\n        };\n        this.renderDropDown = ({ getPopupContainer: getContextPopupContainer, getPrefixCls, }) => {\n            const { prefixCls: customizePrefixCls, children, trigger, disabled, getPopupContainer, } = this.props;\n            const prefixCls = getPrefixCls('dropdown', customizePrefixCls);\n            const child = React.Children.only(children);\n            const dropdownTrigger = React.cloneElement(child, {\n                className: classNames(child.props.className, `${prefixCls}-trigger`),\n                disabled,\n            });\n            const triggerActions = disabled ? [] : trigger;\n            let alignPoint;\n            if (triggerActions && triggerActions.indexOf('contextMenu') !== -1) {\n                alignPoint = true;\n            }\n            return (<RcDropdown alignPoint={alignPoint} {...this.props} prefixCls={prefixCls} getPopupContainer={getPopupContainer || getContextPopupContainer} transitionName={this.getTransitionName()} trigger={triggerActions} overlay={() => this.renderOverlay(prefixCls)}>\n        {dropdownTrigger}\n      </RcDropdown>);\n        };\n    }\n    getTransitionName() {\n        const { placement = '', transitionName } = this.props;\n        if (transitionName !== undefined) {\n            return transitionName;\n        }\n        if (placement.indexOf('top') >= 0) {\n            return 'slide-down';\n        }\n        return 'slide-up';\n    }\n    render() {\n        return <ConfigConsumer>{this.renderDropDown}</ConfigConsumer>;\n    }\n}\nDropdown.defaultProps = {\n    mouseEnterDelay: 0.15,\n    mouseLeaveDelay: 0.1,\n    placement: 'bottomLeft',\n};\n"]},"metadata":{},"sourceType":"module"}