{"ast":null,"code":"function _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nimport * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport { ConfigConsumer } from '../config-provider';\nvar Option = Select.Option;\n\nfunction getMonthsLocale(value) {\n  var current = value.clone();\n  var localeData = value.localeData();\n  var months = [];\n\n  for (var i = 0; i < 12; i++) {\n    current.month(i);\n    months.push(localeData.monthsShort(current));\n  }\n\n  return months;\n}\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  _inherits(Header, _React$Component);\n\n  function Header() {\n    var _this;\n\n    _classCallCheck(this, Header);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Header).apply(this, arguments));\n\n    _this.onYearChange = function (year) {\n      var _this$props = _this.props,\n          value = _this$props.value,\n          validRange = _this$props.validRange;\n      var newValue = value.clone();\n      newValue.year(parseInt(year, 10)); // switch the month so that it remains within range when year changes\n\n      if (validRange) {\n        var _validRange = _slicedToArray(validRange, 2),\n            start = _validRange[0],\n            end = _validRange[1];\n\n        var newYear = newValue.get('year');\n        var newMonth = newValue.get('month');\n\n        if (newYear === end.get('year') && newMonth > end.get('month')) {\n          newValue.month(end.get('month'));\n        }\n\n        if (newYear === start.get('year') && newMonth < start.get('month')) {\n          newValue.month(start.get('month'));\n        }\n      }\n\n      var onValueChange = _this.props.onValueChange;\n\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n\n    _this.onMonthChange = function (month) {\n      var newValue = _this.props.value.clone();\n\n      newValue.month(parseInt(month, 10));\n      var onValueChange = _this.props.onValueChange;\n\n      if (onValueChange) {\n        onValueChange(newValue);\n      }\n    };\n\n    _this.onInternalTypeChange = function (e) {\n      _this.onTypeChange(e.target.value);\n    };\n\n    _this.onTypeChange = function (type) {\n      var onTypeChange = _this.props.onTypeChange;\n\n      if (onTypeChange) {\n        onTypeChange(type);\n      }\n    };\n\n    _this.getCalenderHeaderNode = function (node) {\n      _this.calenderHeaderNode = node;\n    };\n\n    _this.getMonthYearSelections = function (getPrefixCls) {\n      var _this$props2 = _this.props,\n          customizePrefixCls = _this$props2.prefixCls,\n          type = _this$props2.type,\n          value = _this$props2.value;\n      var prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n\n      var yearReactNode = _this.getYearSelectElement(prefixCls, value.year());\n\n      var monthReactNode = type === 'month' ? _this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value)) : null;\n      return {\n        yearReactNode: yearReactNode,\n        monthReactNode: monthReactNode\n      };\n    };\n\n    _this.getTypeSwitch = function () {\n      var _this$props3 = _this.props,\n          _this$props3$locale = _this$props3.locale,\n          locale = _this$props3$locale === void 0 ? {} : _this$props3$locale,\n          type = _this$props3.type,\n          fullscreen = _this$props3.fullscreen;\n      var size = fullscreen ? 'default' : 'small';\n      return React.createElement(Group, {\n        onChange: _this.onInternalTypeChange,\n        value: type,\n        size: size\n      }, React.createElement(Button, {\n        value: \"month\"\n      }, locale.month), React.createElement(Button, {\n        value: \"year\"\n      }, locale.year));\n    };\n\n    _this.headerRenderCustom = function (headerRender) {\n      var _this$props4 = _this.props,\n          type = _this$props4.type,\n          onValueChange = _this$props4.onValueChange,\n          value = _this$props4.value;\n      return headerRender({\n        value: value,\n        type: type || 'month',\n        onChange: onValueChange,\n        onTypeChange: _this.onTypeChange\n      });\n    };\n\n    _this.renderHeader = function (_ref) {\n      var getPrefixCls = _ref.getPrefixCls;\n      var _this$props5 = _this.props,\n          prefixCls = _this$props5.prefixCls,\n          headerRender = _this$props5.headerRender;\n\n      var typeSwitch = _this.getTypeSwitch();\n\n      var _this$getMonthYearSel = _this.getMonthYearSelections(getPrefixCls),\n          yearReactNode = _this$getMonthYearSel.yearReactNode,\n          monthReactNode = _this$getMonthYearSel.monthReactNode;\n\n      return headerRender ? _this.headerRenderCustom(headerRender) : React.createElement(\"div\", {\n        className: \"\".concat(prefixCls, \"-header\"),\n        ref: _this.getCalenderHeaderNode\n      }, yearReactNode, monthReactNode, typeSwitch);\n    };\n\n    return _this;\n  }\n\n  _createClass(Header, [{\n    key: \"getYearSelectElement\",\n    value: function getYearSelectElement(prefixCls, year) {\n      var _this2 = this;\n\n      var _this$props6 = this.props,\n          yearSelectOffset = _this$props6.yearSelectOffset,\n          yearSelectTotal = _this$props6.yearSelectTotal,\n          _this$props6$locale = _this$props6.locale,\n          locale = _this$props6$locale === void 0 ? {} : _this$props6$locale,\n          fullscreen = _this$props6.fullscreen,\n          validRange = _this$props6.validRange;\n      var start = year - yearSelectOffset;\n      var end = start + yearSelectTotal;\n\n      if (validRange) {\n        start = validRange[0].get('year');\n        end = validRange[1].get('year') + 1;\n      }\n\n      var suffix = locale.year === '年' ? '年' : '';\n      var options = [];\n\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: \"\".concat(index)\n        }, index + suffix));\n      }\n\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: \"\".concat(prefixCls, \"-year-select\"),\n        onChange: this.onYearChange,\n        value: String(year),\n        getPopupContainer: function getPopupContainer() {\n          return _this2.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: \"getMonthSelectElement\",\n    value: function getMonthSelectElement(prefixCls, month, months) {\n      var _this3 = this;\n\n      var _this$props7 = this.props,\n          fullscreen = _this$props7.fullscreen,\n          validRange = _this$props7.validRange,\n          value = _this$props7.value;\n      var options = [];\n      var start = 0;\n      var end = 12;\n\n      if (validRange) {\n        var _validRange2 = _slicedToArray(validRange, 2),\n            rangeStart = _validRange2[0],\n            rangeEnd = _validRange2[1];\n\n        var currentYear = value.get('year');\n\n        if (rangeEnd.get('year') === currentYear) {\n          end = rangeEnd.get('month') + 1;\n        }\n\n        if (rangeStart.get('year') === currentYear) {\n          start = rangeStart.get('month');\n        }\n      }\n\n      for (var index = start; index < end; index++) {\n        options.push(React.createElement(Option, {\n          key: \"\".concat(index)\n        }, months[index]));\n      }\n\n      return React.createElement(Select, {\n        size: fullscreen ? 'default' : 'small',\n        dropdownMatchSelectWidth: false,\n        className: \"\".concat(prefixCls, \"-month-select\"),\n        value: String(month),\n        onChange: this.onMonthChange,\n        getPopupContainer: function getPopupContainer() {\n          return _this3.calenderHeaderNode;\n        }\n      }, options);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ConfigConsumer, null, this.renderHeader);\n    }\n  }]);\n\n  return Header;\n}(React.Component);\n\nexport { Header as default };\nHeader.defaultProps = {\n  yearSelectOffset: 10,\n  yearSelectTotal: 20\n};","map":{"version":3,"mappings":"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","names":["React","Select","Group","Button","ConfigConsumer","Option","getMonthsLocale","value","current","clone","localeData","months","i","month","push","monthsShort","Header","_classCallCheck","_this","arguments","onYearChange","year","props","validRange","newValue","parseInt","start","end","newYear","get","newMonth","onValueChange","onMonthChange","onInternalTypeChange","e","onTypeChange","target","type","getCalenderHeaderNode","node","calenderHeaderNode","getMonthYearSelections","getPrefixCls","customizePrefixCls","prefixCls","yearReactNode","getYearSelectElement","monthReactNode","getMonthSelectElement","getTypeSwitch","locale","fullscreen","size","onChange","headerRenderCustom","headerRender","renderHeader","typeSwitch","className","ref","yearSelectOffset","yearSelectTotal","suffix","options","index","key","dropdownMatchSelectWidth","String","getPopupContainer","_this2","rangeStart","rangeEnd","currentYear","_this3","Component","defaultProps"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\react-youtube-clone-master\\client\\node_modules\\antd\\es\\calendar\\calendar\\Header.jsx"],"sourcesContent":["import * as React from 'react';\nimport Select from '../select';\nimport { Group, Button } from '../radio';\nimport { ConfigConsumer } from '../config-provider';\nconst { Option } = Select;\nfunction getMonthsLocale(value) {\n    const current = value.clone();\n    const localeData = value.localeData();\n    const months = [];\n    for (let i = 0; i < 12; i++) {\n        current.month(i);\n        months.push(localeData.monthsShort(current));\n    }\n    return months;\n}\nexport default class Header extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.onYearChange = (year) => {\n            const { value, validRange } = this.props;\n            const newValue = value.clone();\n            newValue.year(parseInt(year, 10));\n            // switch the month so that it remains within range when year changes\n            if (validRange) {\n                const [start, end] = validRange;\n                const newYear = newValue.get('year');\n                const newMonth = newValue.get('month');\n                if (newYear === end.get('year') && newMonth > end.get('month')) {\n                    newValue.month(end.get('month'));\n                }\n                if (newYear === start.get('year') && newMonth < start.get('month')) {\n                    newValue.month(start.get('month'));\n                }\n            }\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onMonthChange = (month) => {\n            const newValue = this.props.value.clone();\n            newValue.month(parseInt(month, 10));\n            const { onValueChange } = this.props;\n            if (onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        this.onInternalTypeChange = (e) => {\n            this.onTypeChange(e.target.value);\n        };\n        this.onTypeChange = (type) => {\n            const { onTypeChange } = this.props;\n            if (onTypeChange) {\n                onTypeChange(type);\n            }\n        };\n        this.getCalenderHeaderNode = (node) => {\n            this.calenderHeaderNode = node;\n        };\n        this.getMonthYearSelections = (getPrefixCls) => {\n            const { prefixCls: customizePrefixCls, type, value } = this.props;\n            const prefixCls = getPrefixCls('fullcalendar', customizePrefixCls);\n            const yearReactNode = this.getYearSelectElement(prefixCls, value.year());\n            const monthReactNode = type === 'month'\n                ? this.getMonthSelectElement(prefixCls, value.month(), getMonthsLocale(value))\n                : null;\n            return {\n                yearReactNode,\n                monthReactNode,\n            };\n        };\n        this.getTypeSwitch = () => {\n            const { locale = {}, type, fullscreen } = this.props;\n            const size = fullscreen ? 'default' : 'small';\n            return (<Group onChange={this.onInternalTypeChange} value={type} size={size}>\n        <Button value=\"month\">{locale.month}</Button>\n        <Button value=\"year\">{locale.year}</Button>\n      </Group>);\n        };\n        this.headerRenderCustom = (headerRender) => {\n            const { type, onValueChange, value } = this.props;\n            return headerRender({\n                value,\n                type: type || 'month',\n                onChange: onValueChange,\n                onTypeChange: this.onTypeChange,\n            });\n        };\n        this.renderHeader = ({ getPrefixCls }) => {\n            const { prefixCls, headerRender } = this.props;\n            const typeSwitch = this.getTypeSwitch();\n            const { yearReactNode, monthReactNode } = this.getMonthYearSelections(getPrefixCls);\n            return headerRender ? (this.headerRenderCustom(headerRender)) : (<div className={`${prefixCls}-header`} ref={this.getCalenderHeaderNode}>\n        {yearReactNode}\n        {monthReactNode}\n        {typeSwitch}\n      </div>);\n        };\n    }\n    getYearSelectElement(prefixCls, year) {\n        const { yearSelectOffset, yearSelectTotal, locale = {}, fullscreen, validRange } = this.props;\n        let start = year - yearSelectOffset;\n        let end = start + yearSelectTotal;\n        if (validRange) {\n            start = validRange[0].get('year');\n            end = validRange[1].get('year') + 1;\n        }\n        const suffix = locale.year === '年' ? '年' : '';\n        const options = [];\n        for (let index = start; index < end; index++) {\n            options.push(<Option key={`${index}`}>{index + suffix}</Option>);\n        }\n        return (<Select size={fullscreen ? 'default' : 'small'} dropdownMatchSelectWidth={false} className={`${prefixCls}-year-select`} onChange={this.onYearChange} value={String(year)} getPopupContainer={() => this.calenderHeaderNode}>\n        {options}\n      </Select>);\n    }\n    getMonthSelectElement(prefixCls, month, months) {\n        const { fullscreen, validRange, value } = this.props;\n        const options = [];\n        let start = 0;\n        let end = 12;\n        if (validRange) {\n            const [rangeStart, rangeEnd] = validRange;\n            const currentYear = value.get('year');\n            if (rangeEnd.get('year') === currentYear) {\n                end = rangeEnd.get('month') + 1;\n            }\n            if (rangeStart.get('year') === currentYear) {\n                start = rangeStart.get('month');\n            }\n        }\n        for (let index = start; index < end; index++) {\n            options.push(<Option key={`${index}`}>{months[index]}</Option>);\n        }\n        return (<Select size={fullscreen ? 'default' : 'small'} dropdownMatchSelectWidth={false} className={`${prefixCls}-month-select`} value={String(month)} onChange={this.onMonthChange} getPopupContainer={() => this.calenderHeaderNode}>\n        {options}\n      </Select>);\n    }\n    render() {\n        return <ConfigConsumer>{this.renderHeader}</ConfigConsumer>;\n    }\n}\nHeader.defaultProps = {\n    yearSelectOffset: 10,\n    yearSelectTotal: 20,\n};\n"]},"metadata":{},"sourceType":"module"}