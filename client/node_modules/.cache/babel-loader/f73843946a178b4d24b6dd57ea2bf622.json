{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { placements as rcPlacements } from \"rc-tooltip/es/placements\";\nvar autoAdjustOverflowEnabled = {\n  adjustX: 1,\n  adjustY: 1\n};\nvar autoAdjustOverflowDisabled = {\n  adjustX: 0,\n  adjustY: 0\n};\nvar targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n  if (typeof autoAdjustOverflow === 'boolean') {\n    return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n  }\n\n  return _extends(_extends({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\nexport default function getPlacements() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$arrowWidth = config.arrowWidth,\n      arrowWidth = _config$arrowWidth === void 0 ? 5 : _config$arrowWidth,\n      _config$horizontalArr = config.horizontalArrowShift,\n      horizontalArrowShift = _config$horizontalArr === void 0 ? 16 : _config$horizontalArr,\n      _config$verticalArrow = config.verticalArrowShift,\n      verticalArrowShift = _config$verticalArrow === void 0 ? 12 : _config$verticalArrow,\n      _config$autoAdjustOve = config.autoAdjustOverflow,\n      autoAdjustOverflow = _config$autoAdjustOve === void 0 ? true : _config$autoAdjustOve;\n  var placementMap = {\n    left: {\n      points: ['cr', 'cl'],\n      offset: [-4, 0]\n    },\n    right: {\n      points: ['cl', 'cr'],\n      offset: [4, 0]\n    },\n    top: {\n      points: ['bc', 'tc'],\n      offset: [0, -4]\n    },\n    bottom: {\n      points: ['tc', 'bc'],\n      offset: [0, 4]\n    },\n    topLeft: {\n      points: ['bl', 'tc'],\n      offset: [-(horizontalArrowShift + arrowWidth), -4]\n    },\n    leftTop: {\n      points: ['tr', 'cl'],\n      offset: [-4, -(verticalArrowShift + arrowWidth)]\n    },\n    topRight: {\n      points: ['br', 'tc'],\n      offset: [horizontalArrowShift + arrowWidth, -4]\n    },\n    rightTop: {\n      points: ['tl', 'cr'],\n      offset: [4, -(verticalArrowShift + arrowWidth)]\n    },\n    bottomRight: {\n      points: ['tr', 'bc'],\n      offset: [horizontalArrowShift + arrowWidth, 4]\n    },\n    rightBottom: {\n      points: ['bl', 'cr'],\n      offset: [4, verticalArrowShift + arrowWidth]\n    },\n    bottomLeft: {\n      points: ['tl', 'bc'],\n      offset: [-(horizontalArrowShift + arrowWidth), 4]\n    },\n    leftBottom: {\n      points: ['br', 'cl'],\n      offset: [-4, verticalArrowShift + arrowWidth]\n    }\n  };\n  Object.keys(placementMap).forEach(function (key) {\n    placementMap[key] = config.arrowPointAtCenter ? _extends(_extends({}, placementMap[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow),\n      targetOffset: targetOffset\n    }) : _extends(_extends({}, rcPlacements[key]), {\n      overflow: getOverflowOptions(autoAdjustOverflow)\n    });\n    placementMap[key].ignoreShake = true;\n  });\n  return placementMap;\n}","map":{"version":3,"mappings":"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","names":["placements","rcPlacements","autoAdjustOverflowEnabled","adjustX","adjustY","autoAdjustOverflowDisabled","targetOffset","getOverflowOptions","autoAdjustOverflow","_extends","getPlacements","config","arrowWidth","horizontalArrowShift","verticalArrowShift","placementMap","left","points","offset","right","top","bottom","topLeft","leftTop","topRight","rightTop","bottomRight","rightBottom","bottomLeft","leftBottom","Object","keys","forEach","key","arrowPointAtCenter","overflow","ignoreShake"],"sources":["C:\\Users\\scs\\OneDrive\\Desktop\\react-youtube-clone-master\\client\\node_modules\\antd\\es\\tooltip\\tooltip\\placements.jsx"],"sourcesContent":["import { placements as rcPlacements } from 'rc-tooltip/lib/placements';\nconst autoAdjustOverflowEnabled = {\n    adjustX: 1,\n    adjustY: 1,\n};\nconst autoAdjustOverflowDisabled = {\n    adjustX: 0,\n    adjustY: 0,\n};\nconst targetOffset = [0, 0];\nexport function getOverflowOptions(autoAdjustOverflow) {\n    if (typeof autoAdjustOverflow === 'boolean') {\n        return autoAdjustOverflow ? autoAdjustOverflowEnabled : autoAdjustOverflowDisabled;\n    }\n    return Object.assign(Object.assign({}, autoAdjustOverflowDisabled), autoAdjustOverflow);\n}\nexport default function getPlacements(config = {}) {\n    const { arrowWidth = 5, horizontalArrowShift = 16, verticalArrowShift = 12, autoAdjustOverflow = true, } = config;\n    const placementMap = {\n        left: {\n            points: ['cr', 'cl'],\n            offset: [-4, 0],\n        },\n        right: {\n            points: ['cl', 'cr'],\n            offset: [4, 0],\n        },\n        top: {\n            points: ['bc', 'tc'],\n            offset: [0, -4],\n        },\n        bottom: {\n            points: ['tc', 'bc'],\n            offset: [0, 4],\n        },\n        topLeft: {\n            points: ['bl', 'tc'],\n            offset: [-(horizontalArrowShift + arrowWidth), -4],\n        },\n        leftTop: {\n            points: ['tr', 'cl'],\n            offset: [-4, -(verticalArrowShift + arrowWidth)],\n        },\n        topRight: {\n            points: ['br', 'tc'],\n            offset: [horizontalArrowShift + arrowWidth, -4],\n        },\n        rightTop: {\n            points: ['tl', 'cr'],\n            offset: [4, -(verticalArrowShift + arrowWidth)],\n        },\n        bottomRight: {\n            points: ['tr', 'bc'],\n            offset: [horizontalArrowShift + arrowWidth, 4],\n        },\n        rightBottom: {\n            points: ['bl', 'cr'],\n            offset: [4, verticalArrowShift + arrowWidth],\n        },\n        bottomLeft: {\n            points: ['tl', 'bc'],\n            offset: [-(horizontalArrowShift + arrowWidth), 4],\n        },\n        leftBottom: {\n            points: ['br', 'cl'],\n            offset: [-4, verticalArrowShift + arrowWidth],\n        },\n    };\n    Object.keys(placementMap).forEach(key => {\n        placementMap[key] = config.arrowPointAtCenter\n            ? Object.assign(Object.assign({}, placementMap[key]), { overflow: getOverflowOptions(autoAdjustOverflow), targetOffset }) : Object.assign(Object.assign({}, rcPlacements[key]), { overflow: getOverflowOptions(autoAdjustOverflow) });\n        placementMap[key].ignoreShake = true;\n    });\n    return placementMap;\n}\n"]},"metadata":{},"sourceType":"module"}